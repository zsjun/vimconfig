{"ast":null,"code":"import _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useAsyncLoading } from './useAsyncLoading';\nexport var usePagination = function usePagination(fetch, options) {\n  var _page$pageSize$params = _objectSpread({\n    page: 1,\n    pageSize: 12,\n    params: {}\n  }, options || {}),\n      defaultPage = _page$pageSize$params.page,\n      defaultPageSize = _page$pageSize$params.pageSize,\n      defaultParams = _page$pageSize$params.params,\n      after = _page$pageSize$params.after;\n\n  var _useAsyncLoading = useAsyncLoading(fetch),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 2),\n      api = _useAsyncLoading2[0],\n      loading = _useAsyncLoading2[1];\n\n  var _useState = useState(defaultPage),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState(defaultPageSize),\n      pageSize = _useState2[0],\n      setPageSize = _useState2[1];\n\n  var _useState3 = useState(defaultParams),\n      params = _useState3[0],\n      setParams = _useState3[1];\n\n  var _useState4 = useState(0),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState([]),\n      data = _useState5[0],\n      setData = _useState5[1];\n\n  var callAfter = useCallback(function () {\n    after && after({\n      page: page,\n      pageSize: pageSize,\n      data: data,\n      total: total,\n      loading: loading\n    });\n  }, [after, page, pageSize, data, total, loading]);\n  var query = useCallback(function () {\n    return api.apply(void 0, arguments).then(function (res) {\n      setData(res[0]);\n      setTotal(res[1]);\n      callAfter();\n      return res;\n    });\n  }, [api, callAfter]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  var refresh = useCallback(function () {\n    return query(_objectSpread({\n      page: page,\n      pageSize: pageSize\n    }, params));\n  }, [page, pageSize, params]);\n  var reset = useCallback(function () {\n    setPage(defaultPage);\n    setPageSize(defaultPageSize);\n    setParams(defaultParams);\n  }, [defaultPage, defaultPageSize, defaultParams]);\n  useEffect(function () {\n    query(_objectSpread({\n      page: page,\n      pageSize: pageSize\n    }, params)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, pageSize, params]);\n  return {\n    loading: loading,\n    data: data,\n    total: total,\n    page: page,\n    pageSize: pageSize,\n    params: params,\n    setPage: setPage,\n    setPageSize: setPageSize,\n    setParams: setParams,\n    refresh: refresh,\n    reset: reset\n  };\n};","map":null,"metadata":{},"sourceType":"module"}