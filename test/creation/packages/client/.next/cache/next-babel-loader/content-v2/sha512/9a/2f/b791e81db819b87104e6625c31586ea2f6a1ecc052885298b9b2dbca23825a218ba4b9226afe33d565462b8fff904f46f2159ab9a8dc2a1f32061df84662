{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport cls from 'classnames';\nimport { useTranslations } from 'next-intl';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { ArticleProvider } from '@/providers/article';\nimport { ListTrail } from '@/components/Animation/Trail';\nimport { ArticleList } from '@components/ArticleList';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport style from './index.module.scss';\nexport var ArticleRecommend = function ArticleRecommend(_ref) {\n  var _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'vertical' : _ref$mode,\n      _ref$articleId = _ref.articleId,\n      articleId = _ref$articleId === void 0 ? null : _ref$articleId,\n      _ref$needTitle = _ref.needTitle,\n      needTitle = _ref$needTitle === void 0 ? true : _ref$needTitle;\n  var t = useTranslations();\n\n  var _useAsyncLoading = useAsyncLoading(ArticleProvider.getRecommend),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 2),\n      getRecommend = _useAsyncLoading2[0],\n      loading = _useAsyncLoading2[1];\n\n  var _useState = useState([]),\n      articles = _useState[0],\n      setArticles = _useState[1];\n\n  useEffect(function () {\n    getRecommend(articleId).then(function (res) {\n      setArticles(res.slice(0, 6));\n    });\n  }, [articleId, getRecommend]);\n  return __jsx(\"div\", {\n    className: cls(style.wrapper, mode === 'inline' && style.inline)\n  }, needTitle && __jsx(\"div\", {\n    className: style.title\n  }, __jsx(\"span\", null, t('recommendToReading'))), __jsx(_Spin, {\n    spinning: loading\n  }, mode === 'inline' ? articles.length <= 0 ? loading ? __jsx(\"div\", {\n    style: {\n      height: 32\n    }\n  }) : __jsx(\"div\", {\n    className: 'empty'\n  }, t('empty')) : __jsx(\"ul\", {\n    className: style.inlineWrapper\n  }, __jsx(ListTrail, {\n    length: articles.length,\n    options: {\n      opacity: loading ? 0 : 1,\n      height: loading ? 0 : 32,\n      x: 0,\n      from: {\n        opacity: 0,\n        height: 0,\n        x: -20\n      }\n    },\n    renderItem: function renderItem(index) {\n      var article = articles[index];\n      return __jsx(Link, {\n        href: \"/article/[id]\",\n        as: \"/article/\".concat(article.id),\n        scroll: false\n      }, __jsx(\"a\", null, __jsx(\"span\", null, article.title), ' Â· ', __jsx(\"span\", null, __jsx(LocaleTime, {\n        date: article.publishAt,\n        timeago: true\n      }))));\n    }\n  })) : __jsx(ArticleList, {\n    articles: articles || [],\n    coverHeight: 110,\n    asRecommend: true\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}