{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { useTranslations } from 'next-intl';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { GlobalContext } from '@/context/global';\nimport { DoubleColumnLayout } from '@/layout/DoubleColumnLayout';\nimport { KnowledgeProvider } from '@/providers/knowledge';\nimport { KnowledgeList } from '@components/KnowledgeList';\nimport { Categories } from '@components/Categories';\nimport { ArticleRecommend } from '@/components/ArticleRecommend';\nconst pageSize = 12;\n\nconst Page = ({\n  books: defaultBooks = [],\n  total = 0\n}) => {\n  const {\n    categories\n  } = useContext(GlobalContext);\n  const t = useTranslations();\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: books,\n    1: setBooks\n  } = useState(defaultBooks);\n  useEffect(() => {\n    setBooks(defaultBooks);\n  }, [defaultBooks]);\n  const getArticles = useCallback(page => {\n    KnowledgeProvider.getKnowledges({\n      page,\n      pageSize,\n      status: 'publish'\n    }).then(res => {\n      setPage(page);\n      setBooks(articles => [...articles, ...res[0]]);\n    });\n  }, []);\n  return __jsx(DoubleColumnLayout, {\n    leftNode: __jsx(InfiniteScroll, {\n      pageStart: 1,\n      loadMore: getArticles,\n      hasMore: page * pageSize < total,\n      loader: __jsx(\"div\", {\n        className: 'loading',\n        key: 0\n      }, t('gettingKnowledge'))\n    }, __jsx(KnowledgeList, {\n      knowledges: books\n    })),\n    rightNode: __jsx(\"div\", {\n      className: 'sticky'\n    }, __jsx(ArticleRecommend, {\n      mode: \"inline\"\n    }), __jsx(Categories, {\n      categories: categories\n    }))\n  });\n}; // 服务端预取数据\n\n\nPage.getInitialProps = async () => {\n  const [books, total] = await KnowledgeProvider.getKnowledges({\n    page: 1,\n    pageSize,\n    status: 'publish'\n  });\n  return {\n    books,\n    total\n  };\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}