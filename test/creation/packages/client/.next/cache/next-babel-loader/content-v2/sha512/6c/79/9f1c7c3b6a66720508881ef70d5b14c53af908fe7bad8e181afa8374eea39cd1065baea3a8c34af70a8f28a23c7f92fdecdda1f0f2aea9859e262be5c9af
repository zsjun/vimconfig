{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/pagination/style\";\nimport _Pagination from \"antd/lib/pagination\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { CommentProvider } from '@/providers/comment';\nimport { usePagination } from '@/hooks/usePagination';\nimport { useToggle } from '@/hooks/useToggle';\nimport { Opacity } from '@/components/Animation/Opacity';\nimport { CommentEditor } from './CommentEditor';\nimport { Comments } from './CommentItem';\nimport styles from './index.module.scss';\nexport const COMMENT_DOM_ID = `js-comment-id`;\nexport const Comment = ({\n  hostId: articleId\n}) => {\n  const ref = useRef(null);\n  const t = useTranslations();\n  const [firstLoad, setFirstLoad] = useToggle(true);\n  const {\n    data: comments,\n    total,\n    loading,\n    page,\n    pageSize,\n    setPage\n  } = usePagination(params => CommentProvider.getArticleComments(articleId, params), {\n    pageSize: 6,\n    after: ({\n      page\n    }) => {\n      if (page === 1 && firstLoad) {\n        setFirstLoad(false);\n        return;\n      }\n\n      Promise.resolve().then(() => {\n        ref.current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      });\n    }\n  });\n  return __jsx(\"div\", {\n    id: COMMENT_DOM_ID,\n    ref: ref\n  }, __jsx(\"div\", {\n    className: styles.editorWrapper\n  }, __jsx(CommentEditor, {\n    hostId: articleId,\n    parentComment: null,\n    replyComment: null\n  })), __jsx(Comments, {\n    comments: comments\n  }), __jsx(Opacity, null, __jsx(\"div\", {\n    className: styles.pagination,\n    style: {\n      padding: loading || total > 0 ? '16px 0' : 0\n    }\n  }, !loading && total > 0 ? __jsx(_Pagination, {\n    size: \"small\",\n    current: page,\n    pageSize: pageSize,\n    total: total,\n    onChange: setPage\n  }) : loading ? __jsx(_Button, {\n    type: \"primary\",\n    loading: true\n  }, t('loading')) : null)));\n};","map":null,"metadata":{},"sourceType":"module"}