{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nexport var SearchProvider = /*#__PURE__*/function () {\n  function SearchProvider() {\n    _classCallCheck(this, SearchProvider);\n  }\n\n  _createClass(SearchProvider, null, [{\n    key: \"searchArticles\",\n    value: function () {\n      var _searchArticles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(keyword) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", httpProvider.get('/search/article', {\n                  params: {\n                    keyword: keyword\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function searchArticles(_x) {\n        return _searchArticles.apply(this, arguments);\n      }\n\n      return searchArticles;\n    }()\n  }, {\n    key: \"getRecords\",\n    value: function getRecords(params) {\n      return httpProvider.get('/search', {\n        params: params\n      });\n    }\n  }, {\n    key: \"deleteRecord\",\n    value: function deleteRecord(id) {\n      return httpProvider[\"delete\"]('/search/' + id);\n    }\n  }]);\n\n  return SearchProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}