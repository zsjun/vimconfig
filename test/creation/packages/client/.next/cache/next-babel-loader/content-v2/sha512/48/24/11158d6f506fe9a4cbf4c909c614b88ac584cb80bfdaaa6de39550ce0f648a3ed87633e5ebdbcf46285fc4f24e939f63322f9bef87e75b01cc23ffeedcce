{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RSS from '@/rss/index.js';\nimport { ArticleProvider } from '@/providers/article';\nimport { SettingProvider } from '@/providers/setting';\nimport { CategoryProvider } from '@/providers/category';\n\nvar url = require('url');\n\nvar Rss = function Rss() {\n  return null;\n}; // 服务端预取数据\n\n\nRss.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, articles, setting, categories, feed;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = ctx.res;\n            res.setHeader('Content-Type', 'text/xml');\n            _context.next = 4;\n            return Promise.all([ArticleProvider.getArticles({\n              page: 1,\n              pageSize: 99999,\n              status: 'publish'\n            }), SettingProvider.getSetting(), CategoryProvider.getCategory({\n              articleStatus: 'publish'\n            })]);\n\n          case 4:\n            _yield$Promise$all = _context.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n            _yield$Promise$all2$ = _slicedToArray(_yield$Promise$all2[0], 1);\n            articles = _yield$Promise$all2$[0];\n            setting = _yield$Promise$all2[1];\n            categories = _yield$Promise$all2[2];\n            feed = new RSS({\n              title: setting.systemTitle,\n              description: setting.seoDesc,\n              feed_url: url.resolve(setting.systemUrl, 'rss'),\n              site_url: setting.systemUrl,\n              author: 'https://github.com/fantasticit',\n              categories: categories.map(function (c) {\n                return c.label;\n              })\n            }, null);\n            articles.forEach(function (article) {\n              feed.item({\n                title: article.title,\n                description: article.html || article.content,\n                url: url.resolve(setting.systemUrl, 'article/' + article.id),\n                date: article.publishAt,\n                categories: [(article.category || {}).label]\n              });\n            }); // @ts-ignore\n\n            res.write(feed.xml());\n            res.end();\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Rss;","map":null,"metadata":{},"sourceType":"module"}