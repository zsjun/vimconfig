{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nexport var TagProvider = /*#__PURE__*/function () {\n  function TagProvider() {\n    _classCallCheck(this, TagProvider);\n  }\n\n  _createClass(TagProvider, null, [{\n    key: \"getTags\",\n\n    /**\n     * 获取所有标签\n     */\n    value: function () {\n      var _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", httpProvider.get('/tag', {\n                  params: params\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getTags(_x) {\n        return _getTags.apply(this, arguments);\n      }\n\n      return getTags;\n    }()\n    /**\n     * 获取指定标签下文章\n     * @param id\n     */\n\n  }, {\n    key: \"getTagWithArticles\",\n    value: function () {\n      var _getTagWithArticles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n        var needFilter,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                needFilter = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : false;\n                return _context2.abrupt(\"return\", httpProvider.get(\"/tag/\".concat(id, \"/article\"), needFilter ? {\n                  params: {\n                    status: 'publish'\n                  }\n                } : {}));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getTagWithArticles(_x2) {\n        return _getTagWithArticles.apply(this, arguments);\n      }\n\n      return getTagWithArticles;\n    }()\n    /**\n     * 添加标签\n     * @param data\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function () {\n      var _addTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", httpProvider.post('/tag', data));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function addTag(_x3) {\n        return _addTag.apply(this, arguments);\n      }\n\n      return addTag;\n    }()\n    /**\n     * 获取标签\n     * @param id\n     */\n\n  }, {\n    key: \"getTagById\",\n    value: function () {\n      var _getTagById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", httpProvider.get(\"/tag/\".concat(id)));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getTagById(_x4) {\n        return _getTagById.apply(this, arguments);\n      }\n\n      return getTagById;\n    }()\n    /**\n     * 更新标签\n     * @param id\n     * @param data\n     */\n\n  }, {\n    key: \"updateTag\",\n    value: function () {\n      var _updateTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, data) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", httpProvider.patch(\"/tag/\".concat(id), data));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updateTag(_x5, _x6) {\n        return _updateTag.apply(this, arguments);\n      }\n\n      return updateTag;\n    }()\n    /**\n     * 删除标签\n     * @param id\n     */\n\n  }, {\n    key: \"deleteTag\",\n    value: function () {\n      var _deleteTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", httpProvider[\"delete\"](\"/tag/\".concat(id)));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function deleteTag(_x7) {\n        return _deleteTag.apply(this, arguments);\n      }\n\n      return deleteTag;\n    }()\n  }]);\n\n  return TagProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}