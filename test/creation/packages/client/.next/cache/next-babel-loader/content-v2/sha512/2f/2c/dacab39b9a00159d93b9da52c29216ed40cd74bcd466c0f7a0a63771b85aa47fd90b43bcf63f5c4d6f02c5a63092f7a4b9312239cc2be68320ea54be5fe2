{"ast":null,"code":"import _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport cls from 'classnames';\nimport { Share } from '@/components/Share';\nimport { CommentIcon } from '@/components/Comment/CommentIcon';\nimport { Likes } from '@/components/Likes';\nimport { useToggle } from '@/hooks/useToggle';\nimport { getDocumentScrollTop } from '@/utils';\nimport style from './index.module.scss';\nimport { AliPay } from '@/components/AliPay';\nexport var DoubleColumnLayout = function DoubleColumnLayout(_ref) {\n  var leftNode = _ref.leftNode,\n      _ref$leftClassName = _ref.leftClassName,\n      leftClassName = _ref$leftClassName === void 0 ? null : _ref$leftClassName,\n      rightNode = _ref.rightNode,\n      _ref$rightClassName = _ref.rightClassName,\n      rightClassName = _ref$rightClassName === void 0 ? null : _ref$rightClassName,\n      _ref$isRightNodeMobil = _ref.isRightNodeMobileHidden,\n      isRightNodeMobileHidden = _ref$isRightNodeMobil === void 0 ? true : _ref$isRightNodeMobil,\n      _ref$minHeight = _ref.minHeight,\n      minHeight = _ref$minHeight === void 0 ? '100vh' : _ref$minHeight,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? 'var(--bg-body)' : _ref$background,\n      likesProps = _ref.likesProps,\n      _ref$showComment = _ref.showComment,\n      showComment = _ref$showComment === void 0 ? false : _ref$showComment,\n      shareProps = _ref.shareProps,\n      showPay = _ref.showPay;\n\n  var _useToggle = useToggle(true),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      showWidge = _useToggle2[0],\n      toggleWidge = _useToggle2[1];\n\n  useEffect(function () {\n    var beforeY = 0;\n    var y = 0;\n\n    var handler = function handler() {\n      y = getDocumentScrollTop();\n      toggleWidge(beforeY <= y);\n      setTimeout(function () {\n        beforeY = y;\n      }, 0);\n    };\n\n    document.addEventListener('scroll', handler);\n    return function () {\n      document.removeEventListener('scroll', handler);\n    };\n  }, [toggleWidge]);\n  return __jsx(\"div\", {\n    className: cls(style.outerWrap),\n    style: {\n      minHeight: minHeight,\n      background: background\n    }\n  }, __jsx(\"div\", {\n    className: cls('container')\n  }, __jsx(\"div\", {\n    className: style.wrap\n  }, (likesProps || showComment || shareProps) && __jsx(\"div\", {\n    className: cls(style.fixed, showWidge && style.active),\n    onClick: function onClick(e) {\n      console.log('clicked');\n      e.preventDefault();\n      e.nativeEvent.stopImmediatePropagation();\n      e.stopPropagation();\n    }\n  }, likesProps && __jsx(\"div\", {\n    className: style.widgetWrapper\n  }, __jsx(Likes, likesProps)), showComment && __jsx(\"div\", {\n    className: style.widgetWrapper\n  }, __jsx(CommentIcon, null)), shareProps && __jsx(\"div\", {\n    className: style.widgetWrapper\n  }, __jsx(Share, shareProps)), showPay && __jsx(\"div\", {\n    className: style.widgetWrapper\n  }, __jsx(AliPay, showPay))), __jsx(\"section\", {\n    className: cls(style.left, leftClassName)\n  }, leftNode), __jsx(\"aside\", {\n    className: cls(style.right, rightClassName, isRightNodeMobileHidden && style.isRightNodeMobileHidden)\n  }, rightNode))));\n};","map":null,"metadata":{},"sourceType":"module"}