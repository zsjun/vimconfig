{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport cls from 'classnames';\nimport { useTranslations } from 'next-intl';\nimport { isOdd, elementInViewport } from '@/utils';\nimport { ListTrail } from '@/components/Animation/Trail';\nimport style from './index.module.scss';\nvar HEIGHT = 32;\nexport var Toc = function Toc(_ref) {\n  var _ref$tocs = _ref.tocs,\n      tocs = _ref$tocs === void 0 ? [] : _ref$tocs;\n  var t = useTranslations();\n  var ref = useRef();\n\n  var _useState = useState(0),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _goto = useCallback(function (toc) {\n    try {\n      var el = document.getElementById(toc.id);\n\n      if (el) {\n        el.scrollIntoView();\n      }\n    } catch (e) {} // eslint-disable-line no-empty\n\n  }, []);\n\n  useEffect(function () {\n    var listener = function listener() {\n      tocs.reduceRight(function (_, toc, index) {\n        var el = document.getElementById(toc.id);\n\n        if (!el) {\n          return _;\n        }\n\n        if (elementInViewport(el)) {\n          setActive(index);\n          ref.current.scrollTop = HEIGHT * index;\n        }\n\n        return _;\n      }, null);\n    };\n\n    document.addEventListener('scroll', listener);\n    return function () {\n      document.removeEventListener('scroll', listener);\n    };\n  }, [tocs]);\n  return __jsx(\"div\", {\n    className: style.wrapper\n  }, __jsx(\"header\", null, t('toc')), __jsx(\"main\", null, __jsx(\"div\", {\n    ref: ref\n  }, __jsx(\"div\", null, __jsx(ListTrail, {\n    length: tocs.length,\n    options: {\n      opacity: 1,\n      height: 32,\n      from: {\n        opacity: 0,\n        height: 0\n      }\n    },\n    element: 'div',\n    renderItem: function renderItem(idx) {\n      var toc = tocs[idx];\n      var v = toc.level;\n      var f = isOdd(v - 1);\n      return __jsx(\"div\", {\n        className: cls(style.item, idx === active && style.active),\n        style: {\n          'paddingLeft': 12 * (v - 1),\n          'cursor': 'pointer',\n          '--dot-left': 10 * (v - 2) + 'px',\n          '--dot-width': 6 - (v - 1) + (f ? 1 : 0) + 'px'\n        },\n        onClick: function onClick() {\n          return _goto(toc);\n        }\n      }, __jsx(\"div\", null, toc.text));\n    }\n  }), __jsx(\"div\", {\n    className: style.indicator,\n    style: {\n      top: HEIGHT * active + 'px'\n    }\n  })))));\n};","map":null,"metadata":{},"sourceType":"module"}