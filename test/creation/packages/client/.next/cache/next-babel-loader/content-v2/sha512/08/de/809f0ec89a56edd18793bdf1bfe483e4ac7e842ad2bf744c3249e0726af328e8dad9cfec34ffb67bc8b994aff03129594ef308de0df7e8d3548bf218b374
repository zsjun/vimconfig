{"ast":null,"code":"import \"antd/lib/breadcrumb/style\";\nimport _Breadcrumb from \"antd/lib/breadcrumb\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useMemo } from 'react';\nimport cls from 'classnames';\nimport Link from 'next/link';\nimport { useTranslations } from 'next-intl';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport { KnowledgeProvider } from '@/providers/knowledge';\nimport { DoubleColumnLayout } from '@/layout/DoubleColumnLayout';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { ImageViewer } from '@/components/ImageViewer';\nimport { MarkdownReader } from '@/components/MarkdownReader';\nimport { Toc } from '@/components/Toc';\nimport { Comment } from '@/components/Comment';\nimport style from './index.module.scss';\n\nconst Page = ({\n  pId,\n  id,\n  book,\n  chapter\n}) => {\n  const t = useTranslations();\n  const chapters = book.children || [];\n  const tocs = chapter.toc ? JSON.parse(chapter.toc) : [];\n  const idx = chapters.findIndex(t => t.id === chapter.id);\n  const prev = useMemo(() => {\n    if (idx <= 0) {\n      return null;\n    }\n\n    return chapters[idx - 1];\n  }, [idx]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const next = useMemo(() => {\n    if (idx >= chapters.length - 1) {\n      return null;\n    }\n\n    return chapters[idx + 1];\n  }, [idx]); // eslint-disable-line react-hooks/exhaustive-deps\n  // 更新阅读量\n\n  useEffect(() => {\n    if (!chapter) {\n      return;\n    }\n\n    KnowledgeProvider.updateKnowledgeViews(pId);\n    KnowledgeProvider.updateKnowledgeViews(id);\n  }, [pId, id, chapter]);\n  useEffect(() => {\n    if (!chapter) {\n      return;\n    }\n\n    Promise.resolve().then(() => {\n      const el = document.querySelector(`#js-toc-item-wrapper-` + id);\n      console.log(el);\n      el && el.scrollIntoView();\n    });\n  }, [chapter, id]);\n\n  if (!chapter) {\n    return __jsx(\"p\", null, t('unknownKnowledgeChapter'));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(DoubleColumnLayout, {\n    leftNode: __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: cls(style.breadcrump)\n    }, __jsx(_Breadcrumb, null, __jsx(_Breadcrumb.Item, null, __jsx(Link, {\n      href: \"/knowledge\"\n    }, __jsx(\"a\", null, t('knowledgeBooks')))), __jsx(_Breadcrumb.Item, null, __jsx(Link, {\n      as: `/knowledge/${pId}`,\n      href: \"/knowledge/[pId]\"\n    }, __jsx(\"a\", null, book.title))), __jsx(_Breadcrumb.Item, null, chapter.title))), __jsx(ImageViewer, {\n      containerSelector: \"#js-knowledge-content\"\n    }, __jsx(\"div\", {\n      id: \"js-knowledge-content\",\n      className: style.content\n    }, __jsx(\"article\", null, __jsx(\"div\", {\n      className: style.meta\n    }, __jsx(\"h1\", {\n      className: style.title\n    }, chapter.title), __jsx(\"p\", {\n      className: style.desc\n    }, __jsx(\"span\", null, t('publishAt'), __jsx(LocaleTime, {\n      date: chapter.publishAt\n    })), __jsx(\"span\", null, \" \\u2022 \"), __jsx(\"span\", null, t('readings'), \" \", chapter.views))), __jsx(\"div\", null, __jsx(MarkdownReader, {\n      content: chapter.html || chapter.content\n    })), __jsx(\"div\", {\n      className: style.copyrightInfo\n    }, t('publishAt'), __jsx(LocaleTime, {\n      date: chapter.publishAt\n    }), \" | \", t('copyrightInfo'), \"\\uFF1A\", __jsx(\"a\", {\n      href: \"https://creativecommons.org/licenses/by-nc/3.0/cn/deed.zh\",\n      target: \"_blank\",\n      rel: \"noreferrer\"\n    }, t('copyrightContent'))), __jsx(\"div\", {\n      className: style.navigation\n    }, prev && __jsx(\"div\", {\n      className: style.left,\n      style: {\n        width: next ? '45%' : '100%'\n      }\n    }, __jsx(Link, {\n      href: `/knowledge/[pId]/[id]`,\n      as: `/knowledge/${pId}/${prev.id}`\n    }, __jsx(\"a\", null, __jsx(LeftOutlined, null), __jsx(\"span\", null, prev.title)))), next && __jsx(\"div\", {\n      className: style.right,\n      style: {\n        width: prev ? '45%' : '100%'\n      }\n    }, __jsx(Link, {\n      href: `/knowledge/[pId]/[id]`,\n      as: `/knowledge/${pId}/${next.id}`\n    }, __jsx(\"a\", null, __jsx(\"span\", null, next.title), __jsx(RightOutlined, null)))))), book.isCommentable ? __jsx(\"div\", {\n      className: style.commentWrap\n    }, __jsx(\"p\", {\n      className: style.title\n    }, t('comment')), __jsx(Comment, {\n      key: chapter.id,\n      hostId: chapter.id\n    })) : null))),\n    rightNode: __jsx(\"div\", {\n      className: 'sticky',\n      style: {\n        marginTop: 37\n      }\n    }, __jsx(\"div\", {\n      className: cls(style.infoWrapper, style.isBg)\n    }, __jsx(\"header\", null, book.title), __jsx(\"main\", null, __jsx(\"ul\", null, chapters.map(chapter => {\n      return __jsx(\"li\", {\n        key: chapter.id,\n        id: `js-toc-item-wrapper-${chapter.id}`\n      }, __jsx(Link, {\n        as: `/knowledge/${pId}/${chapter.id}`,\n        href: `/knowledge/[pId]/[id]`\n      }, __jsx(\"a\", {\n        className: cls(chapter.id === id && style.active)\n      }, chapter.title)));\n    })))), tocs && tocs.length ? __jsx(\"div\", {\n      className: style.infoWrapper\n    }, __jsx(Toc, {\n      key: chapter.id,\n      tocs: tocs\n    })) : null),\n    likesProps: {\n      defaultCount: chapter.likes,\n      id: chapter.id,\n      api: (id, type) => KnowledgeProvider.updateKnowledgeLikes(id, type).then(res => res.likes)\n    },\n    showComment: book.isCommentable,\n    shareProps: {\n      cover: book.cover,\n      title: book.title,\n      desc: chapter.title,\n      url: `/knowledge/${pId}/${id}`\n    }\n  }));\n};\n\nPage.getInitialProps = async ctx => {\n  const {\n    pId,\n    id\n  } = ctx.query;\n  const [book, chapter] = await Promise.all([KnowledgeProvider.getKnowledge(pId), KnowledgeProvider.getKnowledge(id)]);\n  return {\n    pId,\n    book,\n    id,\n    chapter\n  };\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}