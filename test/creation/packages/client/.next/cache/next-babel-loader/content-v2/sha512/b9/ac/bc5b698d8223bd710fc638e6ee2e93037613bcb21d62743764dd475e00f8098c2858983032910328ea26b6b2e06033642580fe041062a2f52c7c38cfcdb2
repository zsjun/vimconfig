{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport cls from 'classnames';\nimport { useTranslations } from 'next-intl';\nimport { CommentProvider } from '@/providers/comment';\nimport { useToggle } from '@/hooks/useToggle';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { isValidUser, UserInfo } from '../UserInfo';\nimport { Emoji } from './Emoji';\nimport styles from './index.module.scss';\nconst {\n  TextArea\n} = _Input;\nexport const CommentEditor = ({\n  hostId,\n  parentComment,\n  replyComment,\n  onOk,\n  onClose,\n  small\n}) => {\n  const t = useTranslations('commentNamespace');\n  const [addComment, loading] = useAsyncLoading(CommentProvider.addComment);\n  const [needSetInfo, toggleNeedSetInfo] = useToggle(false);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const hasValidUser = useMemo(() => isValidUser(user), [user]);\n  const textareaPlaceholder = useMemo(() => replyComment ? `${t('reply')} ${replyComment.name}` : t('replyPlaceholder'), [t, replyComment]);\n  const textareaSize = useMemo(() => small ? {\n    minRows: 4,\n    maxRows: 8\n  } : {\n    minRows: 6,\n    maxRows: 12\n  }, [small]);\n  const btnSize = useMemo(() => small ? 'small' : 'middle', [small]);\n\n  const emojiTrigger = __jsx(\"span\", {\n    className: styles.emojiTrigger\n  }, __jsx(\"svg\", {\n    viewBox: \"0 0 1024 1024\",\n    width: \"18px\",\n    height: \"18px\"\n  }, __jsx(\"path\", {\n    d: \"M288.92672 400.45568c0 30.80192 24.97024 55.77216 55.77216 55.77216s55.77216-24.97024 55.77216-55.77216c0-30.7968-24.97024-55.76704-55.77216-55.76704s-55.77216 24.97024-55.77216 55.76704z m334.60224 0c0 30.80192 24.97024 55.77216 55.77216 55.77216s55.77216-24.97024 55.77216-55.77216c0-30.7968-24.97024-55.76704-55.77216-55.76704s-55.77216 24.97024-55.77216 55.76704z m-111.5392 362.4704c-78.05952 0-156.13952-39.08096-200.75008-100.3776-16.77312-22.31296-27.84256-50.15552-39.08096-72.45824-5.53472-16.77312 5.5296-33.4592 16.77312-39.08096 16.77312-5.53472 27.84256 5.53472 33.46432 16.768 5.53472 22.30784 16.77312 39.08608 27.84256 55.77728 44.61568 55.76704 100.38272 83.69664 161.664 83.69664 61.30176 0 122.7008-27.84256 156.16-78.07488 11.15136-16.77824 22.30784-38.99904 27.84256-55.77728 5.62176-16.768 22.30784-22.30272 33.4592-16.768 16.768 5.53472 22.30784 22.30272 16.768 33.4592-5.61152 27.84256-22.2976 50.14528-39.08096 72.45824-38.912 61.37856-116.98176 100.3776-195.06176 100.3776z m0 194.51392C268.4928 957.44 66.56 755.52256 66.56 511.99488 66.56 268.48256 268.4928 66.56 511.98976 66.56 755.50208 66.56 957.44 268.48256 957.44 511.99488 957.44 755.52256 755.50208 957.44 511.98976 957.44z m0-831.45728c-213.78048 0-386.00192 172.21632-386.00192 386.01216 0 213.8112 172.22144 386.0224 386.00192 386.0224 213.80096 0 386.0224-172.2112 386.0224-386.0224 0-213.79584-172.22144-386.01216-386.0224-386.01216z\",\n    fill: \"currentColor\"\n  })), __jsx(\"span\", null, t('emoji')));\n\n  const storeUser = useCallback(user => {\n    if (!isValidUser(user)) {\n      return;\n    }\n\n    window.localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n    toggleNeedSetInfo(false);\n  }, [toggleNeedSetInfo]);\n  const onInput = useCallback(e => {\n    if (!hasValidUser) {\n      return;\n    }\n\n    setContent(e.target.value);\n  }, [hasValidUser]);\n  const addEmoji = useCallback(emoji => {\n    if (!hasValidUser) {\n      return;\n    }\n\n    setContent(`${content}${emoji}`);\n  }, [content, hasValidUser]);\n  const submit = useCallback(() => {\n    const data = _objectSpread(_objectSpread({\n      hostId\n    }, user), {}, {\n      content,\n      url: window.location.pathname\n    });\n\n    if (parentComment && parentComment.id) {\n      Object.assign(data, {\n        parentCommentId: parentComment.id\n      });\n    }\n\n    if (replyComment) {\n      Object.assign(data, {\n        replyUserName: replyComment.name,\n        replyUserEmail: replyComment.email\n      });\n    }\n\n    addComment(data).then(() => {\n      _message.success(t('commentSuccess'));\n\n      setContent('');\n      onOk && onOk();\n    });\n  }, [t, hostId, parentComment, replyComment, onOk, user, content, addComment]);\n  useEffect(() => {\n    const userInfo = window.localStorage.getItem('user');\n\n    try {\n      const user = JSON.parse(userInfo);\n      setUser(user);\n    } catch (err) {//\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: cls(styles.wrapper)\n  }, __jsx(UserInfo, {\n    visible: needSetInfo,\n    onCancel: toggleNeedSetInfo,\n    onOk: storeUser\n  }), __jsx(\"div\", {\n    className: styles.textareaWrapper\n  }, !hasValidUser && __jsx(\"div\", {\n    className: styles.mask,\n    onClick: toggleNeedSetInfo\n  }), __jsx(TextArea, {\n    placeholder: textareaPlaceholder,\n    autoSize: textareaSize,\n    value: content,\n    onChange: onInput\n  })), __jsx(\"footer\", null, hasValidUser ? __jsx(Emoji, {\n    onClickEmoji: addEmoji\n  }, emojiTrigger) : __jsx(\"div\", {\n    onClick: toggleNeedSetInfo\n  }, emojiTrigger), __jsx(\"div\", null, onClose && __jsx(_Button, {\n    onClick: onClose,\n    style: {\n      marginRight: 16\n    },\n    size: btnSize\n  }, t('close')), __jsx(_Button, {\n    loading: loading,\n    onClick: submit,\n    type: \"primary\",\n    disabled: !content,\n    size: btnSize\n  }, t('publish')))));\n};","map":null,"metadata":{},"sourceType":"module"}