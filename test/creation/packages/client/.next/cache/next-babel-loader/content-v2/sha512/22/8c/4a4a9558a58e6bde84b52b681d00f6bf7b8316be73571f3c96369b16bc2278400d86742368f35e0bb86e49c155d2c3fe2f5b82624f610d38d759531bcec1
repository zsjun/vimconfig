{"ast":null,"code":"import _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { CloseOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\nimport { useTranslations } from 'next-intl';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { SearchProvider } from '@/providers/search';\nimport { Spring } from '@/components/Animation/Spring';\nimport { ListTrail } from '@/components/Animation/Trail';\nimport styles from './index.module.scss';\nvar AntdSearch = _Input.Search;\nexport var Search = function Search(_ref) {\n  var _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      onClose = _ref.onClose;\n  var ref = useRef(null);\n  var t = useTranslations();\n\n  var _useAsyncLoading = useAsyncLoading(SearchProvider.searchArticles),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 2),\n      searchArticles = _useAsyncLoading2[0],\n      loading = _useAsyncLoading2[1];\n\n  var _useState = useState([]),\n      articles = _useState[0],\n      setArticles = _useState[1];\n\n  var close = useCallback(function () {\n    document.body.style.overflow = '';\n    document.body.style.width = '';\n    setArticles([]);\n    onClose(false);\n  }, [onClose]);\n  var getArticles = useCallback(function (keyword) {\n    if (!keyword) {\n      setArticles([]);\n      return;\n    }\n\n    searchArticles(keyword).then(function (res) {\n      var ret = res.filter(function (r) {\n        return r.status === 'publish' && !r.needPassword;\n      });\n      setArticles(ret);\n    });\n  }, [searchArticles]);\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.which === 27 || e.keyCode === 27) {\n        close();\n      }\n    };\n\n    document.body.addEventListener('keydown', listener);\n    return function () {\n      document.body.removeEventListener('keydown', listener);\n    };\n  }, [close]);\n  useEffect(function () {\n    if (!visible || !ref.current) {\n      return;\n    }\n\n    ref.current.focus();\n    document.body.style.overflow = 'hidden';\n    document.body.style.width = 'calc(100% - 6px)';\n  }, [visible]);\n\n  if (!visible) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: styles.wrapper\n  }, __jsx(Spring, {\n    from: {\n      y: 20\n    },\n    to: {\n      y: 0\n    }\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"header\", null, __jsx(\"span\", {\n    className: styles.title\n  }, t('searchArticle')), __jsx(\"span\", {\n    className: styles.btnWrapper,\n    onClick: close\n  }, __jsx(CloseOutlined, null), __jsx(\"span\", null, \"esc\"))), __jsx(\"section\", null, __jsx(AntdSearch, {\n    ref: ref,\n    size: \"large\",\n    loading: loading,\n    placeholder: t('searchArticlePlaceholder'),\n    onSearch: getArticles,\n    style: {\n      width: '100%'\n    }\n  })), __jsx(\"section\", null, __jsx(\"ul\", null, __jsx(ListTrail, {\n    length: articles.length,\n    options: {\n      config: {\n        mass: 1,\n        tension: 180,\n        friction: 12,\n        clamp: true\n      },\n      opacity: loading ? 0 : 1,\n      height: loading ? 0 : 48,\n      from: {\n        opacity: 0,\n        height: 0\n      }\n    },\n    renderItem: function renderItem(index) {\n      var article = articles[index];\n      return __jsx(Link, {\n        key: article.id,\n        href: \"/article/[id]\",\n        as: \"/article/\".concat(article.id),\n        scroll: false\n      }, __jsx(\"a\", {\n        className: styles.item,\n        onClick: close\n      }, article.title));\n    }\n  }))))));\n};","map":null,"metadata":{},"sourceType":"module"}