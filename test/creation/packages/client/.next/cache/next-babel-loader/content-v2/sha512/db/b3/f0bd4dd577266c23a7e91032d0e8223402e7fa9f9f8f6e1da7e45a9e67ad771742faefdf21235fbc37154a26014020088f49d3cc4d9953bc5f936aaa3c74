{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport cls from 'classnames';\nimport Link from 'next/link';\nimport { useTranslations } from 'next-intl';\nimport { default as Router, useRouter } from 'next/router';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { getDocumentScrollTop } from '@/utils';\nimport { useToggle } from '@/hooks/useToggle';\nimport { Search } from '@/components/Search';\nimport { Theme } from '@/components/Theme';\nimport { Locales } from '@/components/Locales';\nimport style from './index.module.scss';\nconst NAV_LINKS = [{\n  path: '/',\n  locale: 'article'\n}, {\n  path: '/archives',\n  locale: 'archives'\n}, {\n  path: '/knowledge',\n  locale: 'knowledgeBooks'\n}];\nexport const Header = ({\n  setting,\n  tags,\n  pages\n}) => {\n  const t = useTranslations();\n  const router = useRouter();\n  const {\n    asPath\n  } = router;\n  const [affix, setAffix] = useToggle(false);\n  const [affixVisible, setAffixVisible] = useToggle(false);\n  const [visible, setVisible] = useToggle(false);\n  const [showSearch, toggleSearch] = useToggle(false);\n  useEffect(() => {\n    const close = () => {\n      if (visible) {\n        setVisible(false);\n      }\n    };\n\n    Router.events.on('routeChangeStart', close);\n    return () => {\n      Router.events.off('routeChangeStart', close);\n    };\n  }, [setVisible, visible]);\n  useEffect(() => {\n    let beforeY = 0;\n    let y = 0;\n\n    const handler = () => {\n      y = getDocumentScrollTop();\n      setAffix(y > 0);\n      setAffixVisible(beforeY >= y);\n      setTimeout(() => {\n        beforeY = y;\n      }, 0);\n    };\n\n    document.addEventListener('scroll', handler);\n    return () => {\n      document.removeEventListener('scroll', handler);\n    };\n  }, [setAffix, setAffixVisible]);\n  const navMenu = NAV_LINKS.map(nav => __jsx(\"li\", {\n    key: nav.path,\n    className: cls({\n      [style.active]: asPath === nav.path\n    })\n  }, __jsx(Link, {\n    href: nav.path\n  }, __jsx(\"a\", null, __jsx(\"span\", null, t(nav.locale))))));\n  const pageMenu = pages.map(menu => __jsx(\"li\", {\n    key: menu.label,\n    className: cls({\n      [style.active]: asPath.replace('/page/', '') === menu.path\n    }),\n    onClick: () => {\n      if (visible) {\n        setVisible(false);\n      }\n    }\n  }, __jsx(Link, {\n    href: '/page/[id]',\n    as: `/page/${menu.path}`,\n    scroll: false\n  }, __jsx(\"a\", null, menu.name))));\n  return __jsx(\"header\", {\n    className: cls(style.header)\n  }, __jsx(\"div\", {\n    className: cls(style.wrapper, affix ? style.isFixed : false, affixVisible ? style.visible : false)\n  }, __jsx(\"div\", {\n    className: cls('container')\n  }, __jsx(\"div\", {\n    className: style.logo\n  }, /^http/.test(setting.systemLogo) ? __jsx(Link, {\n    href: \"/\",\n    scroll: false\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: setting.systemLogo,\n    alt: \"\"\n  }))) : __jsx(Link, {\n    href: \"/\",\n    scroll: false\n  }, __jsx(\"a\", {\n    dangerouslySetInnerHTML: {\n      __html: setting.systemLogo\n    }\n  }))), __jsx(\"div\", {\n    className: cls(style.mobileTrigger, visible ? style.active : false),\n    onClick: () => setVisible(!visible)\n  }, __jsx(\"div\", {\n    className: style.stick\n  }), __jsx(\"div\", {\n    className: style.stick\n  }), __jsx(\"div\", {\n    className: style.stick\n  })), __jsx(\"nav\", {\n    className: cls(visible ? style.active : false)\n  }, __jsx(\"ul\", null, navMenu, pageMenu, __jsx(\"li\", {\n    className: style.toolWrapper\n  }, __jsx(SearchOutlined, {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: toggleSearch\n  })), __jsx(\"li\", {\n    className: style.toolWrapper\n  }, __jsx(Theme, null)), __jsx(\"li\", {\n    className: style.toolWrapper\n  }, __jsx(Locales, null))), __jsx(Search, {\n    tags: tags,\n    visible: showSearch,\n    onClose: toggleSearch\n  })))));\n};","map":null,"metadata":{},"sourceType":"module"}