{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\nimport React, { useContext, useMemo, useRef, useEffect } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { PosterProvider } from '@/providers/poster';\nimport { GlobalContext } from '@/context/global';\nimport style from './index.module.scss';\nimport { useToggle } from '@/hooks/useToggle';\nimport { download, getDocumentScrollTop } from '@/utils';\n\nconst urllib = require('url');\n\nconst QRCode = require('qrcode-svg');\n\nexport const Share = ({\n  cover,\n  title,\n  desc,\n  url,\n  children\n}) => {\n  const t = useTranslations('shareNamespace');\n  const ref = useRef(null);\n  const {\n    setting,\n    locale\n  } = useContext(GlobalContext);\n  const systemUrl = setting.systemUrl || '';\n  const [loading, toggleLoading] = useToggle(false);\n  const [visible, toggleVisible] = useToggle(false);\n  const fullUrl = useMemo(() => urllib.resolve(systemUrl, url), [systemUrl, url]);\n  const qrcode = useMemo(() => new QRCode({\n    content: fullUrl,\n    padding: 0,\n    width: 80,\n    height: 80,\n    color: '#000000',\n    background: '#ffffff'\n  }), [fullUrl]);\n\n  const save = async e => {\n    e.preventDefault();\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n    toggleLoading();\n    const node = ref.current;\n    const target = node.firstChild;\n\n    const hide = _message.loading(t('createingPoster'), 0);\n\n    try {\n      const ret = await PosterProvider.createPoster({\n        name: `${locale}-${title}`,\n        html: node.innerHTML,\n        width: target.offsetWidth + 16,\n        height: target.offsetHeight,\n        pageUrl: location.pathname\n      });\n\n      _message.success(t('createdPosterSuccess'));\n\n      download(ret);\n    } catch (e) {\n      _message.error(t('createdPosterError'));\n    } finally {\n      toggleLoading();\n      hide();\n    }\n  };\n\n  const content = // 以下的内联样式，请勿修改，将用于服务端海报生成\n  __jsx(\"div\", {\n    ref: ref,\n    className: style.wrapper\n  }, __jsx(\"div\", {\n    style: {\n      width: 375,\n      background: '#fff',\n      overflow: 'hidden'\n    },\n    ref: ref\n  }, __jsx(\"div\", null, cover && __jsx(\"img\", {\n    style: {\n      width: '100%',\n      borderRadius: '2px',\n      objectFit: 'cover'\n    },\n    src: cover\n  }), __jsx(\"div\", {\n    style: {\n      minWidth: 225,\n      padding: '12px 0',\n      border: 0,\n      marginBottom: 0,\n      color: 'rgba(0, 0, 0, 0.85)',\n      overflow: 'hidden',\n      fontWeight: 600,\n      fontSize: '16px',\n      lineHeight: '22px'\n    }\n  }, title), __jsx(\"div\", {\n    style: {\n      display: '-webkit-box',\n      maxWidth: '100%',\n      padding: '0 0 12px',\n      color: 'rgba(0, 0, 0, 0.65)',\n      fontSize: 14\n    }\n  }, desc)), __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      height: 80\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      left: 0,\n      width: 80,\n      height: 80,\n      padding: 0\n    },\n    dangerouslySetInnerHTML: {\n      __html: qrcode.svg()\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      left: 80,\n      padding: '8px 16px',\n      width: 295,\n      height: 80\n    }\n  }, __jsx(\"p\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      width: '100%',\n      color: 'rgba(0, 0, 0, 0.85)'\n    }\n  }, t('qrcode')), __jsx(\"p\", {\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      color: 'rgba(0, 0, 0, 0.65)',\n      fontSize: '0.9em'\n    }\n  }, t('shareFrom'), ' ', __jsx(\"a\", {\n    style: {\n      color: '#ff0064'\n    },\n    href: fullUrl\n  }, setting.systemTitle))))));\n\n  useEffect(() => {\n    const handler = () => {\n      const y = getDocumentScrollTop();\n\n      if (visible && y > 50) {\n        toggleVisible(false);\n      }\n    };\n\n    document.addEventListener('scroll', handler);\n    return () => {\n      document.removeEventListener('scroll', handler);\n    };\n  }, [visible, toggleVisible]);\n  return __jsx(React.Fragment, null, __jsx(_Modal, {\n    title: t('title'),\n    width: 400,\n    visible: visible,\n    bodyStyle: {\n      display: 'flex',\n      justifyContent: 'center',\n      overflowX: 'hidden'\n    },\n    onCancel: e => {\n      e.preventDefault();\n      e.nativeEvent.stopImmediatePropagation();\n      e.stopPropagation();\n      toggleVisible(false);\n    },\n    onOk: save,\n    okText: \"\\u4E0B\\u8F7D\",\n    cancelText: \"\\u5173\\u95ED\",\n    okButtonProps: {\n      loading\n    },\n    maskClosable: false,\n    transitionName: '',\n    maskTransitionName: ''\n  }, content), __jsx(\"span\", {\n    onClickCapture: e => {\n      e.preventDefault();\n      e.nativeEvent.stopImmediatePropagation();\n      e.stopPropagation();\n      toggleVisible();\n    }\n  }, children || __jsx(\"div\", {\n    className: style.iconWrap\n  }, __jsx(\"svg\", {\n    viewBox: \"0 0 1024 1024\",\n    version: \"1.1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\"\n  }, __jsx(\"path\", {\n    d: \"M753.607 584.7c-48.519 0-91.596 23.298-118.66 59.315l-233.123-116.96c3.684-12.936 5.657-26.591 5.657-40.71 0-15.465-2.369-30.374-6.76-44.391l232.241-116.52c26.916 37.549 70.919 62.017 120.644 62.017 81.926 0 148.34-66.412 148.34-148.34 0-81.926-66.413-148.34-148.34-148.34-81.927 0-148.34 66.413-148.34 148.34 0 5.668 0.33 11.258 0.948 16.762l-244.945 122.892c-26.598-25.259-62.553-40.762-102.129-40.762-81.926 0-148.34 66.412-148.34 148.34s66.413 148.34 148.34 148.34c41.018 0 78.144-16.648 104.997-43.555l242.509 121.668c-0.904 6.621-1.382 13.374-1.382 20.242 0 81.927 66.412 148.34 148.34 148.34s148.34-66.413 148.34-148.34c-0.001-81.925-66.409-148.339-148.336-148.339l0 0z\",\n    fill: \"currentColor\"\n  })))));\n};","map":null,"metadata":{},"sourceType":"module"}