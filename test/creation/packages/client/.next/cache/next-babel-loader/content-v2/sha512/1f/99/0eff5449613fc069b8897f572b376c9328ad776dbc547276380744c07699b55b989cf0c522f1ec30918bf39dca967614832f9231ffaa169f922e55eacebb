{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nexport var ViewProvider = /*#__PURE__*/function () {\n  function ViewProvider() {\n    _classCallCheck(this, ViewProvider);\n  }\n\n  _createClass(ViewProvider, null, [{\n    key: \"getViews\",\n\n    /**\n     * 获取所有访问\n     */\n    value: function () {\n      var _getViews = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", httpProvider.get('/view', {\n                  params: params\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getViews(_x) {\n        return _getViews.apply(this, arguments);\n      }\n\n      return getViews;\n    }()\n    /**\n     * 添加访问\n     * @param data\n     */\n\n  }, {\n    key: \"addView\",\n    value: function () {\n      var _addView = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", httpProvider.post('/view', data));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addView(_x2) {\n        return _addView.apply(this, arguments);\n      }\n\n      return addView;\n    }()\n  }, {\n    key: \"getViewsByUrl\",\n    value: function () {\n      var _getViewsByUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", httpProvider.get('/view/url', {\n                  params: {\n                    url: url\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getViewsByUrl(_x3) {\n        return _getViewsByUrl.apply(this, arguments);\n      }\n\n      return getViewsByUrl;\n    }()\n  }, {\n    key: \"deleteView\",\n    value: function () {\n      var _deleteView = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", httpProvider[\"delete\"]('/view/' + id));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteView(_x4) {\n        return _deleteView.apply(this, arguments);\n      }\n\n      return deleteView;\n    }()\n  }]);\n\n  return ViewProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}