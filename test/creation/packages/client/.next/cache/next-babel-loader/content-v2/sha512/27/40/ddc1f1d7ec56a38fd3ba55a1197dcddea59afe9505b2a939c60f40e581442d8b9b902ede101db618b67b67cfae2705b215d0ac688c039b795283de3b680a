{"ast":null,"code":"import _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport cls from 'classnames';\nimport { useToggle } from '@/hooks/useToggle';\nimport styles from './index.module.scss';\nexport var Theme = function Theme() {\n  var _useState = useState(false),\n      mounted = _useState[0],\n      setMounted = _useState[1];\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      dark = _useToggle2[0],\n      toggleDark = _useToggle2[1];\n\n  useEffect(function () {\n    var dark = window.localStorage.getItem('dark');\n\n    if (dark) {\n      toggleDark(dark === '1');\n    } else {\n      var isSystemDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      toggleDark(isSystemDark);\n    }\n\n    setMounted(true);\n  }, [toggleDark]);\n  useEffect(function () {\n    if (!mounted) {\n      return;\n    }\n\n    if (dark) {\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n\n    window.localStorage.setItem('dark', dark ? '1' : '-1');\n  }, [mounted, dark]);\n  return __jsx(\"div\", {\n    className: cls(styles.theme, dark && styles.dark),\n    onClick: toggleDark\n  }, __jsx(\"span\", {\n    className: styles.moon\n  }), __jsx(\"span\", {\n    className: styles.sun\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }), __jsx(\"small\", {\n    className: styles.sunRay\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}