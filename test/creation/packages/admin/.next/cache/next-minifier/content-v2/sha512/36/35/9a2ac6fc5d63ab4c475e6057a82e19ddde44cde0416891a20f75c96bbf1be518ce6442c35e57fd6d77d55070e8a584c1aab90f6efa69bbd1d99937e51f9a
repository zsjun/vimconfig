{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[90],{H9Kn:function(e,t,s){\"use strict\";s.r(t),s.d(t,\"conf\",(function(){return n})),s.d(t,\"language\",(function(){return r}));var n={comments:{lineComment:\"#\"},brackets:[[\"{\",\"}\"],[\"[\",\"]\"],[\"(\",\")\"]],autoClosingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"},{open:\"`\",close:\"`\"}],surroundingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"},{open:\"`\",close:\"`\"}]},r={defaultToken:\"\",tokenPostfix:\".perl\",brackets:[{token:\"delimiter.bracket\",open:\"{\",close:\"}\"},{token:\"delimiter.parenthesis\",open:\"(\",close:\")\"},{token:\"delimiter.square\",open:\"[\",close:\"]\"}],keywords:[\"__DATA__\",\"else\",\"lock\",\"__END__\",\"elsif\",\"lt\",\"__FILE__\",\"eq\",\"__LINE__\",\"exp\",\"ne\",\"sub\",\"__PACKAGE__\",\"for\",\"no\",\"and\",\"foreach\",\"or\",\"unless\",\"cmp\",\"ge\",\"package\",\"until\",\"continue\",\"gt\",\"while\",\"CORE\",\"if\",\"xor\",\"do\",\"le\",\"__DIE__\",\"__WARN__\"],builtinFunctions:[\"-A\",\"END\",\"length\",\"setpgrp\",\"-B\",\"endgrent\",\"link\",\"setpriority\",\"-b\",\"endhostent\",\"listen\",\"setprotoent\",\"-C\",\"endnetent\",\"local\",\"setpwent\",\"-c\",\"endprotoent\",\"localtime\",\"setservent\",\"-d\",\"endpwent\",\"log\",\"setsockopt\",\"-e\",\"endservent\",\"lstat\",\"shift\",\"-f\",\"eof\",\"map\",\"shmctl\",\"-g\",\"eval\",\"mkdir\",\"shmget\",\"-k\",\"exec\",\"msgctl\",\"shmread\",\"-l\",\"exists\",\"msgget\",\"shmwrite\",\"-M\",\"exit\",\"msgrcv\",\"shutdown\",\"-O\",\"fcntl\",\"msgsnd\",\"sin\",\"-o\",\"fileno\",\"my\",\"sleep\",\"-p\",\"flock\",\"next\",\"socket\",\"-r\",\"fork\",\"not\",\"socketpair\",\"-R\",\"format\",\"oct\",\"sort\",\"-S\",\"formline\",\"open\",\"splice\",\"-s\",\"getc\",\"opendir\",\"split\",\"-T\",\"getgrent\",\"ord\",\"sprintf\",\"-t\",\"getgrgid\",\"our\",\"sqrt\",\"-u\",\"getgrnam\",\"pack\",\"srand\",\"-w\",\"gethostbyaddr\",\"pipe\",\"stat\",\"-W\",\"gethostbyname\",\"pop\",\"state\",\"-X\",\"gethostent\",\"pos\",\"study\",\"-x\",\"getlogin\",\"print\",\"substr\",\"-z\",\"getnetbyaddr\",\"printf\",\"symlink\",\"abs\",\"getnetbyname\",\"prototype\",\"syscall\",\"accept\",\"getnetent\",\"push\",\"sysopen\",\"alarm\",\"getpeername\",\"quotemeta\",\"sysread\",\"atan2\",\"getpgrp\",\"rand\",\"sysseek\",\"AUTOLOAD\",\"getppid\",\"read\",\"system\",\"BEGIN\",\"getpriority\",\"readdir\",\"syswrite\",\"bind\",\"getprotobyname\",\"readline\",\"tell\",\"binmode\",\"getprotobynumber\",\"readlink\",\"telldir\",\"bless\",\"getprotoent\",\"readpipe\",\"tie\",\"break\",\"getpwent\",\"recv\",\"tied\",\"caller\",\"getpwnam\",\"redo\",\"time\",\"chdir\",\"getpwuid\",\"ref\",\"times\",\"CHECK\",\"getservbyname\",\"rename\",\"truncate\",\"chmod\",\"getservbyport\",\"require\",\"uc\",\"chomp\",\"getservent\",\"reset\",\"ucfirst\",\"chop\",\"getsockname\",\"return\",\"umask\",\"chown\",\"getsockopt\",\"reverse\",\"undef\",\"chr\",\"glob\",\"rewinddir\",\"UNITCHECK\",\"chroot\",\"gmtime\",\"rindex\",\"unlink\",\"close\",\"goto\",\"rmdir\",\"unpack\",\"closedir\",\"grep\",\"say\",\"unshift\",\"connect\",\"hex\",\"scalar\",\"untie\",\"cos\",\"index\",\"seek\",\"use\",\"crypt\",\"INIT\",\"seekdir\",\"utime\",\"dbmclose\",\"int\",\"select\",\"values\",\"dbmopen\",\"ioctl\",\"semctl\",\"vec\",\"defined\",\"join\",\"semget\",\"wait\",\"delete\",\"keys\",\"semop\",\"waitpid\",\"DESTROY\",\"kill\",\"send\",\"wantarray\",\"die\",\"last\",\"setgrent\",\"warn\",\"dump\",\"lc\",\"sethostent\",\"write\",\"each\",\"lcfirst\",\"setnetent\"],builtinFileHandlers:[\"ARGV\",\"STDERR\",\"STDOUT\",\"ARGVOUT\",\"STDIN\",\"ENV\"],builtinVariables:[\"$!\",\"$^RE_TRIE_MAXBUF\",\"$LAST_REGEXP_CODE_RESULT\",'$\"',\"$^S\",\"$LIST_SEPARATOR\",\"$#\",\"$^T\",\"$MATCH\",\"$$\",\"$^TAINT\",\"$MULTILINE_MATCHING\",\"$%\",\"$^UNICODE\",\"$NR\",\"$&\",\"$^UTF8LOCALE\",\"$OFMT\",\"$'\",\"$^V\",\"$OFS\",\"$(\",\"$^W\",\"$ORS\",\"$)\",\"$^WARNING_BITS\",\"$OS_ERROR\",\"$*\",\"$^WIDE_SYSTEM_CALLS\",\"$OSNAME\",\"$+\",\"$^X\",\"$OUTPUT_AUTO_FLUSH\",\"$,\",\"$_\",\"$OUTPUT_FIELD_SEPARATOR\",\"$-\",\"$`\",\"$OUTPUT_RECORD_SEPARATOR\",\"$.\",\"$a\",\"$PERL_VERSION\",\"$/\",\"$ACCUMULATOR\",\"$PERLDB\",\"$0\",\"$ARG\",\"$PID\",\"$:\",\"$ARGV\",\"$POSTMATCH\",\"$;\",\"$b\",\"$PREMATCH\",\"$<\",\"$BASETIME\",\"$PROCESS_ID\",\"$=\",\"$CHILD_ERROR\",\"$PROGRAM_NAME\",\"$>\",\"$COMPILING\",\"$REAL_GROUP_ID\",\"$?\",\"$DEBUGGING\",\"$REAL_USER_ID\",\"$@\",\"$EFFECTIVE_GROUP_ID\",\"$RS\",\"$[\",\"$EFFECTIVE_USER_ID\",\"$SUBSCRIPT_SEPARATOR\",\"$\\\\\",\"$EGID\",\"$SUBSEP\",\"$]\",\"$ERRNO\",\"$SYSTEM_FD_MAX\",\"$^\",\"$EUID\",\"$UID\",\"$^A\",\"$EVAL_ERROR\",\"$WARNING\",\"$^C\",\"$EXCEPTIONS_BEING_CAUGHT\",\"$|\",\"$^CHILD_ERROR_NATIVE\",\"$EXECUTABLE_NAME\",\"$~\",\"$^D\",\"$EXTENDED_OS_ERROR\",\"%!\",\"$^E\",\"$FORMAT_FORMFEED\",\"%^H\",\"$^ENCODING\",\"$FORMAT_LINE_BREAK_CHARACTERS\",\"%ENV\",\"$^F\",\"$FORMAT_LINES_LEFT\",\"%INC\",\"$^H\",\"$FORMAT_LINES_PER_PAGE\",\"%OVERLOAD\",\"$^I\",\"$FORMAT_NAME\",\"%SIG\",\"$^L\",\"$FORMAT_PAGE_NUMBER\",\"@+\",\"$^M\",\"$FORMAT_TOP_NAME\",\"@-\",\"$^N\",\"$GID\",\"@_\",\"$^O\",\"$INPLACE_EDIT\",\"@ARGV\",\"$^OPEN\",\"$INPUT_LINE_NUMBER\",\"@INC\",\"$^P\",\"$INPUT_RECORD_SEPARATOR\",\"@LAST_MATCH_START\",\"$^R\",\"$LAST_MATCH_END\",\"$^RE_DEBUG_FLAGS\",\"$LAST_PAREN_MATCH\"],symbols:/[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,quoteLikeOps:[\"qr\",\"m\",\"s\",\"q\",\"qq\",\"qx\",\"qw\",\"tr\",\"y\"],escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[{include:\"@whitespace\"},[/[a-zA-Z\\-_][\\w\\-_]*/,{cases:{\"@keywords\":\"keyword\",\"@builtinFunctions\":\"type.identifier\",\"@builtinFileHandlers\":\"variable.predefined\",\"@quoteLikeOps\":{token:\"@rematch\",next:\"quotedConstructs\"},\"@default\":\"\"}}],[/[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,{cases:{\"@builtinVariables\":\"variable.predefined\",\"@default\":\"variable\"}}],{include:\"@strings\"},{include:\"@dblStrings\"},{include:\"@perldoc\"},{include:\"@heredoc\"},[/[{}\\[\\]()]/,\"@brackets\"],[/[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\"regexp\"],[/@symbols/,\"operators\"],{include:\"@numbers\"},[/[,;]/,\"delimiter\"]],whitespace:[[/\\s+/,\"white\"],[/(^#!.*$)/,\"metatag\"],[/(^#.*$)/,\"comment\"]],numbers:[[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\"number.float\"],[/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/,\"number.hex\"],[/\\d+/,\"number\"]],strings:[[/'/,\"string\",\"@stringBody\"]],stringBody:[[/'/,\"string\",\"@popall\"],[/\\\\'/,\"string.escape\"],[/./,\"string\"]],dblStrings:[[/\"/,\"string\",\"@dblStringBody\"]],dblStringBody:[[/\"/,\"string\",\"@popall\"],[/@escapes/,\"string.escape\"],[/\\\\./,\"string.escape.invalid\"],{include:\"@variables\"},[/./,\"string\"]],quotedConstructs:[[/(q|qw|tr|y)\\s*\\(/,{token:\"string.delim\",switchTo:\"@qstring.(.)\"}],[/(q|qw|tr|y)\\s*\\[/,{token:\"string.delim\",switchTo:\"@qstring.[.]\"}],[/(q|qw|tr|y)\\s*\\{/,{token:\"string.delim\",switchTo:\"@qstring.{.}\"}],[/(q|qw|tr|y)\\s*</,{token:\"string.delim\",switchTo:\"@qstring.<.>\"}],[/(q|qw|tr|y)#/,{token:\"string.delim\",switchTo:\"@qstring.#.#\"}],[/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/,{token:\"string.delim\",switchTo:\"@qstring.$2.$2\"}],[/(q|qw|tr|y)\\s+(\\w)/,{token:\"string.delim\",switchTo:\"@qstring.$2.$2\"}],[/(qr|m|s)\\s*\\(/,{token:\"regexp.delim\",switchTo:\"@qregexp.(.)\"}],[/(qr|m|s)\\s*\\[/,{token:\"regexp.delim\",switchTo:\"@qregexp.[.]\"}],[/(qr|m|s)\\s*\\{/,{token:\"regexp.delim\",switchTo:\"@qregexp.{.}\"}],[/(qr|m|s)\\s*</,{token:\"regexp.delim\",switchTo:\"@qregexp.<.>\"}],[/(qr|m|s)#/,{token:\"regexp.delim\",switchTo:\"@qregexp.#.#\"}],[/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/,{token:\"regexp.delim\",switchTo:\"@qregexp.$2.$2\"}],[/(qr|m|s)\\s+(\\w)/,{token:\"regexp.delim\",switchTo:\"@qregexp.$2.$2\"}],[/(qq|qx)\\s*\\(/,{token:\"string.delim\",switchTo:\"@qqstring.(.)\"}],[/(qq|qx)\\s*\\[/,{token:\"string.delim\",switchTo:\"@qqstring.[.]\"}],[/(qq|qx)\\s*\\{/,{token:\"string.delim\",switchTo:\"@qqstring.{.}\"}],[/(qq|qx)\\s*</,{token:\"string.delim\",switchTo:\"@qqstring.<.>\"}],[/(qq|qx)#/,{token:\"string.delim\",switchTo:\"@qqstring.#.#\"}],[/(qq|qx)\\s*([^A-Za-z0-9#\\s])/,{token:\"string.delim\",switchTo:\"@qqstring.$2.$2\"}],[/(qq|qx)\\s+(\\w)/,{token:\"string.delim\",switchTo:\"@qqstring.$2.$2\"}]],qstring:[[/\\\\./,\"string.escape\"],[/./,{cases:{\"$#==$S3\":{token:\"string.delim\",next:\"@pop\"},\"$#==$S2\":{token:\"string.delim\",next:\"@push\"},\"@default\":\"string\"}}]],qregexp:[{include:\"@variables\"},[/\\\\./,\"regexp.escape\"],[/./,{cases:{\"$#==$S3\":{token:\"regexp.delim\",next:\"@regexpModifiers\"},\"$#==$S2\":{token:\"regexp.delim\",next:\"@push\"},\"@default\":\"regexp\"}}]],regexpModifiers:[[/[msixpodualngcer]+/,{token:\"regexp.modifier\",next:\"@popall\"}]],qqstring:[{include:\"@variables\"},{include:\"@qstring\"}],heredoc:[[/<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,{token:\"string.heredoc.delimiter\",next:\"@heredocBody.$1\"}]],heredocBody:[[/^([\\w\\-]+)$/,{cases:{\"$1==$S2\":[{token:\"string.heredoc.delimiter\",next:\"@popall\"}],\"@default\":\"string.heredoc\"}}],[/./,\"string.heredoc\"]],perldoc:[[/^=\\w/,\"comment.doc\",\"@perldocBody\"]],perldocBody:[[/^=cut\\b/,\"type.identifier\",\"@popall\"],[/./,\"comment.doc\"]],variables:[[/\\$\\w+/,\"variable\"],[/@\\w+/,\"variable\"],[/%\\w+/,\"variable\"]]}}}}]);","map":{"version":3,"sources":["static/chunks/90.a7dab7850001b3446559.js"],"names":["window","push","H9Kn","module","__webpack_exports__","__webpack_require__","r","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","token","keywords","builtinFunctions","builtinFileHandlers","builtinVariables","symbols","quoteLikeOps","escapes","tokenizer","root","include","cases","@keywords","@builtinFunctions","@builtinFileHandlers","@quoteLikeOps","next","@default","@builtinVariables","whitespace","numbers","strings","stringBody","dblStrings","dblStringBody","quotedConstructs","switchTo","qstring","$#==$S3","$#==$S2","qregexp","regexpModifiers","qqstring","heredoc","heredocBody","$1==$S2","perldoc","perldocBody","variables"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,QAAQ,WAAa,OAAOI,KACvEH,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAOK,KAM1G,IAAID,EAAO,CACPE,SAAU,CACNC,YAAa,KAEjBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGxBN,EAAW,CACXQ,aAAc,GACdC,aAAc,QACdN,SAAU,CACN,CAAEO,MAAO,oBAAqBL,KAAM,IAAKC,MAAO,KAChD,CAAEI,MAAO,wBAAyBL,KAAM,IAAKC,MAAO,KACpD,CAAEI,MAAO,mBAAoBL,KAAM,IAAKC,MAAO,MAInDK,SAAU,CACN,WACA,OACA,OACA,UACA,QACA,KACA,WACA,KACA,WACA,MACA,KACA,MACA,cACA,MACA,KACA,MACA,UACA,KACA,SACA,MACA,KACA,UACA,QACA,WACA,KACA,QACA,OACA,KACA,MACA,KACA,KACA,UACA,YAGJC,iBAAkB,CACd,KACA,MACA,SACA,UACA,KACA,WACA,OACA,cACA,KACA,aACA,SACA,cACA,KACA,YACA,QACA,WACA,KACA,cACA,YACA,aACA,KACA,WACA,MACA,aACA,KACA,aACA,QACA,QACA,KACA,MACA,MACA,SACA,KACA,OACA,QACA,SACA,KACA,OACA,SACA,UACA,KACA,SACA,SACA,WACA,KACA,OACA,SACA,WACA,KACA,QACA,SACA,MACA,KACA,SACA,KACA,QACA,KACA,QACA,OACA,SACA,KACA,OACA,MACA,aACA,KACA,SACA,MACA,OACA,KACA,WACA,OACA,SACA,KACA,OACA,UACA,QACA,KACA,WACA,MACA,UACA,KACA,WACA,MACA,OACA,KACA,WACA,OACA,QACA,KACA,gBACA,OACA,OACA,KACA,gBACA,MACA,QACA,KACA,aACA,MACA,QACA,KACA,WACA,QACA,SACA,KACA,eACA,SACA,UACA,MACA,eACA,YACA,UACA,SACA,YACA,OACA,UACA,QACA,cACA,YACA,UACA,QACA,UACA,OACA,UACA,WACA,UACA,OACA,SACA,QACA,cACA,UACA,WACA,OACA,iBACA,WACA,OACA,UACA,mBACA,WACA,UACA,QACA,cACA,WACA,MACA,QACA,WACA,OACA,OACA,SACA,WACA,OACA,OACA,QACA,WACA,MACA,QACA,QACA,gBACA,SACA,WACA,QACA,gBACA,UACA,KACA,QACA,aACA,QACA,UACA,OACA,cACA,SACA,QACA,QACA,aACA,UACA,QACA,MACA,OACA,YACA,YACA,SACA,SACA,SACA,SACA,QACA,OACA,QACA,SACA,WACA,OACA,MACA,UACA,UACA,MACA,SACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,UACA,QACA,WACA,MACA,SACA,SACA,UACA,QACA,SACA,MACA,UACA,OACA,SACA,OACA,SACA,OACA,QACA,UACA,UACA,OACA,OACA,YACA,MACA,OACA,WACA,OACA,OACA,KACA,aACA,QACA,OACA,UACA,aAGJC,oBAAqB,CAAC,OAAQ,SAAU,SAAU,UAAW,QAAS,OAEtEC,iBAAkB,CACd,KACA,mBACA,2BACA,KACA,MACA,kBACA,KACA,MACA,SACA,KACA,UACA,sBACA,KACA,YACA,MACA,KACA,eACA,QACA,KACA,MACA,OACA,KACA,MACA,OACA,KACA,iBACA,YACA,KACA,sBACA,UACA,KACA,MACA,qBACA,KACA,KACA,0BACA,KACA,KACA,2BACA,KACA,KACA,gBACA,KACA,eACA,UACA,KACA,OACA,OACA,KACA,QACA,aACA,KACA,KACA,YACA,KACA,YACA,cACA,KACA,eACA,gBACA,KACA,aACA,iBACA,KACA,aACA,gBACA,KACA,sBACA,MACA,KACA,qBACA,uBACA,MACA,QACA,UACA,KACA,SACA,iBACA,KACA,QACA,OACA,MACA,cACA,WACA,MACA,2BACA,KACA,uBACA,mBACA,KACA,MACA,qBACA,KACA,MACA,mBACA,MACA,aACA,gCACA,OACA,MACA,qBACA,OACA,MACA,yBACA,YACA,MACA,eACA,OACA,MACA,sBACA,KACA,MACA,mBACA,KACA,MACA,OACA,KACA,MACA,gBACA,QACA,SACA,qBACA,OACA,MACA,0BACA,oBACA,MACA,kBACA,mBACA,qBAGJC,QAAS,2BACTC,aAAc,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAC5DC,QAAS,wEAETC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,eACX,CACI,sBACA,CACIC,MAAO,CACHC,YAAa,UACbC,oBAAqB,kBACrBC,uBAAwB,sBACxBC,gBAAiB,CAAEf,MAAO,WAAYgB,KAAM,oBAC5CC,WAAY,MAKxB,CACI,oCACA,CACIN,MAAO,CACHO,oBAAqB,sBACrBD,WAAY,cAIxB,CAAEP,QAAS,YACX,CAAEA,QAAS,eAEX,CAAEA,QAAS,YAEX,CAAEA,QAAS,YACX,CAAC,aAAc,aAEf,CACI,yEACA,UAEJ,CAAC,WAAY,aACb,CAAEA,QAAS,YACX,CAAC,OAAQ,cAEbS,WAAY,CACR,CAAC,MAAO,SACR,CAAC,WAAY,WACb,CAAC,UAAW,YAEhBC,QAAS,CACL,CAAC,2BAA4B,gBAC7B,CAAC,gCAAiC,cAClC,CAAC,MAAO,WAGZC,QAAS,CAAC,CAAC,IAAK,SAAU,gBAC1BC,WAAY,CACR,CAAC,IAAK,SAAU,WAChB,CAAC,MAAO,iBACR,CAAC,IAAK,WAGVC,WAAY,CAAC,CAAC,IAAK,SAAU,mBAC7BC,cAAe,CACX,CAAC,IAAK,SAAU,WAChB,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAEd,QAAS,cACX,CAAC,IAAK,WAKVe,iBAAkB,CACd,CAAC,mBAAoB,CAAEzB,MAAO,eAAgB0B,SAAU,iBACxD,CAAC,mBAAoB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACxD,CAAC,mBAAoB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACxD,CAAC,kBAAmB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACvD,CAAC,eAAgB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACpD,CAAC,kCAAmC,CAAE1B,MAAO,eAAgB0B,SAAU,mBACvE,CAAC,qBAAsB,CAAE1B,MAAO,eAAgB0B,SAAU,mBAC1D,CAAC,gBAAiB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACrD,CAAC,gBAAiB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACrD,CAAC,gBAAiB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACrD,CAAC,eAAgB,CAAE1B,MAAO,eAAgB0B,SAAU,iBACpD,CAAC,YAAa,CAAE1B,MAAO,eAAgB0B,SAAU,iBACjD,CAAC,gCAAiC,CAAE1B,MAAO,eAAgB0B,SAAU,mBACrE,CAAC,kBAAmB,CAAE1B,MAAO,eAAgB0B,SAAU,mBACvD,CAAC,eAAgB,CAAE1B,MAAO,eAAgB0B,SAAU,kBACpD,CAAC,eAAgB,CAAE1B,MAAO,eAAgB0B,SAAU,kBACpD,CAAC,eAAgB,CAAE1B,MAAO,eAAgB0B,SAAU,kBACpD,CAAC,cAAe,CAAE1B,MAAO,eAAgB0B,SAAU,kBACnD,CAAC,WAAY,CAAE1B,MAAO,eAAgB0B,SAAU,kBAChD,CAAC,8BAA+B,CAAE1B,MAAO,eAAgB0B,SAAU,oBACnE,CAAC,iBAAkB,CAAE1B,MAAO,eAAgB0B,SAAU,qBAM1DC,QAAS,CACL,CAAC,MAAO,iBACR,CAAC,IAAK,CACEhB,MAAO,CACHiB,UAAW,CAAE5B,MAAO,eAAgBgB,KAAM,QAC1Ca,UAAW,CAAE7B,MAAO,eAAgBgB,KAAM,SAC1CC,WAAY,aAQ5Ba,QAAS,CACL,CAAEpB,QAAS,cACX,CAAC,MAAO,iBACR,CAAC,IAAK,CACEC,MAAO,CACHiB,UAAW,CAAE5B,MAAO,eAAgBgB,KAAM,oBAC1Ca,UAAW,CAAE7B,MAAO,eAAgBgB,KAAM,SAC1CC,WAAY,aAI5Bc,gBAAiB,CACb,CAAC,qBAAsB,CAAE/B,MAAO,kBAAmBgB,KAAM,aAM7DgB,SAAU,CACN,CAAEtB,QAAS,cACX,CAAEA,QAAS,aAEfuB,QAAS,CACL,CACI,6BACA,CAAEjC,MAAO,2BAA4BgB,KAAM,qBAGnDkB,YAAa,CACT,CACI,cACA,CACIvB,MAAO,CACHwB,UAAW,CAAC,CAAEnC,MAAO,2BAA4BgB,KAAM,YACvDC,WAAY,oBAIxB,CAAC,IAAK,mBAEVmB,QAAS,CAAC,CAAC,OAAQ,cAAe,iBAClCC,YAAa,CACT,CAAC,UAAW,kBAAmB,WAC/B,CAAC,IAAK,gBAEVC,UAAW,CACP,CAAC,QAAS,YACV,CAAC,OAAQ,YACT,CAAC,OAAQ"},"name":"static/chunks/90.a7dab7850001b3446559.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[90],{\n\n/***/ \"H9Kn\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    comments: {\n        lineComment: '#',\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.perl',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n    ],\n    // https://learn.perl.org/docs/keywords.html\n    // Perl syntax\n    keywords: [\n        '__DATA__',\n        'else',\n        'lock',\n        '__END__',\n        'elsif',\n        'lt',\n        '__FILE__',\n        'eq',\n        '__LINE__',\n        'exp',\n        'ne',\n        'sub',\n        '__PACKAGE__',\n        'for',\n        'no',\n        'and',\n        'foreach',\n        'or',\n        'unless',\n        'cmp',\n        'ge',\n        'package',\n        'until',\n        'continue',\n        'gt',\n        'while',\n        'CORE',\n        'if',\n        'xor',\n        'do',\n        'le',\n        '__DIE__',\n        '__WARN__',\n    ],\n    // Perl functions\n    builtinFunctions: [\n        '-A',\n        'END',\n        'length',\n        'setpgrp',\n        '-B',\n        'endgrent',\n        'link',\n        'setpriority',\n        '-b',\n        'endhostent',\n        'listen',\n        'setprotoent',\n        '-C',\n        'endnetent',\n        'local',\n        'setpwent',\n        '-c',\n        'endprotoent',\n        'localtime',\n        'setservent',\n        '-d',\n        'endpwent',\n        'log',\n        'setsockopt',\n        '-e',\n        'endservent',\n        'lstat',\n        'shift',\n        '-f',\n        'eof',\n        'map',\n        'shmctl',\n        '-g',\n        'eval',\n        'mkdir',\n        'shmget',\n        '-k',\n        'exec',\n        'msgctl',\n        'shmread',\n        '-l',\n        'exists',\n        'msgget',\n        'shmwrite',\n        '-M',\n        'exit',\n        'msgrcv',\n        'shutdown',\n        '-O',\n        'fcntl',\n        'msgsnd',\n        'sin',\n        '-o',\n        'fileno',\n        'my',\n        'sleep',\n        '-p',\n        'flock',\n        'next',\n        'socket',\n        '-r',\n        'fork',\n        'not',\n        'socketpair',\n        '-R',\n        'format',\n        'oct',\n        'sort',\n        '-S',\n        'formline',\n        'open',\n        'splice',\n        '-s',\n        'getc',\n        'opendir',\n        'split',\n        '-T',\n        'getgrent',\n        'ord',\n        'sprintf',\n        '-t',\n        'getgrgid',\n        'our',\n        'sqrt',\n        '-u',\n        'getgrnam',\n        'pack',\n        'srand',\n        '-w',\n        'gethostbyaddr',\n        'pipe',\n        'stat',\n        '-W',\n        'gethostbyname',\n        'pop',\n        'state',\n        '-X',\n        'gethostent',\n        'pos',\n        'study',\n        '-x',\n        'getlogin',\n        'print',\n        'substr',\n        '-z',\n        'getnetbyaddr',\n        'printf',\n        'symlink',\n        'abs',\n        'getnetbyname',\n        'prototype',\n        'syscall',\n        'accept',\n        'getnetent',\n        'push',\n        'sysopen',\n        'alarm',\n        'getpeername',\n        'quotemeta',\n        'sysread',\n        'atan2',\n        'getpgrp',\n        'rand',\n        'sysseek',\n        'AUTOLOAD',\n        'getppid',\n        'read',\n        'system',\n        'BEGIN',\n        'getpriority',\n        'readdir',\n        'syswrite',\n        'bind',\n        'getprotobyname',\n        'readline',\n        'tell',\n        'binmode',\n        'getprotobynumber',\n        'readlink',\n        'telldir',\n        'bless',\n        'getprotoent',\n        'readpipe',\n        'tie',\n        'break',\n        'getpwent',\n        'recv',\n        'tied',\n        'caller',\n        'getpwnam',\n        'redo',\n        'time',\n        'chdir',\n        'getpwuid',\n        'ref',\n        'times',\n        'CHECK',\n        'getservbyname',\n        'rename',\n        'truncate',\n        'chmod',\n        'getservbyport',\n        'require',\n        'uc',\n        'chomp',\n        'getservent',\n        'reset',\n        'ucfirst',\n        'chop',\n        'getsockname',\n        'return',\n        'umask',\n        'chown',\n        'getsockopt',\n        'reverse',\n        'undef',\n        'chr',\n        'glob',\n        'rewinddir',\n        'UNITCHECK',\n        'chroot',\n        'gmtime',\n        'rindex',\n        'unlink',\n        'close',\n        'goto',\n        'rmdir',\n        'unpack',\n        'closedir',\n        'grep',\n        'say',\n        'unshift',\n        'connect',\n        'hex',\n        'scalar',\n        'untie',\n        'cos',\n        'index',\n        'seek',\n        'use',\n        'crypt',\n        'INIT',\n        'seekdir',\n        'utime',\n        'dbmclose',\n        'int',\n        'select',\n        'values',\n        'dbmopen',\n        'ioctl',\n        'semctl',\n        'vec',\n        'defined',\n        'join',\n        'semget',\n        'wait',\n        'delete',\n        'keys',\n        'semop',\n        'waitpid',\n        'DESTROY',\n        'kill',\n        'send',\n        'wantarray',\n        'die',\n        'last',\n        'setgrent',\n        'warn',\n        'dump',\n        'lc',\n        'sethostent',\n        'write',\n        'each',\n        'lcfirst',\n        'setnetent',\n    ],\n    // File handlers\n    builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\n    // Perl variables\n    builtinVariables: [\n        '$!',\n        '$^RE_TRIE_MAXBUF',\n        '$LAST_REGEXP_CODE_RESULT',\n        '$\"',\n        '$^S',\n        '$LIST_SEPARATOR',\n        '$#',\n        '$^T',\n        '$MATCH',\n        '$$',\n        '$^TAINT',\n        '$MULTILINE_MATCHING',\n        '$%',\n        '$^UNICODE',\n        '$NR',\n        '$&',\n        '$^UTF8LOCALE',\n        '$OFMT',\n        \"$'\",\n        '$^V',\n        '$OFS',\n        '$(',\n        '$^W',\n        '$ORS',\n        '$)',\n        '$^WARNING_BITS',\n        '$OS_ERROR',\n        '$*',\n        '$^WIDE_SYSTEM_CALLS',\n        '$OSNAME',\n        '$+',\n        '$^X',\n        '$OUTPUT_AUTO_FLUSH',\n        '$,',\n        '$_',\n        '$OUTPUT_FIELD_SEPARATOR',\n        '$-',\n        '$`',\n        '$OUTPUT_RECORD_SEPARATOR',\n        '$.',\n        '$a',\n        '$PERL_VERSION',\n        '$/',\n        '$ACCUMULATOR',\n        '$PERLDB',\n        '$0',\n        '$ARG',\n        '$PID',\n        '$:',\n        '$ARGV',\n        '$POSTMATCH',\n        '$;',\n        '$b',\n        '$PREMATCH',\n        '$<',\n        '$BASETIME',\n        '$PROCESS_ID',\n        '$=',\n        '$CHILD_ERROR',\n        '$PROGRAM_NAME',\n        '$>',\n        '$COMPILING',\n        '$REAL_GROUP_ID',\n        '$?',\n        '$DEBUGGING',\n        '$REAL_USER_ID',\n        '$@',\n        '$EFFECTIVE_GROUP_ID',\n        '$RS',\n        '$[',\n        '$EFFECTIVE_USER_ID',\n        '$SUBSCRIPT_SEPARATOR',\n        '$\\\\',\n        '$EGID',\n        '$SUBSEP',\n        '$]',\n        '$ERRNO',\n        '$SYSTEM_FD_MAX',\n        '$^',\n        '$EUID',\n        '$UID',\n        '$^A',\n        '$EVAL_ERROR',\n        '$WARNING',\n        '$^C',\n        '$EXCEPTIONS_BEING_CAUGHT',\n        '$|',\n        '$^CHILD_ERROR_NATIVE',\n        '$EXECUTABLE_NAME',\n        '$~',\n        '$^D',\n        '$EXTENDED_OS_ERROR',\n        '%!',\n        '$^E',\n        '$FORMAT_FORMFEED',\n        '%^H',\n        '$^ENCODING',\n        '$FORMAT_LINE_BREAK_CHARACTERS',\n        '%ENV',\n        '$^F',\n        '$FORMAT_LINES_LEFT',\n        '%INC',\n        '$^H',\n        '$FORMAT_LINES_PER_PAGE',\n        '%OVERLOAD',\n        '$^I',\n        '$FORMAT_NAME',\n        '%SIG',\n        '$^L',\n        '$FORMAT_PAGE_NUMBER',\n        '@+',\n        '$^M',\n        '$FORMAT_TOP_NAME',\n        '@-',\n        '$^N',\n        '$GID',\n        '@_',\n        '$^O',\n        '$INPLACE_EDIT',\n        '@ARGV',\n        '$^OPEN',\n        '$INPUT_LINE_NUMBER',\n        '@INC',\n        '$^P',\n        '$INPUT_RECORD_SEPARATOR',\n        '@LAST_MATCH_START',\n        '$^R',\n        '$LAST_MATCH_END',\n        '$^RE_DEBUG_FLAGS',\n        '$LAST_PAREN_MATCH',\n    ],\n    // operators\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n    quoteLikeOps: ['qr', 'm', 's', 'q', 'qq', 'qx', 'qw', 'tr', 'y'],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z\\-_][\\w\\-_]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtinFunctions': 'type.identifier',\n                        '@builtinFileHandlers': 'variable.predefined',\n                        '@quoteLikeOps': { token: '@rematch', next: 'quotedConstructs' },\n                        '@default': '',\n                    },\n                },\n            ],\n            // Perl variables\n            [\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n                {\n                    cases: {\n                        '@builtinVariables': 'variable.predefined',\n                        '@default': 'variable',\n                    },\n                },\n            ],\n            { include: '@strings' },\n            { include: '@dblStrings' },\n            // Perl Doc\n            { include: '@perldoc' },\n            // Here Doc\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            // RegExp\n            [\n                /[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\n                'regexp',\n            ],\n            [/@symbols/, 'operators'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment'],\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n        ],\n        // Single quote string\n        strings: [[/'/, 'string', '@stringBody']],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/\\\\'/, 'string.escape'],\n            [/./, 'string'],\n        ],\n        // Double quote string\n        dblStrings: [[/\"/, 'string', '@dblStringBody']],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            { include: '@variables' },\n            [/./, 'string'],\n        ],\n        // Quoted constructs\n        // Percent strings in Ruby are similar to quote-like operators in Perl.\n        // This is adapted from pstrings in ../ruby/ruby.ts.\n        quotedConstructs: [\n            [/(q|qw|tr|y)\\s*\\(/, { token: 'string.delim', switchTo: '@qstring.(.)' }],\n            [/(q|qw|tr|y)\\s*\\[/, { token: 'string.delim', switchTo: '@qstring.[.]' }],\n            [/(q|qw|tr|y)\\s*\\{/, { token: 'string.delim', switchTo: '@qstring.{.}' }],\n            [/(q|qw|tr|y)\\s*</, { token: 'string.delim', switchTo: '@qstring.<.>' }],\n            [/(q|qw|tr|y)#/, { token: 'string.delim', switchTo: '@qstring.#.#' }],\n            [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\n            [/(q|qw|tr|y)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\n            [/(qr|m|s)\\s*\\(/, { token: 'regexp.delim', switchTo: '@qregexp.(.)' }],\n            [/(qr|m|s)\\s*\\[/, { token: 'regexp.delim', switchTo: '@qregexp.[.]' }],\n            [/(qr|m|s)\\s*\\{/, { token: 'regexp.delim', switchTo: '@qregexp.{.}' }],\n            [/(qr|m|s)\\s*</, { token: 'regexp.delim', switchTo: '@qregexp.<.>' }],\n            [/(qr|m|s)#/, { token: 'regexp.delim', switchTo: '@qregexp.#.#' }],\n            [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\n            [/(qr|m|s)\\s+(\\w)/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\n            [/(qq|qx)\\s*\\(/, { token: 'string.delim', switchTo: '@qqstring.(.)' }],\n            [/(qq|qx)\\s*\\[/, { token: 'string.delim', switchTo: '@qqstring.[.]' }],\n            [/(qq|qx)\\s*\\{/, { token: 'string.delim', switchTo: '@qqstring.{.}' }],\n            [/(qq|qx)\\s*</, { token: 'string.delim', switchTo: '@qqstring.<.>' }],\n            [/(qq|qx)#/, { token: 'string.delim', switchTo: '@qqstring.#.#' }],\n            [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\n            [/(qq|qx)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\n        ],\n        // Non-expanded quoted string\n        // qstring<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [/\\\\./, 'string.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S3': { token: 'string.delim', next: '@pop' },\n                        '$#==$S2': { token: 'string.delim', next: '@push' },\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        // Quoted regexp\n        // qregexp.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qregexp: [\n            { include: '@variables' },\n            [/\\\\./, 'regexp.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S3': { token: 'regexp.delim', next: '@regexpModifiers' },\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\n                        '@default': 'regexp'\n                    }\n                }],\n        ],\n        regexpModifiers: [\n            [/[msixpodualngcer]+/, { token: 'regexp.modifier', next: '@popall' }],\n        ],\n        // Expanded quoted string\n        // qqstring.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            { include: '@variables' },\n            { include: '@qstring' },\n        ],\n        heredoc: [\n            [\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\n                { token: 'string.heredoc.delimiter', next: '@heredocBody.$1' },\n            ],\n        ],\n        heredocBody: [\n            [\n                /^([\\w\\-]+)$/,\n                {\n                    cases: {\n                        '$1==$S2': [{ token: 'string.heredoc.delimiter', next: '@popall' }],\n                        '@default': 'string.heredoc',\n                    },\n                },\n            ],\n            [/./, 'string.heredoc'],\n        ],\n        perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\n        perldocBody: [\n            [/^=cut\\b/, 'type.identifier', '@popall'],\n            [/./, 'comment.doc'],\n        ],\n        variables: [\n            [/\\$\\w+/, 'variable'],\n            [/@\\w+/, 'variable'],\n            [/%\\w+/, 'variable'],\n        ],\n    },\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/monaco-markdown/node_modules/monaco-editor/esm/vs/basic-languages/perl/perl.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA;AACA,KAAK;AACL,kBAAkB,KAAK;AACvB;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC;AACA;AACO;AACP;AACA;AACA;AACA,SAAS,qCAAqC,YAAY,GAAG;AAC7D,SAAS,wDAAwD;AACjE,SAAS,mDAAmcAAc,EAAE,cAAc,EAAE;AAClF;AACA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8CAA8C;AACxF;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC;AACA,aAAa,sBAAsB;AACnC;AACA,aAAa,sBAAsB;AACnC,iBAAiB;AACjB;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kDAAkD;AACpF,kCAAkC,kDAAkD;AACpF,8BAA8B,IAAI,6CAA6C,EAAE,GAAG;AACpF,iCAAiC,kDAAkD;AACnF,8BAA8B,kDAAkD;AAChF,iDAAiD,oDAAoD;AACrG,oCAAoC,oDAAoD;AACxF,+BAA+B,kDAAkD;AACjF,+BAA+B,kDAAkD;AACjF,2BAA2B,IAAI,6CAA6C,EAAE,GAAG;AACjF,8BAA8B,kDAAkD;AAChF,2BAA2B,kDAAkD;AAC7E,+CAA+C,oDAAoD;AACnG,iCAAiC,oDAAoD;AACrF,8BAA8B,mDAAmD;AACjF,8BAA8B,mDAAmD;AACjF,0BAA0B,IAAI,8CAA8C,EAAE,GAAG;AACjF,6BAA6B,mDAAmD;AAChF,0BAA0B,mDAAmD;AAC7E,6CAA6C,qDAAqD;AAClG,gCAAgC,qDAAqD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sCAAsC;AAC1E,oCAAoC,uCAAuC;AAC3E;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA,oCAAoC,kDAAkD;AACtF,oCAAoC,uCAAuC;AAC3E;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oCAAoC,4CAA4C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA,iBAAiB,6DAA6D;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qDAAqD;AAC1F;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL","file":"x","sourcesContent":["/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.perl',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n    ],\n    // https://learn.perl.org/docs/keywords.html\n    // Perl syntax\n    keywords: [\n        '__DATA__',\n        'else',\n        'lock',\n        '__END__',\n        'elsif',\n        'lt',\n        '__FILE__',\n        'eq',\n        '__LINE__',\n        'exp',\n        'ne',\n        'sub',\n        '__PACKAGE__',\n        'for',\n        'no',\n        'and',\n        'foreach',\n        'or',\n        'unless',\n        'cmp',\n        'ge',\n        'package',\n        'until',\n        'continue',\n        'gt',\n        'while',\n        'CORE',\n        'if',\n        'xor',\n        'do',\n        'le',\n        '__DIE__',\n        '__WARN__',\n    ],\n    // Perl functions\n    builtinFunctions: [\n        '-A',\n        'END',\n        'length',\n        'setpgrp',\n        '-B',\n        'endgrent',\n        'link',\n        'setpriority',\n        '-b',\n        'endhostent',\n        'listen',\n        'setprotoent',\n        '-C',\n        'endnetent',\n        'local',\n        'setpwent',\n        '-c',\n        'endprotoent',\n        'localtime',\n        'setservent',\n        '-d',\n        'endpwent',\n        'log',\n        'setsockopt',\n        '-e',\n        'endservent',\n        'lstat',\n        'shift',\n        '-f',\n        'eof',\n        'map',\n        'shmctl',\n        '-g',\n        'eval',\n        'mkdir',\n        'shmget',\n        '-k',\n        'exec',\n        'msgctl',\n        'shmread',\n        '-l',\n        'exists',\n        'msgget',\n        'shmwrite',\n        '-M',\n        'exit',\n        'msgrcv',\n        'shutdown',\n        '-O',\n        'fcntl',\n        'msgsnd',\n        'sin',\n        '-o',\n        'fileno',\n        'my',\n        'sleep',\n        '-p',\n        'flock',\n        'next',\n        'socket',\n        '-r',\n        'fork',\n        'not',\n        'socketpair',\n        '-R',\n        'format',\n        'oct',\n        'sort',\n        '-S',\n        'formline',\n        'open',\n        'splice',\n        '-s',\n        'getc',\n        'opendir',\n        'split',\n        '-T',\n        'getgrent',\n        'ord',\n        'sprintf',\n        '-t',\n        'getgrgid',\n        'our',\n        'sqrt',\n        '-u',\n        'getgrnam',\n        'pack',\n        'srand',\n        '-w',\n        'gethostbyaddr',\n        'pipe',\n        'stat',\n        '-W',\n        'gethostbyname',\n        'pop',\n        'state',\n        '-X',\n        'gethostent',\n        'pos',\n        'study',\n        '-x',\n        'getlogin',\n        'print',\n        'substr',\n        '-z',\n        'getnetbyaddr',\n        'printf',\n        'symlink',\n        'abs',\n        'getnetbyname',\n        'prototype',\n        'syscall',\n        'accept',\n        'getnetent',\n        'push',\n        'sysopen',\n        'alarm',\n        'getpeername',\n        'quotemeta',\n        'sysread',\n        'atan2',\n        'getpgrp',\n        'rand',\n        'sysseek',\n        'AUTOLOAD',\n        'getppid',\n        'read',\n        'system',\n        'BEGIN',\n        'getpriority',\n        'readdir',\n        'syswrite',\n        'bind',\n        'getprotobyname',\n        'readline',\n        'tell',\n        'binmode',\n        'getprotobynumber',\n        'readlink',\n        'telldir',\n        'bless',\n        'getprotoent',\n        'readpipe',\n        'tie',\n        'break',\n        'getpwent',\n        'recv',\n        'tied',\n        'caller',\n        'getpwnam',\n        'redo',\n        'time',\n        'chdir',\n        'getpwuid',\n        'ref',\n        'times',\n        'CHECK',\n        'getservbyname',\n        'rename',\n        'truncate',\n        'chmod',\n        'getservbyport',\n        'require',\n        'uc',\n        'chomp',\n        'getservent',\n        'reset',\n        'ucfirst',\n        'chop',\n        'getsockname',\n        'return',\n        'umask',\n        'chown',\n        'getsockopt',\n        'reverse',\n        'undef',\n        'chr',\n        'glob',\n        'rewinddir',\n        'UNITCHECK',\n        'chroot',\n        'gmtime',\n        'rindex',\n        'unlink',\n        'close',\n        'goto',\n        'rmdir',\n        'unpack',\n        'closedir',\n        'grep',\n        'say',\n        'unshift',\n        'connect',\n        'hex',\n        'scalar',\n        'untie',\n        'cos',\n        'index',\n        'seek',\n        'use',\n        'crypt',\n        'INIT',\n        'seekdir',\n        'utime',\n        'dbmclose',\n        'int',\n        'select',\n        'values',\n        'dbmopen',\n        'ioctl',\n        'semctl',\n        'vec',\n        'defined',\n        'join',\n        'semget',\n        'wait',\n        'delete',\n        'keys',\n        'semop',\n        'waitpid',\n        'DESTROY',\n        'kill',\n        'send',\n        'wantarray',\n        'die',\n        'last',\n        'setgrent',\n        'warn',\n        'dump',\n        'lc',\n        'sethostent',\n        'write',\n        'each',\n        'lcfirst',\n        'setnetent',\n    ],\n    // File handlers\n    builtinFileHandlers: ['ARGV', 'STDERR', 'STDOUT', 'ARGVOUT', 'STDIN', 'ENV'],\n    // Perl variables\n    builtinVariables: [\n        '$!',\n        '$^RE_TRIE_MAXBUF',\n        '$LAST_REGEXP_CODE_RESULT',\n        '$\"',\n        '$^S',\n        '$LIST_SEPARATOR',\n        '$#',\n        '$^T',\n        '$MATCH',\n        '$$',\n        '$^TAINT',\n        '$MULTILINE_MATCHING',\n        '$%',\n        '$^UNICODE',\n        '$NR',\n        '$&',\n        '$^UTF8LOCALE',\n        '$OFMT',\n        \"$'\",\n        '$^V',\n        '$OFS',\n        '$(',\n        '$^W',\n        '$ORS',\n        '$)',\n        '$^WARNING_BITS',\n        '$OS_ERROR',\n        '$*',\n        '$^WIDE_SYSTEM_CALLS',\n        '$OSNAME',\n        '$+',\n        '$^X',\n        '$OUTPUT_AUTO_FLUSH',\n        '$,',\n        '$_',\n        '$OUTPUT_FIELD_SEPARATOR',\n        '$-',\n        '$`',\n        '$OUTPUT_RECORD_SEPARATOR',\n        '$.',\n        '$a',\n        '$PERL_VERSION',\n        '$/',\n        '$ACCUMULATOR',\n        '$PERLDB',\n        '$0',\n        '$ARG',\n        '$PID',\n        '$:',\n        '$ARGV',\n        '$POSTMATCH',\n        '$;',\n        '$b',\n        '$PREMATCH',\n        '$<',\n        '$BASETIME',\n        '$PROCESS_ID',\n        '$=',\n        '$CHILD_ERROR',\n        '$PROGRAM_NAME',\n        '$>',\n        '$COMPILING',\n        '$REAL_GROUP_ID',\n        '$?',\n        '$DEBUGGING',\n        '$REAL_USER_ID',\n        '$@',\n        '$EFFECTIVE_GROUP_ID',\n        '$RS',\n        '$[',\n        '$EFFECTIVE_USER_ID',\n        '$SUBSCRIPT_SEPARATOR',\n        '$\\\\',\n        '$EGID',\n        '$SUBSEP',\n        '$]',\n        '$ERRNO',\n        '$SYSTEM_FD_MAX',\n        '$^',\n        '$EUID',\n        '$UID',\n        '$^A',\n        '$EVAL_ERROR',\n        '$WARNING',\n        '$^C',\n        '$EXCEPTIONS_BEING_CAUGHT',\n        '$|',\n        '$^CHILD_ERROR_NATIVE',\n        '$EXECUTABLE_NAME',\n        '$~',\n        '$^D',\n        '$EXTENDED_OS_ERROR',\n        '%!',\n        '$^E',\n        '$FORMAT_FORMFEED',\n        '%^H',\n        '$^ENCODING',\n        '$FORMAT_LINE_BREAK_CHARACTERS',\n        '%ENV',\n        '$^F',\n        '$FORMAT_LINES_LEFT',\n        '%INC',\n        '$^H',\n        '$FORMAT_LINES_PER_PAGE',\n        '%OVERLOAD',\n        '$^I',\n        '$FORMAT_NAME',\n        '%SIG',\n        '$^L',\n        '$FORMAT_PAGE_NUMBER',\n        '@+',\n        '$^M',\n        '$FORMAT_TOP_NAME',\n        '@-',\n        '$^N',\n        '$GID',\n        '@_',\n        '$^O',\n        '$INPLACE_EDIT',\n        '@ARGV',\n        '$^OPEN',\n        '$INPUT_LINE_NUMBER',\n        '@INC',\n        '$^P',\n        '$INPUT_RECORD_SEPARATOR',\n        '@LAST_MATCH_START',\n        '$^R',\n        '$LAST_MATCH_END',\n        '$^RE_DEBUG_FLAGS',\n        '$LAST_PAREN_MATCH',\n    ],\n    // operators\n    symbols: /[:+\\-\\^*$&%@=<>!?|\\/~\\.]/,\n    quoteLikeOps: ['qr', 'm', 's', 'q', 'qq', 'qx', 'qw', 'tr', 'y'],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z\\-_][\\w\\-_]*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtinFunctions': 'type.identifier',\n                        '@builtinFileHandlers': 'variable.predefined',\n                        '@quoteLikeOps': { token: '@rematch', next: 'quotedConstructs' },\n                        '@default': '',\n                    },\n                },\n            ],\n            // Perl variables\n            [\n                /[\\$@%][*@#?\\+\\-\\$!\\w\\\\\\^><~:;\\.]+/,\n                {\n                    cases: {\n                        '@builtinVariables': 'variable.predefined',\n                        '@default': 'variable',\n                    },\n                },\n            ],\n            { include: '@strings' },\n            { include: '@dblStrings' },\n            // Perl Doc\n            { include: '@perldoc' },\n            // Here Doc\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            // RegExp\n            [\n                /[\\/](?:(?:\\[(?:\\\\]|[^\\]])+\\])|(?:\\\\\\/|[^\\]\\/]))*[\\/]\\w*\\s*(?=[).,;]|$)/,\n                'regexp',\n            ],\n            [/@symbols/, 'operators'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter'],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment'],\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number'],\n        ],\n        // Single quote string\n        strings: [[/'/, 'string', '@stringBody']],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/\\\\'/, 'string.escape'],\n            [/./, 'string'],\n        ],\n        // Double quote string\n        dblStrings: [[/\"/, 'string', '@dblStringBody']],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            { include: '@variables' },\n            [/./, 'string'],\n        ],\n        // Quoted constructs\n        // Percent strings in Ruby are similar to quote-like operators in Perl.\n        // This is adapted from pstrings in ../ruby/ruby.ts.\n        quotedConstructs: [\n            [/(q|qw|tr|y)\\s*\\(/, { token: 'string.delim', switchTo: '@qstring.(.)' }],\n            [/(q|qw|tr|y)\\s*\\[/, { token: 'string.delim', switchTo: '@qstring.[.]' }],\n            [/(q|qw|tr|y)\\s*\\{/, { token: 'string.delim', switchTo: '@qstring.{.}' }],\n            [/(q|qw|tr|y)\\s*</, { token: 'string.delim', switchTo: '@qstring.<.>' }],\n            [/(q|qw|tr|y)#/, { token: 'string.delim', switchTo: '@qstring.#.#' }],\n            [/(q|qw|tr|y)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\n            [/(q|qw|tr|y)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qstring.$2.$2' }],\n            [/(qr|m|s)\\s*\\(/, { token: 'regexp.delim', switchTo: '@qregexp.(.)' }],\n            [/(qr|m|s)\\s*\\[/, { token: 'regexp.delim', switchTo: '@qregexp.[.]' }],\n            [/(qr|m|s)\\s*\\{/, { token: 'regexp.delim', switchTo: '@qregexp.{.}' }],\n            [/(qr|m|s)\\s*</, { token: 'regexp.delim', switchTo: '@qregexp.<.>' }],\n            [/(qr|m|s)#/, { token: 'regexp.delim', switchTo: '@qregexp.#.#' }],\n            [/(qr|m|s)\\s*([^A-Za-z0-9_#\\s])/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\n            [/(qr|m|s)\\s+(\\w)/, { token: 'regexp.delim', switchTo: '@qregexp.$2.$2' }],\n            [/(qq|qx)\\s*\\(/, { token: 'string.delim', switchTo: '@qqstring.(.)' }],\n            [/(qq|qx)\\s*\\[/, { token: 'string.delim', switchTo: '@qqstring.[.]' }],\n            [/(qq|qx)\\s*\\{/, { token: 'string.delim', switchTo: '@qqstring.{.}' }],\n            [/(qq|qx)\\s*</, { token: 'string.delim', switchTo: '@qqstring.<.>' }],\n            [/(qq|qx)#/, { token: 'string.delim', switchTo: '@qqstring.#.#' }],\n            [/(qq|qx)\\s*([^A-Za-z0-9#\\s])/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\n            [/(qq|qx)\\s+(\\w)/, { token: 'string.delim', switchTo: '@qqstring.$2.$2' }],\n        ],\n        // Non-expanded quoted string\n        // qstring<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [/\\\\./, 'string.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S3': { token: 'string.delim', next: '@pop' },\n                        '$#==$S2': { token: 'string.delim', next: '@push' },\n                        '@default': 'string'\n                    }\n                }],\n        ],\n        // Quoted regexp\n        // qregexp.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qregexp: [\n            { include: '@variables' },\n            [/\\\\./, 'regexp.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S3': { token: 'regexp.delim', next: '@regexpModifiers' },\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\n                        '@default': 'regexp'\n                    }\n                }],\n        ],\n        regexpModifiers: [\n            [/[msixpodualngcer]+/, { token: 'regexp.modifier', next: '@popall' }],\n        ],\n        // Expanded quoted string\n        // qqstring.<open>.<close>\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            { include: '@variables' },\n            { include: '@qstring' },\n        ],\n        heredoc: [\n            [\n                /<<\\s*['\"`]?([\\w\\-]+)['\"`]?/,\n                { token: 'string.heredoc.delimiter', next: '@heredocBody.$1' },\n            ],\n        ],\n        heredocBody: [\n            [\n                /^([\\w\\-]+)$/,\n                {\n                    cases: {\n                        '$1==$S2': [{ token: 'string.heredoc.delimiter', next: '@popall' }],\n                        '@default': 'string.heredoc',\n                    },\n                },\n            ],\n            [/./, 'string.heredoc'],\n        ],\n        perldoc: [[/^=\\w/, 'comment.doc', '@perldocBody']],\n        perldocBody: [\n            [/^=cut\\b/, 'type.identifier', '@popall'],\n            [/./, 'comment.doc'],\n        ],\n        variables: [\n            [/\\$\\w+/, 'variable'],\n            [/@\\w+/, 'variable'],\n            [/%\\w+/, 'variable'],\n        ],\n    },\n};\n"]}}