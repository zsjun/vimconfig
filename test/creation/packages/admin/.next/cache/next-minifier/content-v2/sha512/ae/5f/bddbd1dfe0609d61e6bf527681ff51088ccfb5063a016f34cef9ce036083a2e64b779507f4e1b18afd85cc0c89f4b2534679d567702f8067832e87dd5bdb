{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[110],{FYUB:function(e,n,o){\"use strict\";o.r(n),o.d(n,\"conf\",(function(){return t})),o.d(n,\"language\",(function(){return r}));var t={comments:{lineComment:\"//\",blockComment:[\"(*\",\"*)\"]},brackets:[[\"{\",\"}\"],[\"[\",\"]\"],[\"(\",\")\"],[\"var\",\"end_var\"],[\"var_input\",\"end_var\"],[\"var_output\",\"end_var\"],[\"var_in_out\",\"end_var\"],[\"var_temp\",\"end_var\"],[\"var_global\",\"end_var\"],[\"var_access\",\"end_var\"],[\"var_external\",\"end_var\"],[\"type\",\"end_type\"],[\"struct\",\"end_struct\"],[\"program\",\"end_program\"],[\"function\",\"end_function\"],[\"function_block\",\"end_function_block\"],[\"action\",\"end_action\"],[\"step\",\"end_step\"],[\"initial_step\",\"end_step\"],[\"transaction\",\"end_transaction\"],[\"configuration\",\"end_configuration\"],[\"tcp\",\"end_tcp\"],[\"recource\",\"end_recource\"],[\"channel\",\"end_channel\"],[\"library\",\"end_library\"],[\"folder\",\"end_folder\"],[\"binaries\",\"end_binaries\"],[\"includes\",\"end_includes\"],[\"sources\",\"end_sources\"]],autoClosingPairs:[{open:\"[\",close:\"]\"},{open:\"{\",close:\"}\"},{open:\"(\",close:\")\"},{open:\"/*\",close:\"*/\"},{open:\"'\",close:\"'\",notIn:[\"string_sq\"]},{open:'\"',close:'\"',notIn:[\"string_dq\"]},{open:\"var\",close:\"end_var\"},{open:\"var_input\",close:\"end_var\"},{open:\"var_output\",close:\"end_var\"},{open:\"var_in_out\",close:\"end_var\"},{open:\"var_temp\",close:\"end_var\"},{open:\"var_global\",close:\"end_var\"},{open:\"var_access\",close:\"end_var\"},{open:\"var_external\",close:\"end_var\"},{open:\"type\",close:\"end_type\"},{open:\"struct\",close:\"end_struct\"},{open:\"program\",close:\"end_program\"},{open:\"function\",close:\"end_function\"},{open:\"function_block\",close:\"end_function_block\"},{open:\"action\",close:\"end_action\"},{open:\"step\",close:\"end_step\"},{open:\"initial_step\",close:\"end_step\"},{open:\"transaction\",close:\"end_transaction\"},{open:\"configuration\",close:\"end_configuration\"},{open:\"tcp\",close:\"end_tcp\"},{open:\"recource\",close:\"end_recource\"},{open:\"channel\",close:\"end_channel\"},{open:\"library\",close:\"end_library\"},{open:\"folder\",close:\"end_folder\"},{open:\"binaries\",close:\"end_binaries\"},{open:\"includes\",close:\"end_includes\"},{open:\"sources\",close:\"end_sources\"}],surroundingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"},{open:\"var\",close:\"end_var\"},{open:\"var_input\",close:\"end_var\"},{open:\"var_output\",close:\"end_var\"},{open:\"var_in_out\",close:\"end_var\"},{open:\"var_temp\",close:\"end_var\"},{open:\"var_global\",close:\"end_var\"},{open:\"var_access\",close:\"end_var\"},{open:\"var_external\",close:\"end_var\"},{open:\"type\",close:\"end_type\"},{open:\"struct\",close:\"end_struct\"},{open:\"program\",close:\"end_program\"},{open:\"function\",close:\"end_function\"},{open:\"function_block\",close:\"end_function_block\"},{open:\"action\",close:\"end_action\"},{open:\"step\",close:\"end_step\"},{open:\"initial_step\",close:\"end_step\"},{open:\"transaction\",close:\"end_transaction\"},{open:\"configuration\",close:\"end_configuration\"},{open:\"tcp\",close:\"end_tcp\"},{open:\"recource\",close:\"end_recource\"},{open:\"channel\",close:\"end_channel\"},{open:\"library\",close:\"end_library\"},{open:\"folder\",close:\"end_folder\"},{open:\"binaries\",close:\"end_binaries\"},{open:\"includes\",close:\"end_includes\"},{open:\"sources\",close:\"end_sources\"}],folding:{markers:{start:new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),end:new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")}}},r={defaultToken:\"\",tokenPostfix:\".st\",ignoreCase:!0,brackets:[{token:\"delimiter.curly\",open:\"{\",close:\"}\"},{token:\"delimiter.parenthesis\",open:\"(\",close:\")\"},{token:\"delimiter.square\",open:\"[\",close:\"]\"}],keywords:[\"if\",\"end_if\",\"elsif\",\"else\",\"case\",\"of\",\"to\",\"do\",\"with\",\"by\",\"while\",\"repeat\",\"end_while\",\"end_repeat\",\"end_case\",\"for\",\"end_for\",\"task\",\"retain\",\"non_retain\",\"constant\",\"with\",\"at\",\"exit\",\"return\",\"interval\",\"priority\",\"address\",\"port\",\"on_channel\",\"then\",\"iec\",\"file\",\"uses\",\"version\",\"packagetype\",\"displayname\",\"copyright\",\"summary\",\"vendor\",\"common_source\",\"from\"],constant:[\"false\",\"true\",\"null\"],defineKeywords:[\"var\",\"var_input\",\"var_output\",\"var_in_out\",\"var_temp\",\"var_global\",\"var_access\",\"var_external\",\"end_var\",\"type\",\"end_type\",\"struct\",\"end_struct\",\"program\",\"end_program\",\"function\",\"end_function\",\"function_block\",\"end_function_block\",\"configuration\",\"end_configuration\",\"tcp\",\"end_tcp\",\"recource\",\"end_recource\",\"channel\",\"end_channel\",\"library\",\"end_library\",\"folder\",\"end_folder\",\"binaries\",\"end_binaries\",\"includes\",\"end_includes\",\"sources\",\"end_sources\",\"action\",\"end_action\",\"step\",\"initial_step\",\"end_step\",\"transaction\",\"end_transaction\"],typeKeywords:[\"int\",\"sint\",\"dint\",\"lint\",\"usint\",\"uint\",\"udint\",\"ulint\",\"real\",\"lreal\",\"time\",\"date\",\"time_of_day\",\"date_and_time\",\"string\",\"bool\",\"byte\",\"world\",\"dworld\",\"array\",\"pointer\",\"lworld\"],operators:[\"=\",\">\",\"<\",\":\",\":=\",\"<=\",\">=\",\"<>\",\"&\",\"+\",\"-\",\"*\",\"**\",\"MOD\",\"^\",\"or\",\"and\",\"not\",\"xor\",\"abs\",\"acos\",\"asin\",\"atan\",\"cos\",\"exp\",\"expt\",\"ln\",\"log\",\"sin\",\"sqrt\",\"tan\",\"sel\",\"max\",\"min\",\"limit\",\"mux\",\"shl\",\"shr\",\"rol\",\"ror\",\"indexof\",\"sizeof\",\"adr\",\"adrinst\",\"bitadr\",\"is_valid\"],builtinVariables:[],builtinFunctions:[\"sr\",\"rs\",\"tp\",\"ton\",\"tof\",\"eq\",\"ge\",\"le\",\"lt\",\"ne\",\"round\",\"trunc\",\"ctd\",\"\\u0441tu\",\"ctud\",\"r_trig\",\"f_trig\",\"move\",\"concat\",\"delete\",\"find\",\"insert\",\"left\",\"len\",\"replace\",\"right\",\"rtc\"],symbols:/[=><!~?:&|+\\-*\\/\\^%]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[[/(T|DT|TOD)#[0-9:-_shmyd]*/,\"tag\"],[/[A-Za-z]{1,6}#[0-9]*/,\"tag\"],[/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/,\"tag\"],[/\\%(I|Q|M)[0-9\\.]*/,\"tag\"],[/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/,\"predefined\"],[/[A_Za-z]*(_TO_)[A_Za-z]*/,\"predefined\"],[/[a-zA-Z_]\\w*/,{cases:{\"@operators\":\"operators\",\"@keywords\":\"keyword\",\"@typeKeywords\":\"type\",\"@defineKeywords\":\"variable\",\"@constant\":\"constant\",\"@builtinVariables\":\"predefined\",\"@builtinFunctions\":\"predefined\",\"@default\":\"identifier\"}}],{include:\"@whitespace\"},[/[;.]/,\"delimiter\"],[/[{}()\\[\\]]/,\"@brackets\"],[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\"number.float\"],[/16#[0-9a-fA-F]+/,\"number.hex\"],[/2#[0-9_]+/,\"number.binary\"],[/\\d+/,\"number\"],[/\"([^\"\\\\]|\\\\.)*$/,\"string.invalid\"],[/\"/,{token:\"string.quote\",bracket:\"@open\",next:\"@string_dq\"}],[/'/,{token:\"string.quote\",bracket:\"@open\",next:\"@string_sq\"}],[/'[^\\\\']'/,\"string\"],[/(')(@escapes)(')/,[\"string\",\"string.escape\",\"string\"]],[/'/,\"string.invalid\"]],comment:[[/[^\\/*]+/,\"comment\"],[/\\/\\*/,\"comment\",\"@push\"],[\"\\\\*/\",\"comment\",\"@pop\"],[/[\\/*]/,\"comment\"]],comment2:[[/[^\\(*]+/,\"comment\"],[/\\(\\*/,\"comment\",\"@push\"],[\"\\\\*\\\\)\",\"comment\",\"@pop\"],[/[\\(*]/,\"comment\"]],whitespace:[[/[ \\t\\r\\n]+/,\"white\"],[/\\/\\/.*$/,\"comment\"],[/\\/\\*/,\"comment\",\"@comment\"],[/\\(\\*/,\"comment\",\"@comment2\"]],string_dq:[[/[^\\\\\"]+/,\"string\"],[/@escapes/,\"string.escape\"],[/\\\\./,\"string.escape.invalid\"],[/\"/,{token:\"string.quote\",bracket:\"@close\",next:\"@pop\"}]],string_sq:[[/[^\\\\']+/,\"string\"],[/@escapes/,\"string.escape\"],[/\\\\./,\"string.escape.invalid\"],[/'/,{token:\"string.quote\",bracket:\"@close\",next:\"@pop\"}]]}}}}]);","map":{"version":3,"sources":["static/chunks/110.284f4ba01d53154cb4f0.js"],"names":["window","push","FYUB","module","__webpack_exports__","__webpack_require__","r","d","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","cases","@operators","@keywords","@typeKeywords","@defineKeywords","@constant","@builtinVariables","@builtinFunctions","@default","include","bracket","next","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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"},"name":"static/chunks/110.284f4ba01d53154cb4f0.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[110],{\n\n/***/ \"FYUB\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to',\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\n        'copyright', 'summary', 'vendor', 'common_source', 'from'],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\n        'var_access', 'var_external', 'end_var',\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\n        'function', 'end_function', 'function_block', 'end_function_block',\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource',\n        'end_recource', 'channel', 'end_channel', 'library', 'end_library',\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\n        'end_includes', 'sources', 'end_sources',\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\n    ],\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\n        'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\n        'bitadr', 'is_valid'],\n    builtinVariables: [],\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\n        'right', 'rtc'],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(T|DT|TOD)#[0-9:-_shmyd]*/, 'tag'],\n            [/[A-Za-z]{1,6}#[0-9]*/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/, 'predefined'],\n            [/[A_Za-z]*(_TO_)[A_Za-z]*/, 'predefined'],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@whitespace' },\n            [/[;.]/, 'delimiter'],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/16#[0-9a-fA-F]+/, 'number.hex'],\n            [/2#[0-9_]+/, 'number.binary'],\n            [/\\d+/, 'number'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2'],\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/monaco-markdown/node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,gDAAgD;AACzD,SAAS,8CAA8C;AACvD,SAAS,gCAAgC;AACzC,SAAS,sCAAsC;AAC/C,SAAS,uCAAuC;AAChD,SAAS,uCAAuC;AAChD,SAAS,qCAAqC;AAC9C,SAAS,uCAAuC;AAChD,SAAS,uCAAuC;AAChD,SAAS,yCAAyC;AAClD,SAAS,kCAAkC;AAC3C,SAAS,sCAAsC;AAC/C,SAAS,wCAAwC;AACjD,SAAS,0CAA0C;AACnD,SAAS,sDAAsD;AAC/D,SAAS,sCAAsC;AAC/C,SAAS,kCAAkC;AAC3C,SAAS,0CAA0C;AACnD,SAAS,gDAAgD;AACzD,SAAS,oDAAoD;AAC7D,SAAS,gCAAgC;AACzC,SAAS,0CAA0C;AACnD,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,sCAAsC;AAC/C,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS;AACT;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,gCAAgC;AACzC,SAAS,sCAAsC;AAC/C,SAAS,uCAAuC;AAChD,SAAS,uCAAuC;AAChD,SAAS,qCAAqC;AAC9C,SAAS,uCAAuC;AAChD,SAAS,uCAAuC;AAChD,SAAS,yCAAyC;AAClD,SAAS,kCAAkC;AAC3C,SAAS,sCAAsC;AAC/C,SAAS,wCAAwC;AACjD,SAAS,0CAA0C;AACnD,SAAS,sDAAsD;AAC/D,SAAS,sCAAsC;AAC/C,SAAS,kCAAkC;AAC3C,SAAS,0CAA0C;AACnD,SAAS,gDAAgD;AACzD,SAAS,oDAAoD;AAC7D,SAAS,gCAAgC;AACzC,SAAS,0CAA0C;AACnD,SAAS,wCAAwC;AACjD,SAAS,wCAAwC;AACjD,SAAS,sCAAsC;AAC/C,SAAS,0CAA0C;AACnD,SAAS,0CAA0C;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS,mCAAmC,YAAY,GAAG;AAC3D,SAAS,wDAAwD;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,cAAc,EAAE,cAAc,EAAE;AAClF;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,yBAAyB;AACtC,gBAAgB;AAChB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,8DAA8D;AACjF,mBAAmB,8DAA8D;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAyD;AAC5E;AACA;AACA;AACA;AACA;AACA,mBAAmB,yDAAyD;AAC5E;AACA;AACA","file":"x","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to',\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\n        'copyright', 'summary', 'vendor', 'common_source', 'from'],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\n        'var_access', 'var_external', 'end_var',\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\n        'function', 'end_function', 'function_block', 'end_function_block',\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource',\n        'end_recource', 'channel', 'end_channel', 'library', 'end_library',\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\n        'end_includes', 'sources', 'end_sources',\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\n    ],\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\n        'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\n        'bitadr', 'is_valid'],\n    builtinVariables: [],\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\n        'right', 'rtc'],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(T|DT|TOD)#[0-9:-_shmyd]*/, 'tag'],\n            [/[A-Za-z]{1,6}#[0-9]*/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/, 'predefined'],\n            [/[A_Za-z]*(_TO_)[A_Za-z]*/, 'predefined'],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@whitespace' },\n            [/[;.]/, 'delimiter'],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/16#[0-9a-fA-F]+/, 'number.hex'],\n            [/2#[0-9_]+/, 'number.binary'],\n            [/\\d+/, 'number'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2'],\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n"]}}