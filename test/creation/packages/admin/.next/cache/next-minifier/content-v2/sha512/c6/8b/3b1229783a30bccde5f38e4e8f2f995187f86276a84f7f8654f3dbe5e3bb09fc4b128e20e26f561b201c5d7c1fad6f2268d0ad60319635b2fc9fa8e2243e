{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[112],{ZgDX:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"conf\",(function(){return o})),n.d(t,\"language\",(function(){return s}));var o={brackets:[[\"{\",\"}\"],[\"[\",\"]\"],[\"(\",\")\"]],autoClosingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"}],surroundingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"}]},s={tokenPostfix:\".tcl\",specialFunctions:[\"set\",\"unset\",\"rename\",\"variable\",\"proc\",\"coroutine\",\"foreach\",\"incr\",\"append\",\"lappend\",\"linsert\",\"lreplace\"],mainFunctions:[\"if\",\"then\",\"elseif\",\"else\",\"case\",\"switch\",\"while\",\"for\",\"break\",\"continue\",\"return\",\"package\",\"namespace\",\"catch\",\"exit\",\"eval\",\"expr\",\"uplevel\",\"upvar\"],builtinFunctions:[\"file\",\"info\",\"concat\",\"join\",\"lindex\",\"list\",\"llength\",\"lrange\",\"lsearch\",\"lsort\",\"split\",\"array\",\"parray\",\"binary\",\"format\",\"regexp\",\"regsub\",\"scan\",\"string\",\"subst\",\"dict\",\"cd\",\"clock\",\"exec\",\"glob\",\"pid\",\"pwd\",\"close\",\"eof\",\"fblocked\",\"fconfigure\",\"fcopy\",\"fileevent\",\"flush\",\"gets\",\"open\",\"puts\",\"read\",\"seek\",\"socket\",\"tell\",\"interp\",\"after\",\"auto_execok\",\"auto_load\",\"auto_mkindex\",\"auto_reset\",\"bgerror\",\"error\",\"global\",\"history\",\"load\",\"source\",\"time\",\"trace\",\"unknown\",\"unset\",\"update\",\"vwait\",\"winfo\",\"wm\",\"bind\",\"event\",\"pack\",\"place\",\"grid\",\"font\",\"bell\",\"clipboard\",\"destroy\",\"focus\",\"grab\",\"lower\",\"option\",\"raise\",\"selection\",\"send\",\"tk\",\"tkwait\",\"tk_bisque\",\"tk_focusNext\",\"tk_focusPrev\",\"tk_focusFollowsMouse\",\"tk_popup\",\"tk_setPalette\"],symbols:/[=><!~?:&|+\\-*\\/\\^%]+/,brackets:[{open:\"(\",close:\")\",token:\"delimiter.parenthesis\"},{open:\"{\",close:\"}\",token:\"delimiter.curly\"},{open:\"[\",close:\"]\",token:\"delimiter.square\"}],escapes:/\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,variables:/(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,tokenizer:{root:[[/[a-zA-Z_]\\w*/,{cases:{\"@specialFunctions\":{token:\"keyword.flow\",next:\"@specialFunc\"},\"@mainFunctions\":\"keyword\",\"@builtinFunctions\":\"variable\",\"@default\":\"operator.scss\"}}],[/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/,\"metatag\"],{include:\"@whitespace\"},[/[{}()\\[\\]]/,\"@brackets\"],[/@symbols/,\"operator\"],[/\\$+(?:\\:\\:)?\\{/,{token:\"identifier\",next:\"@nestedVariable\"}],[/@variables/,\"type.identifier\"],[/\\.(?!\\d|\\.)[\\w\\-]*/,\"operator.sql\"],[/\\d+(\\.\\d+)?/,\"number\"],[/\\d+/,\"number\"],[/;/,\"delimiter\"],[/\"/,{token:\"string.quote\",bracket:\"@open\",next:\"@dstring\"}],[/'/,{token:\"string.quote\",bracket:\"@open\",next:\"@sstring\"}]],dstring:[[/\\[/,{token:\"@brackets\",next:\"@nestedCall\"}],[/\\$+(?:\\:\\:)?\\{/,{token:\"identifier\",next:\"@nestedVariable\"}],[/@variables/,\"type.identifier\"],[/[^\\\\$\\[\\]\"]+/,\"string\"],[/@escapes/,\"string.escape\"],[/\"/,{token:\"string.quote\",bracket:\"@close\",next:\"@pop\"}]],sstring:[[/\\[/,{token:\"@brackets\",next:\"@nestedCall\"}],[/\\$+(?:\\:\\:)?\\{/,{token:\"identifier\",next:\"@nestedVariable\"}],[/@variables/,\"type.identifier\"],[/[^\\\\$\\[\\]']+/,\"string\"],[/@escapes/,\"string.escape\"],[/'/,{token:\"string.quote\",bracket:\"@close\",next:\"@pop\"}]],whitespace:[[/[ \\t\\r\\n]+/,\"white\"],[/#.*\\\\$/,{token:\"comment\",next:\"@newlineComment\"}],[/#.*(?!\\\\)$/,\"comment\"]],newlineComment:[[/.*\\\\$/,\"comment\"],[/.*(?!\\\\)$/,{token:\"comment\",next:\"@pop\"}]],nestedVariable:[[/[^\\{\\}\\$]+/,\"type.identifier\"],[/\\}/,{token:\"identifier\",next:\"@pop\"}]],nestedCall:[[/\\[/,{token:\"@brackets\",next:\"@nestedCall\"}],[/\\]/,{token:\"@brackets\",next:\"@pop\"}],{include:\"root\"}],specialFunc:[[/\"/,{token:\"string\",next:\"@dstring\"}],[/'/,{token:\"string\",next:\"@sstring\"}],[/(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+/,{token:\"type\",next:\"@pop\"}]]}}}}]);","map":{"version":3,"sources":["static/chunks/112.b07690b9ec2c69f83f42.js"],"names":["window","push","ZgDX","module","__webpack_exports__","__webpack_require__","r","d","conf","language","brackets","autoClosingPairs","open","close","surroundingPairs","tokenPostfix","specialFunctions","mainFunctions","builtinFunctions","symbols","token","escapes","variables","tokenizer","root","cases","@specialFunctions","next","@mainFunctions","@builtinFunctions","@default","include","bracket","dstring","sstring","whitespace","newlineComment","nestedVariable","nestedCall","specialFunc"],"mappings":"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"},"name":"static/chunks/112.b07690b9ec2c69f83f42.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[112],{\n\n/***/ \"ZgDX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nvar language = {\n    tokenPostfix: '.tcl',\n    specialFunctions: [\n        'set', 'unset', 'rename', 'variable', 'proc', 'coroutine',\n        'foreach',\n        'incr', 'append',\n        'lappend', 'linsert', 'lreplace'\n    ],\n    mainFunctions: [\n        'if', 'then', 'elseif', 'else', 'case', 'switch', 'while', 'for',\n        'break', 'continue', 'return',\n        'package', 'namespace',\n        'catch', 'exit',\n        'eval', 'expr', 'uplevel', 'upvar'\n    ],\n    builtinFunctions: [\n        'file', 'info', 'concat', 'join', 'lindex',\n        'list', 'llength', 'lrange', 'lsearch', 'lsort', 'split',\n        'array', 'parray', 'binary', 'format', 'regexp', 'regsub', 'scan', 'string',\n        'subst', 'dict', 'cd', 'clock', 'exec', 'glob', 'pid', 'pwd', 'close', 'eof', 'fblocked',\n        'fconfigure', 'fcopy', 'fileevent', 'flush', 'gets', 'open', 'puts', 'read', 'seek',\n        'socket', 'tell', 'interp', 'after', 'auto_execok',\n        'auto_load', 'auto_mkindex', 'auto_reset', 'bgerror', 'error',\n        'global', 'history', 'load', 'source', 'time', 'trace',\n        'unknown', 'unset', 'update', 'vwait', 'winfo', 'wm', 'bind', 'event',\n        'pack', 'place', 'grid', 'font', 'bell', 'clipboard', 'destroy', 'focus', 'grab', 'lower',\n        'option', 'raise', 'selection', 'send', 'tk', 'tkwait', 'tk_bisque', 'tk_focusNext',\n        'tk_focusPrev', 'tk_focusFollowsMouse', 'tk_popup', 'tk_setPalette'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, { cases: {\n                        '@specialFunctions': { token: 'keyword.flow', next: '@specialFunc' },\n                        '@mainFunctions': 'keyword',\n                        '@builtinFunctions': 'variable',\n                        '@default': 'operator.scss'\n                    } }],\n            [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, 'metatag'],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'operator'],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/\\.(?!\\d|\\.)[\\w\\-]*/, 'operator.sql'],\n            // numbers\n            [/\\d+(\\.\\d+)?/, 'number'],\n            [/\\d+/, 'number'],\n            // delimiter\n            [/;/, 'delimiter'],\n            // strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@dstring' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@sstring' }]\n        ],\n        dstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\n        ],\n        sstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#.*\\\\$/, { token: 'comment', next: '@newlineComment' }],\n            [/#.*(?!\\\\)$/, 'comment']\n        ],\n        newlineComment: [\n            [/.*\\\\$/, 'comment'],\n            [/.*(?!\\\\)$/, { token: 'comment', next: '@pop' }]\n        ],\n        nestedVariable: [\n            [/[^\\{\\}\\$]+/, 'type.identifier'],\n            [/\\}/, { token: 'identifier', next: '@pop' }]\n        ],\n        nestedCall: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\]/, { token: '@brackets', next: '@pop' }],\n            { include: 'root' }\n        ],\n        specialFunc: [\n            [/\"/, { token: 'string', next: '@dstring' }],\n            [/'/, { token: 'string', next: '@sstring' }],\n            [/(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+/, { token: 'type', next: '@pop' }],\n        ]\n    }\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/monaco-markdown/node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wDAAwD;AACjE,SAAS,SAAS,YAAY,6BAA6B;AAC3D,SAAS;AACT;AACA,qCAAqC,GAAG,iBAAiB,IAAI,cAAc,EAAE,cAAc,EAAE;AAC7F;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8CAA8C,8CAA8C;AAC5F;AACA;AACA;AACA,qBAAqB,EAAE;AACvB,kCAAkC,GAAG;AACrC;AACA,aAAa,yBAAyB;AACtC;AACA,iBAAiB;AACjB;AACA,4BAA4B,IAAI,+CAA+C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,mBAAmB,4DAA4D;AAC/E,mBAAmB,4DAA4D;AAC/E;AACA;AACA,oBAAoB,0CAA0C;AAC9D,4BAA4B,IAAI,+CAA+C;AAC/E;AACA;AACA;AACA,mBAAmB,yDAAyD;AAC5E;AACA;AACA,oBAAoB,0CAA0C;AAC9D,4BAA4B,IAAI,+CAA+C;AAC/E;AACA;AACA;AACA,mBAAmB,yDAAyD;AAC5E;AACA;AACA;AACA,wBAAwB,4CAA4C;AACpE;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA,kBAAkB,EAAE;AACpB,gBAAgB,IAAI,oCAAoC;AACxD;AACA;AACA,oBAAoB,0CAA0C;AAC9D,oBAAoB,mCAAmC;AACvD,aAAa;AACb;AACA;AACA,mBAAmB,oCAAoC;AACvD,mBAAmB,oCAAoC;AACvD,6CAA6C,8BAA8B;AAC3E;AACA;AACA","file":"x","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    tokenPostfix: '.tcl',\n    specialFunctions: [\n        'set', 'unset', 'rename', 'variable', 'proc', 'coroutine',\n        'foreach',\n        'incr', 'append',\n        'lappend', 'linsert', 'lreplace'\n    ],\n    mainFunctions: [\n        'if', 'then', 'elseif', 'else', 'case', 'switch', 'while', 'for',\n        'break', 'continue', 'return',\n        'package', 'namespace',\n        'catch', 'exit',\n        'eval', 'expr', 'uplevel', 'upvar'\n    ],\n    builtinFunctions: [\n        'file', 'info', 'concat', 'join', 'lindex',\n        'list', 'llength', 'lrange', 'lsearch', 'lsort', 'split',\n        'array', 'parray', 'binary', 'format', 'regexp', 'regsub', 'scan', 'string',\n        'subst', 'dict', 'cd', 'clock', 'exec', 'glob', 'pid', 'pwd', 'close', 'eof', 'fblocked',\n        'fconfigure', 'fcopy', 'fileevent', 'flush', 'gets', 'open', 'puts', 'read', 'seek',\n        'socket', 'tell', 'interp', 'after', 'auto_execok',\n        'auto_load', 'auto_mkindex', 'auto_reset', 'bgerror', 'error',\n        'global', 'history', 'load', 'source', 'time', 'trace',\n        'unknown', 'unset', 'update', 'vwait', 'winfo', 'wm', 'bind', 'event',\n        'pack', 'place', 'grid', 'font', 'bell', 'clipboard', 'destroy', 'focus', 'grab', 'lower',\n        'option', 'raise', 'selection', 'send', 'tk', 'tkwait', 'tk_bisque', 'tk_focusNext',\n        'tk_focusPrev', 'tk_focusFollowsMouse', 'tk_popup', 'tk_setPalette'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, { cases: {\n                        '@specialFunctions': { token: 'keyword.flow', next: '@specialFunc' },\n                        '@mainFunctions': 'keyword',\n                        '@builtinFunctions': 'variable',\n                        '@default': 'operator.scss'\n                    } }],\n            [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, 'metatag'],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'operator'],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/\\.(?!\\d|\\.)[\\w\\-]*/, 'operator.sql'],\n            // numbers\n            [/\\d+(\\.\\d+)?/, 'number'],\n            [/\\d+/, 'number'],\n            // delimiter\n            [/;/, 'delimiter'],\n            // strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@dstring' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@sstring' }]\n        ],\n        dstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\n        ],\n        sstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#.*\\\\$/, { token: 'comment', next: '@newlineComment' }],\n            [/#.*(?!\\\\)$/, 'comment']\n        ],\n        newlineComment: [\n            [/.*\\\\$/, 'comment'],\n            [/.*(?!\\\\)$/, { token: 'comment', next: '@pop' }]\n        ],\n        nestedVariable: [\n            [/[^\\{\\}\\$]+/, 'type.identifier'],\n            [/\\}/, { token: 'identifier', next: '@pop' }]\n        ],\n        nestedCall: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\]/, { token: '@brackets', next: '@pop' }],\n            { include: 'root' }\n        ],\n        specialFunc: [\n            [/\"/, { token: 'string', next: '@dstring' }],\n            [/'/, { token: 'string', next: '@sstring' }],\n            [/(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+/, { token: 'type', next: '@pop' }],\n        ]\n    }\n};\n"]}}