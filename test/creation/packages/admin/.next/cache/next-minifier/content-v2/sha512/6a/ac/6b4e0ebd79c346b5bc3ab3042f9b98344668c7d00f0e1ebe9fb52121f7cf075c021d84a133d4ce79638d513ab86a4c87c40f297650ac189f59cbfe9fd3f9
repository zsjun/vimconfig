{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[69],{RHWh:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"conf\",(function(){return r})),n.d(t,\"language\",(function(){return s}));var r={comments:{lineComment:\";;\"},brackets:[[\"[\",\"]\"],[\"(\",\")\"],[\"{\",\"}\"]],autoClosingPairs:[{open:\"[\",close:\"]\"},{open:'\"',close:'\"'},{open:\"(\",close:\")\"},{open:\"{\",close:\"}\"}],surroundingPairs:[{open:\"[\",close:\"]\"},{open:'\"',close:'\"'},{open:\"(\",close:\")\"},{open:\"{\",close:\"}\"}]},s={defaultToken:\"\",ignoreCase:!0,tokenPostfix:\".clj\",brackets:[{open:\"[\",close:\"]\",token:\"delimiter.square\"},{open:\"(\",close:\")\",token:\"delimiter.parenthesis\"},{open:\"{\",close:\"}\",token:\"delimiter.curly\"}],constants:[\"true\",\"false\",\"nil\"],numbers:/^(?:[+\\-]?\\d+(?:(?:N|(?:[eE][+\\-]?\\d+))|(?:\\.?\\d*(?:M|(?:[eE][+\\-]?\\d+))?)|\\/\\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$))/,characters:/^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,escapes:/^\\\\(?:[\"'\\\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,qualifiedSymbols:/^(?:(?:[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*(?:\\.[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*\\/)?(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,specialForms:[\".\",\"catch\",\"def\",\"do\",\"if\",\"monitor-enter\",\"monitor-exit\",\"new\",\"quote\",\"recur\",\"set!\",\"throw\",\"try\",\"var\"],coreSymbols:[\"*\",\"*'\",\"*1\",\"*2\",\"*3\",\"*agent*\",\"*allow-unresolved-vars*\",\"*assert*\",\"*clojure-version*\",\"*command-line-args*\",\"*compile-files*\",\"*compile-path*\",\"*compiler-options*\",\"*data-readers*\",\"*default-data-reader-fn*\",\"*e\",\"*err*\",\"*file*\",\"*flush-on-newline*\",\"*fn-loader*\",\"*in*\",\"*math-context*\",\"*ns*\",\"*out*\",\"*print-dup*\",\"*print-length*\",\"*print-level*\",\"*print-meta*\",\"*print-namespace-maps*\",\"*print-readably*\",\"*read-eval*\",\"*reader-resolver*\",\"*source-path*\",\"*suppress-read*\",\"*unchecked-math*\",\"*use-context-classloader*\",\"*verbose-defrecords*\",\"*warn-on-reflection*\",\"+\",\"+'\",\"-\",\"-'\",\"->\",\"->>\",\"->ArrayChunk\",\"->Eduction\",\"->Vec\",\"->VecNode\",\"->VecSeq\",\"-cache-protocol-fn\",\"-reset-methods\",\"..\",\"/\",\"<\",\"<=\",\"=\",\"==\",\">\",\">=\",\"EMPTY-NODE\",\"Inst\",\"StackTraceElement->vec\",\"Throwable->map\",\"accessor\",\"aclone\",\"add-classpath\",\"add-watch\",\"agent\",\"agent-error\",\"agent-errors\",\"aget\",\"alength\",\"alias\",\"all-ns\",\"alter\",\"alter-meta!\",\"alter-var-root\",\"amap\",\"ancestors\",\"and\",\"any?\",\"apply\",\"areduce\",\"array-map\",\"as->\",\"aset\",\"aset-boolean\",\"aset-byte\",\"aset-char\",\"aset-double\",\"aset-float\",\"aset-int\",\"aset-long\",\"aset-short\",\"assert\",\"assoc\",\"assoc!\",\"assoc-in\",\"associative?\",\"atom\",\"await\",\"await-for\",\"await1\",\"bases\",\"bean\",\"bigdec\",\"bigint\",\"biginteger\",\"binding\",\"bit-and\",\"bit-and-not\",\"bit-clear\",\"bit-flip\",\"bit-not\",\"bit-or\",\"bit-set\",\"bit-shift-left\",\"bit-shift-right\",\"bit-test\",\"bit-xor\",\"boolean\",\"boolean-array\",\"boolean?\",\"booleans\",\"bound-fn\",\"bound-fn*\",\"bound?\",\"bounded-count\",\"butlast\",\"byte\",\"byte-array\",\"bytes\",\"bytes?\",\"case\",\"cast\",\"cat\",\"char\",\"char-array\",\"char-escape-string\",\"char-name-string\",\"char?\",\"chars\",\"chunk\",\"chunk-append\",\"chunk-buffer\",\"chunk-cons\",\"chunk-first\",\"chunk-next\",\"chunk-rest\",\"chunked-seq?\",\"class\",\"class?\",\"clear-agent-errors\",\"clojure-version\",\"coll?\",\"comment\",\"commute\",\"comp\",\"comparator\",\"compare\",\"compare-and-set!\",\"compile\",\"complement\",\"completing\",\"concat\",\"cond\",\"cond->\",\"cond->>\",\"condp\",\"conj\",\"conj!\",\"cons\",\"constantly\",\"construct-proxy\",\"contains?\",\"count\",\"counted?\",\"create-ns\",\"create-struct\",\"cycle\",\"dec\",\"dec'\",\"decimal?\",\"declare\",\"dedupe\",\"default-data-readers\",\"definline\",\"definterface\",\"defmacro\",\"defmethod\",\"defmulti\",\"defn\",\"defn-\",\"defonce\",\"defprotocol\",\"defrecord\",\"defstruct\",\"deftype\",\"delay\",\"delay?\",\"deliver\",\"denominator\",\"deref\",\"derive\",\"descendants\",\"destructure\",\"disj\",\"disj!\",\"dissoc\",\"dissoc!\",\"distinct\",\"distinct?\",\"doall\",\"dorun\",\"doseq\",\"dosync\",\"dotimes\",\"doto\",\"double\",\"double-array\",\"double?\",\"doubles\",\"drop\",\"drop-last\",\"drop-while\",\"eduction\",\"empty\",\"empty?\",\"ensure\",\"ensure-reduced\",\"enumeration-seq\",\"error-handler\",\"error-mode\",\"eval\",\"even?\",\"every-pred\",\"every?\",\"ex-data\",\"ex-info\",\"extend\",\"extend-protocol\",\"extend-type\",\"extenders\",\"extends?\",\"false?\",\"ffirst\",\"file-seq\",\"filter\",\"filterv\",\"find\",\"find-keyword\",\"find-ns\",\"find-protocol-impl\",\"find-protocol-method\",\"find-var\",\"first\",\"flatten\",\"float\",\"float-array\",\"float?\",\"floats\",\"flush\",\"fn\",\"fn?\",\"fnext\",\"fnil\",\"for\",\"force\",\"format\",\"frequencies\",\"future\",\"future-call\",\"future-cancel\",\"future-cancelled?\",\"future-done?\",\"future?\",\"gen-class\",\"gen-interface\",\"gensym\",\"get\",\"get-in\",\"get-method\",\"get-proxy-class\",\"get-thread-bindings\",\"get-validator\",\"group-by\",\"halt-when\",\"hash\",\"hash-combine\",\"hash-map\",\"hash-ordered-coll\",\"hash-set\",\"hash-unordered-coll\",\"ident?\",\"identical?\",\"identity\",\"if-let\",\"if-not\",\"if-some\",\"ifn?\",\"import\",\"in-ns\",\"inc\",\"inc'\",\"indexed?\",\"init-proxy\",\"inst-ms\",\"inst-ms*\",\"inst?\",\"instance?\",\"int\",\"int-array\",\"int?\",\"integer?\",\"interleave\",\"intern\",\"interpose\",\"into\",\"into-array\",\"ints\",\"io!\",\"isa?\",\"iterate\",\"iterator-seq\",\"juxt\",\"keep\",\"keep-indexed\",\"key\",\"keys\",\"keyword\",\"keyword?\",\"last\",\"lazy-cat\",\"lazy-seq\",\"let\",\"letfn\",\"line-seq\",\"list\",\"list*\",\"list?\",\"load\",\"load-file\",\"load-reader\",\"load-string\",\"loaded-libs\",\"locking\",\"long\",\"long-array\",\"longs\",\"loop\",\"macroexpand\",\"macroexpand-1\",\"make-array\",\"make-hierarchy\",\"map\",\"map-entry?\",\"map-indexed\",\"map?\",\"mapcat\",\"mapv\",\"max\",\"max-key\",\"memfn\",\"memoize\",\"merge\",\"merge-with\",\"meta\",\"method-sig\",\"methods\",\"min\",\"min-key\",\"mix-collection-hash\",\"mod\",\"munge\",\"name\",\"namespace\",\"namespace-munge\",\"nat-int?\",\"neg-int?\",\"neg?\",\"newline\",\"next\",\"nfirst\",\"nil?\",\"nnext\",\"not\",\"not-any?\",\"not-empty\",\"not-every?\",\"not=\",\"ns\",\"ns-aliases\",\"ns-imports\",\"ns-interns\",\"ns-map\",\"ns-name\",\"ns-publics\",\"ns-refers\",\"ns-resolve\",\"ns-unalias\",\"ns-unmap\",\"nth\",\"nthnext\",\"nthrest\",\"num\",\"number?\",\"numerator\",\"object-array\",\"odd?\",\"or\",\"parents\",\"partial\",\"partition\",\"partition-all\",\"partition-by\",\"pcalls\",\"peek\",\"persistent!\",\"pmap\",\"pop\",\"pop!\",\"pop-thread-bindings\",\"pos-int?\",\"pos?\",\"pr\",\"pr-str\",\"prefer-method\",\"prefers\",\"primitives-classnames\",\"print\",\"print-ctor\",\"print-dup\",\"print-method\",\"print-simple\",\"print-str\",\"printf\",\"println\",\"println-str\",\"prn\",\"prn-str\",\"promise\",\"proxy\",\"proxy-call-with-super\",\"proxy-mappings\",\"proxy-name\",\"proxy-super\",\"push-thread-bindings\",\"pvalues\",\"qualified-ident?\",\"qualified-keyword?\",\"qualified-symbol?\",\"quot\",\"rand\",\"rand-int\",\"rand-nth\",\"random-sample\",\"range\",\"ratio?\",\"rational?\",\"rationalize\",\"re-find\",\"re-groups\",\"re-matcher\",\"re-matches\",\"re-pattern\",\"re-seq\",\"read\",\"read-line\",\"read-string\",\"reader-conditional\",\"reader-conditional?\",\"realized?\",\"record?\",\"reduce\",\"reduce-kv\",\"reduced\",\"reduced?\",\"reductions\",\"ref\",\"ref-history-count\",\"ref-max-history\",\"ref-min-history\",\"ref-set\",\"refer\",\"refer-clojure\",\"reify\",\"release-pending-sends\",\"rem\",\"remove\",\"remove-all-methods\",\"remove-method\",\"remove-ns\",\"remove-watch\",\"repeat\",\"repeatedly\",\"replace\",\"replicate\",\"require\",\"reset!\",\"reset-meta!\",\"reset-vals!\",\"resolve\",\"rest\",\"restart-agent\",\"resultset-seq\",\"reverse\",\"reversible?\",\"rseq\",\"rsubseq\",\"run!\",\"satisfies?\",\"second\",\"select-keys\",\"send\",\"send-off\",\"send-via\",\"seq\",\"seq?\",\"seqable?\",\"seque\",\"sequence\",\"sequential?\",\"set\",\"set-agent-send-executor!\",\"set-agent-send-off-executor!\",\"set-error-handler!\",\"set-error-mode!\",\"set-validator!\",\"set?\",\"short\",\"short-array\",\"shorts\",\"shuffle\",\"shutdown-agents\",\"simple-ident?\",\"simple-keyword?\",\"simple-symbol?\",\"slurp\",\"some\",\"some->\",\"some->>\",\"some-fn\",\"some?\",\"sort\",\"sort-by\",\"sorted-map\",\"sorted-map-by\",\"sorted-set\",\"sorted-set-by\",\"sorted?\",\"special-symbol?\",\"spit\",\"split-at\",\"split-with\",\"str\",\"string?\",\"struct\",\"struct-map\",\"subs\",\"subseq\",\"subvec\",\"supers\",\"swap!\",\"swap-vals!\",\"symbol\",\"symbol?\",\"sync\",\"tagged-literal\",\"tagged-literal?\",\"take\",\"take-last\",\"take-nth\",\"take-while\",\"test\",\"the-ns\",\"thread-bound?\",\"time\",\"to-array\",\"to-array-2d\",\"trampoline\",\"transduce\",\"transient\",\"tree-seq\",\"true?\",\"type\",\"unchecked-add\",\"unchecked-add-int\",\"unchecked-byte\",\"unchecked-char\",\"unchecked-dec\",\"unchecked-dec-int\",\"unchecked-divide-int\",\"unchecked-double\",\"unchecked-float\",\"unchecked-inc\",\"unchecked-inc-int\",\"unchecked-int\",\"unchecked-long\",\"unchecked-multiply\",\"unchecked-multiply-int\",\"unchecked-negate\",\"unchecked-negate-int\",\"unchecked-remainder-int\",\"unchecked-short\",\"unchecked-subtract\",\"unchecked-subtract-int\",\"underive\",\"unquote\",\"unquote-splicing\",\"unreduced\",\"unsigned-bit-shift-right\",\"update\",\"update-in\",\"update-proxy\",\"uri?\",\"use\",\"uuid?\",\"val\",\"vals\",\"var-get\",\"var-set\",\"var?\",\"vary-meta\",\"vec\",\"vector\",\"vector-of\",\"vector?\",\"volatile!\",\"volatile?\",\"vreset!\",\"vswap!\",\"when\",\"when-first\",\"when-let\",\"when-not\",\"when-some\",\"while\",\"with-bindings\",\"with-bindings*\",\"with-in-str\",\"with-loading-context\",\"with-local-vars\",\"with-meta\",\"with-open\",\"with-out-str\",\"with-precision\",\"with-redefs\",\"with-redefs-fn\",\"xml-seq\",\"zero?\",\"zipmap\"],tokenizer:{root:[{include:\"@whitespace\"},[/@numbers/,\"number\"],[/@characters/,\"string\"],{include:\"@string\"},[/[()\\[\\]{}]/,\"@brackets\"],[/\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g/,\"regexp\"],[/[#'@^`~]/,\"meta\"],[/@qualifiedSymbols/,{cases:{\"^:.+$\":\"constant\",\"@specialForms\":\"keyword\",\"@coreSymbols\":\"keyword\",\"@constants\":\"constant\",\"@default\":\"identifier\"}}]],whitespace:[[/\\s+/,\"white\"],[/;.*$/,\"comment\"],[/\\(comment\\b/,\"comment\",\"@comment\"]],comment:[[/\\(/,\"comment\",\"@push\"],[/\\)/,\"comment\",\"@pop\"],[/[^()]/,\"comment\"]],string:[[/\"/,\"string\",\"@multiLineString\"]],multiLineString:[[/\"/,\"string\",\"@popall\"],[/@escapes/,\"string.escape\"],[/./,\"string\"]]}}}}]);","map":{"version":3,"sources":["static/chunks/69.0caef11ca0e57c67a881.js"],"names":["window","push","RHWh","module","__webpack_exports__","__webpack_require__","r","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","ignoreCase","tokenPostfix","token","constants","numbers","characters","escapes","qualifiedSymbols","specialForms","coreSymbols","tokenizer","root","include","cases","^:.+$","@specialForms","@coreSymbols","@constants","@default","whitespace","comment","string","multiLineString"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,QAAQ,WAAa,OAAOI,KACvEH,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAOK,KAM1G,IAAID,EAAO,CACPE,SAAU,CACNC,YAAa,MAEjBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGxBN,EAAW,CACXQ,aAAc,GACdC,YAAY,EACZC,aAAc,OACdP,SAAU,CACN,CAAEE,KAAM,IAAKC,MAAO,IAAKK,MAAO,oBAChC,CAAEN,KAAM,IAAKC,MAAO,IAAKK,MAAO,yBAChC,CAAEN,KAAM,IAAKC,MAAO,IAAKK,MAAO,oBAEpCC,UAAW,CAAC,OAAQ,QAAS,OAE7BC,QAAS,kJACTC,WAAY,iIACZC,QAAS,uEAITC,iBAAkB,kNAClBC,aAAc,CACV,IACA,QACA,MACA,KACA,KACA,gBACA,eACA,MACA,QACA,QACA,OACA,QACA,MACA,OAEJC,YAAa,CACT,IACA,KACA,KACA,KACA,KACA,UACA,0BACA,WACA,oBACA,sBACA,kBACA,iBACA,qBACA,iBACA,2BACA,KACA,QACA,SACA,qBACA,cACA,OACA,iBACA,OACA,QACA,cACA,iBACA,gBACA,eACA,yBACA,mBACA,cACA,oBACA,gBACA,kBACA,mBACA,4BACA,uBACA,uBACA,IACA,KACA,IACA,KACA,KACA,MACA,eACA,aACA,QACA,YACA,WACA,qBACA,iBACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,aACA,OACA,yBACA,iBACA,WACA,SACA,gBACA,YACA,QACA,cACA,eACA,OACA,UACA,QACA,SACA,QACA,cACA,iBACA,OACA,YACA,MACA,OACA,QACA,UACA,YACA,OACA,OACA,eACA,YACA,YACA,cACA,aACA,WACA,YACA,aACA,SACA,QACA,SACA,WACA,eACA,OACA,QACA,YACA,SACA,QACA,OACA,SACA,SACA,aACA,UACA,UACA,cACA,YACA,WACA,UACA,SACA,UACA,iBACA,kBACA,WACA,UACA,UACA,gBACA,WACA,WACA,WACA,YACA,SACA,gBACA,UACA,OACA,aACA,QACA,SACA,OACA,OACA,MACA,OACA,aACA,qBACA,mBACA,QACA,QACA,QACA,eACA,eACA,aACA,cACA,aACA,aACA,eACA,QACA,SACA,qBACA,kBACA,QACA,UACA,UACA,OACA,aACA,UACA,mBACA,UACA,aACA,aACA,SACA,OACA,SACA,UACA,QACA,OACA,QACA,OACA,aACA,kBACA,YACA,QACA,WACA,YACA,gBACA,QACA,MACA,OACA,WACA,UACA,SACA,uBACA,YACA,eACA,WACA,YACA,WACA,OACA,QACA,UACA,cACA,YACA,YACA,UACA,QACA,SACA,UACA,cACA,QACA,SACA,cACA,cACA,OACA,QACA,SACA,UACA,WACA,YACA,QACA,QACA,QACA,SACA,UACA,OACA,SACA,eACA,UACA,UACA,OACA,YACA,aACA,WACA,QACA,SACA,SACA,iBACA,kBACA,gBACA,aACA,OACA,QACA,aACA,SACA,UACA,UACA,SACA,kBACA,cACA,YACA,WACA,SACA,SACA,WACA,SACA,UACA,OACA,eACA,UACA,qBACA,uBACA,WACA,QACA,UACA,QACA,cACA,SACA,SACA,QACA,KACA,MACA,QACA,OACA,MACA,QACA,SACA,cACA,SACA,cACA,gBACA,oBACA,eACA,UACA,YACA,gBACA,SACA,MACA,SACA,aACA,kBACA,sBACA,gBACA,WACA,YACA,OACA,eACA,WACA,oBACA,WACA,sBACA,SACA,aACA,WACA,SACA,SACA,UACA,OACA,SACA,QACA,MACA,OACA,WACA,aACA,UACA,WACA,QACA,YACA,MACA,YACA,OACA,WACA,aACA,SACA,YACA,OACA,aACA,OACA,MACA,OACA,UACA,eACA,OACA,OACA,eACA,MACA,OACA,UACA,WACA,OACA,WACA,WACA,MACA,QACA,WACA,OACA,QACA,QACA,OACA,YACA,cACA,cACA,cACA,UACA,OACA,aACA,QACA,OACA,cACA,gBACA,aACA,iBACA,MACA,aACA,cACA,OACA,SACA,OACA,MACA,UACA,QACA,UACA,QACA,aACA,OACA,aACA,UACA,MACA,UACA,sBACA,MACA,QACA,OACA,YACA,kBACA,WACA,WACA,OACA,UACA,OACA,SACA,OACA,QACA,MACA,WACA,YACA,aACA,OACA,KACA,aACA,aACA,aACA,SACA,UACA,aACA,YACA,aACA,aACA,WACA,MACA,UACA,UACA,MACA,UACA,YACA,eACA,OACA,KACA,UACA,UACA,YACA,gBACA,eACA,SACA,OACA,cACA,OACA,MACA,OACA,sBACA,WACA,OACA,KACA,SACA,gBACA,UACA,wBACA,QACA,aACA,YACA,eACA,eACA,YACA,SACA,UACA,cACA,MACA,UACA,UACA,QACA,wBACA,iBACA,aACA,cACA,uBACA,UACA,mBACA,qBACA,oBACA,OACA,OACA,WACA,WACA,gBACA,QACA,SACA,YACA,cACA,UACA,YACA,aACA,aACA,aACA,SACA,OACA,YACA,cACA,qBACA,sBACA,YACA,UACA,SACA,YACA,UACA,WACA,aACA,MACA,oBACA,kBACA,kBACA,UACA,QACA,gBACA,QACA,wBACA,MACA,SACA,qBACA,gBACA,YACA,eACA,SACA,aACA,UACA,YACA,UACA,SACA,cACA,cACA,UACA,OACA,gBACA,gBACA,UACA,cACA,OACA,UACA,OACA,aACA,SACA,cACA,OACA,WACA,WACA,MACA,OACA,WACA,QACA,WACA,cACA,MACA,2BACA,+BACA,qBACA,kBACA,iBACA,OACA,QACA,cACA,SACA,UACA,kBACA,gBACA,kBACA,iBACA,QACA,OACA,SACA,UACA,UACA,QACA,OACA,UACA,aACA,gBACA,aACA,gBACA,UACA,kBACA,OACA,WACA,aACA,MACA,UACA,SACA,aACA,OACA,SACA,SACA,SACA,QACA,aACA,SACA,UACA,OACA,iBACA,kBACA,OACA,YACA,WACA,aACA,OACA,SACA,gBACA,OACA,WACA,cACA,aACA,YACA,YACA,WACA,QACA,OACA,gBACA,oBACA,iBACA,iBACA,gBACA,oBACA,uBACA,mBACA,kBACA,gBACA,oBACA,gBACA,iBACA,qBACA,yBACA,mBACA,uBACA,0BACA,kBACA,qBACA,yBACA,WACA,UACA,mBACA,YACA,2BACA,SACA,YACA,eACA,OACA,MACA,QACA,MACA,OACA,UACA,UACA,OACA,YACA,MACA,SACA,YACA,UACA,YACA,YACA,UACA,SACA,OACA,aACA,WACA,WACA,YACA,QACA,gBACA,iBACA,cACA,uBACA,kBACA,YACA,YACA,eACA,iBACA,cACA,iBACA,UACA,QACA,UAEJC,UAAW,CACPC,KAAM,CAEF,CAAEC,QAAS,eAEX,CAAC,WAAY,UAEb,CAAC,cAAe,UAEhB,CAAEA,QAAS,WAEX,CAAC,aAAc,aAEf,CAAC,+BAAgC,UAEjC,CAAC,WAAY,QAEb,CAAC,oBAAqB,CACdC,MAAO,CACHC,QAAS,WACTC,gBAAiB,UACjBC,eAAgB,UAChBC,aAAc,WACdC,WAAY,iBAK5BC,WAAY,CACR,CAAC,MAAO,SACR,CAAC,OAAQ,WACT,CAAC,cAAe,UAAW,aAE/BC,QAAS,CACL,CAAC,KAAM,UAAW,SAClB,CAAC,KAAM,UAAW,QAClB,CAAC,QAAS,YAEdC,OAAQ,CACJ,CAAC,IAAK,SAAU,qBAEpBC,gBAAiB,CACb,CAAC,IAAK,SAAU,WAChB,CAAC,WAAY,iBACb,CAAC,IAAK"},"name":"static/chunks/69.0caef11ca0e57c67a881.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[69],{\n\n/***/ \"RHWh\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    comments: {\n        lineComment: ';;',\n    },\n    brackets: [\n        ['[', ']'],\n        ['(', ')'],\n        ['{', '}']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '\"', close: '\"' },\n        { open: '(', close: ')' },\n        { open: '{', close: '}' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '\"', close: '\"' },\n        { open: '(', close: ')' },\n        { open: '{', close: '}' },\n    ],\n};\nvar language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.clj',\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n    ],\n    constants: ['true', 'false', 'nil'],\n    // delimiters: /[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$/,\n    numbers: /^(?:[+\\-]?\\d+(?:(?:N|(?:[eE][+\\-]?\\d+))|(?:\\.?\\d*(?:M|(?:[eE][+\\-]?\\d+))?)|\\/\\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$))/,\n    characters: /^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n    escapes: /^\\\\(?:[\"'\\\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // simple-namespace := /^[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*/\n    // simple-symbol    := /^(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)/\n    // qualified-symbol := (<simple-namespace>(<.><simple-namespace>)*</>)?<simple-symbol>\n    qualifiedSymbols: /^(?:(?:[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*(?:\\.[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*\\/)?(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n    specialForms: [\n        '.',\n        'catch',\n        'def',\n        'do',\n        'if',\n        'monitor-enter',\n        'monitor-exit',\n        'new',\n        'quote',\n        'recur',\n        'set!',\n        'throw',\n        'try',\n        'var',\n    ],\n    coreSymbols: [\n        '*',\n        '*\\'',\n        '*1',\n        '*2',\n        '*3',\n        '*agent*',\n        '*allow-unresolved-vars*',\n        '*assert*',\n        '*clojure-version*',\n        '*command-line-args*',\n        '*compile-files*',\n        '*compile-path*',\n        '*compiler-options*',\n        '*data-readers*',\n        '*default-data-reader-fn*',\n        '*e',\n        '*err*',\n        '*file*',\n        '*flush-on-newline*',\n        '*fn-loader*',\n        '*in*',\n        '*math-context*',\n        '*ns*',\n        '*out*',\n        '*print-dup*',\n        '*print-length*',\n        '*print-level*',\n        '*print-meta*',\n        '*print-namespace-maps*',\n        '*print-readably*',\n        '*read-eval*',\n        '*reader-resolver*',\n        '*source-path*',\n        '*suppress-read*',\n        '*unchecked-math*',\n        '*use-context-classloader*',\n        '*verbose-defrecords*',\n        '*warn-on-reflection*',\n        '+',\n        '+\\'',\n        '-',\n        '-\\'',\n        '->',\n        '->>',\n        '->ArrayChunk',\n        '->Eduction',\n        '->Vec',\n        '->VecNode',\n        '->VecSeq',\n        '-cache-protocol-fn',\n        '-reset-methods',\n        '..',\n        '/',\n        '<',\n        '<=',\n        '=',\n        '==',\n        '>',\n        '>=',\n        'EMPTY-NODE',\n        'Inst',\n        'StackTraceElement->vec',\n        'Throwable->map',\n        'accessor',\n        'aclone',\n        'add-classpath',\n        'add-watch',\n        'agent',\n        'agent-error',\n        'agent-errors',\n        'aget',\n        'alength',\n        'alias',\n        'all-ns',\n        'alter',\n        'alter-meta!',\n        'alter-var-root',\n        'amap',\n        'ancestors',\n        'and',\n        'any?',\n        'apply',\n        'areduce',\n        'array-map',\n        'as->',\n        'aset',\n        'aset-boolean',\n        'aset-byte',\n        'aset-char',\n        'aset-double',\n        'aset-float',\n        'aset-int',\n        'aset-long',\n        'aset-short',\n        'assert',\n        'assoc',\n        'assoc!',\n        'assoc-in',\n        'associative?',\n        'atom',\n        'await',\n        'await-for',\n        'await1',\n        'bases',\n        'bean',\n        'bigdec',\n        'bigint',\n        'biginteger',\n        'binding',\n        'bit-and',\n        'bit-and-not',\n        'bit-clear',\n        'bit-flip',\n        'bit-not',\n        'bit-or',\n        'bit-set',\n        'bit-shift-left',\n        'bit-shift-right',\n        'bit-test',\n        'bit-xor',\n        'boolean',\n        'boolean-array',\n        'boolean?',\n        'booleans',\n        'bound-fn',\n        'bound-fn*',\n        'bound?',\n        'bounded-count',\n        'butlast',\n        'byte',\n        'byte-array',\n        'bytes',\n        'bytes?',\n        'case',\n        'cast',\n        'cat',\n        'char',\n        'char-array',\n        'char-escape-string',\n        'char-name-string',\n        'char?',\n        'chars',\n        'chunk',\n        'chunk-append',\n        'chunk-buffer',\n        'chunk-cons',\n        'chunk-first',\n        'chunk-next',\n        'chunk-rest',\n        'chunked-seq?',\n        'class',\n        'class?',\n        'clear-agent-errors',\n        'clojure-version',\n        'coll?',\n        'comment',\n        'commute',\n        'comp',\n        'comparator',\n        'compare',\n        'compare-and-set!',\n        'compile',\n        'complement',\n        'completing',\n        'concat',\n        'cond',\n        'cond->',\n        'cond->>',\n        'condp',\n        'conj',\n        'conj!',\n        'cons',\n        'constantly',\n        'construct-proxy',\n        'contains?',\n        'count',\n        'counted?',\n        'create-ns',\n        'create-struct',\n        'cycle',\n        'dec',\n        'dec\\'',\n        'decimal?',\n        'declare',\n        'dedupe',\n        'default-data-readers',\n        'definline',\n        'definterface',\n        'defmacro',\n        'defmethod',\n        'defmulti',\n        'defn',\n        'defn-',\n        'defonce',\n        'defprotocol',\n        'defrecord',\n        'defstruct',\n        'deftype',\n        'delay',\n        'delay?',\n        'deliver',\n        'denominator',\n        'deref',\n        'derive',\n        'descendants',\n        'destructure',\n        'disj',\n        'disj!',\n        'dissoc',\n        'dissoc!',\n        'distinct',\n        'distinct?',\n        'doall',\n        'dorun',\n        'doseq',\n        'dosync',\n        'dotimes',\n        'doto',\n        'double',\n        'double-array',\n        'double?',\n        'doubles',\n        'drop',\n        'drop-last',\n        'drop-while',\n        'eduction',\n        'empty',\n        'empty?',\n        'ensure',\n        'ensure-reduced',\n        'enumeration-seq',\n        'error-handler',\n        'error-mode',\n        'eval',\n        'even?',\n        'every-pred',\n        'every?',\n        'ex-data',\n        'ex-info',\n        'extend',\n        'extend-protocol',\n        'extend-type',\n        'extenders',\n        'extends?',\n        'false?',\n        'ffirst',\n        'file-seq',\n        'filter',\n        'filterv',\n        'find',\n        'find-keyword',\n        'find-ns',\n        'find-protocol-impl',\n        'find-protocol-method',\n        'find-var',\n        'first',\n        'flatten',\n        'float',\n        'float-array',\n        'float?',\n        'floats',\n        'flush',\n        'fn',\n        'fn?',\n        'fnext',\n        'fnil',\n        'for',\n        'force',\n        'format',\n        'frequencies',\n        'future',\n        'future-call',\n        'future-cancel',\n        'future-cancelled?',\n        'future-done?',\n        'future?',\n        'gen-class',\n        'gen-interface',\n        'gensym',\n        'get',\n        'get-in',\n        'get-method',\n        'get-proxy-class',\n        'get-thread-bindings',\n        'get-validator',\n        'group-by',\n        'halt-when',\n        'hash',\n        'hash-combine',\n        'hash-map',\n        'hash-ordered-coll',\n        'hash-set',\n        'hash-unordered-coll',\n        'ident?',\n        'identical?',\n        'identity',\n        'if-let',\n        'if-not',\n        'if-some',\n        'ifn?',\n        'import',\n        'in-ns',\n        'inc',\n        'inc\\'',\n        'indexed?',\n        'init-proxy',\n        'inst-ms',\n        'inst-ms*',\n        'inst?',\n        'instance?',\n        'int',\n        'int-array',\n        'int?',\n        'integer?',\n        'interleave',\n        'intern',\n        'interpose',\n        'into',\n        'into-array',\n        'ints',\n        'io!',\n        'isa?',\n        'iterate',\n        'iterator-seq',\n        'juxt',\n        'keep',\n        'keep-indexed',\n        'key',\n        'keys',\n        'keyword',\n        'keyword?',\n        'last',\n        'lazy-cat',\n        'lazy-seq',\n        'let',\n        'letfn',\n        'line-seq',\n        'list',\n        'list*',\n        'list?',\n        'load',\n        'load-file',\n        'load-reader',\n        'load-string',\n        'loaded-libs',\n        'locking',\n        'long',\n        'long-array',\n        'longs',\n        'loop',\n        'macroexpand',\n        'macroexpand-1',\n        'make-array',\n        'make-hierarchy',\n        'map',\n        'map-entry?',\n        'map-indexed',\n        'map?',\n        'mapcat',\n        'mapv',\n        'max',\n        'max-key',\n        'memfn',\n        'memoize',\n        'merge',\n        'merge-with',\n        'meta',\n        'method-sig',\n        'methods',\n        'min',\n        'min-key',\n        'mix-collection-hash',\n        'mod',\n        'munge',\n        'name',\n        'namespace',\n        'namespace-munge',\n        'nat-int?',\n        'neg-int?',\n        'neg?',\n        'newline',\n        'next',\n        'nfirst',\n        'nil?',\n        'nnext',\n        'not',\n        'not-any?',\n        'not-empty',\n        'not-every?',\n        'not=',\n        'ns',\n        'ns-aliases',\n        'ns-imports',\n        'ns-interns',\n        'ns-map',\n        'ns-name',\n        'ns-publics',\n        'ns-refers',\n        'ns-resolve',\n        'ns-unalias',\n        'ns-unmap',\n        'nth',\n        'nthnext',\n        'nthrest',\n        'num',\n        'number?',\n        'numerator',\n        'object-array',\n        'odd?',\n        'or',\n        'parents',\n        'partial',\n        'partition',\n        'partition-all',\n        'partition-by',\n        'pcalls',\n        'peek',\n        'persistent!',\n        'pmap',\n        'pop',\n        'pop!',\n        'pop-thread-bindings',\n        'pos-int?',\n        'pos?',\n        'pr',\n        'pr-str',\n        'prefer-method',\n        'prefers',\n        'primitives-classnames',\n        'print',\n        'print-ctor',\n        'print-dup',\n        'print-method',\n        'print-simple',\n        'print-str',\n        'printf',\n        'println',\n        'println-str',\n        'prn',\n        'prn-str',\n        'promise',\n        'proxy',\n        'proxy-call-with-super',\n        'proxy-mappings',\n        'proxy-name',\n        'proxy-super',\n        'push-thread-bindings',\n        'pvalues',\n        'qualified-ident?',\n        'qualified-keyword?',\n        'qualified-symbol?',\n        'quot',\n        'rand',\n        'rand-int',\n        'rand-nth',\n        'random-sample',\n        'range',\n        'ratio?',\n        'rational?',\n        'rationalize',\n        're-find',\n        're-groups',\n        're-matcher',\n        're-matches',\n        're-pattern',\n        're-seq',\n        'read',\n        'read-line',\n        'read-string',\n        'reader-conditional',\n        'reader-conditional?',\n        'realized?',\n        'record?',\n        'reduce',\n        'reduce-kv',\n        'reduced',\n        'reduced?',\n        'reductions',\n        'ref',\n        'ref-history-count',\n        'ref-max-history',\n        'ref-min-history',\n        'ref-set',\n        'refer',\n        'refer-clojure',\n        'reify',\n        'release-pending-sends',\n        'rem',\n        'remove',\n        'remove-all-methods',\n        'remove-method',\n        'remove-ns',\n        'remove-watch',\n        'repeat',\n        'repeatedly',\n        'replace',\n        'replicate',\n        'require',\n        'reset!',\n        'reset-meta!',\n        'reset-vals!',\n        'resolve',\n        'rest',\n        'restart-agent',\n        'resultset-seq',\n        'reverse',\n        'reversible?',\n        'rseq',\n        'rsubseq',\n        'run!',\n        'satisfies?',\n        'second',\n        'select-keys',\n        'send',\n        'send-off',\n        'send-via',\n        'seq',\n        'seq?',\n        'seqable?',\n        'seque',\n        'sequence',\n        'sequential?',\n        'set',\n        'set-agent-send-executor!',\n        'set-agent-send-off-executor!',\n        'set-error-handler!',\n        'set-error-mode!',\n        'set-validator!',\n        'set?',\n        'short',\n        'short-array',\n        'shorts',\n        'shuffle',\n        'shutdown-agents',\n        'simple-ident?',\n        'simple-keyword?',\n        'simple-symbol?',\n        'slurp',\n        'some',\n        'some->',\n        'some->>',\n        'some-fn',\n        'some?',\n        'sort',\n        'sort-by',\n        'sorted-map',\n        'sorted-map-by',\n        'sorted-set',\n        'sorted-set-by',\n        'sorted?',\n        'special-symbol?',\n        'spit',\n        'split-at',\n        'split-with',\n        'str',\n        'string?',\n        'struct',\n        'struct-map',\n        'subs',\n        'subseq',\n        'subvec',\n        'supers',\n        'swap!',\n        'swap-vals!',\n        'symbol',\n        'symbol?',\n        'sync',\n        'tagged-literal',\n        'tagged-literal?',\n        'take',\n        'take-last',\n        'take-nth',\n        'take-while',\n        'test',\n        'the-ns',\n        'thread-bound?',\n        'time',\n        'to-array',\n        'to-array-2d',\n        'trampoline',\n        'transduce',\n        'transient',\n        'tree-seq',\n        'true?',\n        'type',\n        'unchecked-add',\n        'unchecked-add-int',\n        'unchecked-byte',\n        'unchecked-char',\n        'unchecked-dec',\n        'unchecked-dec-int',\n        'unchecked-divide-int',\n        'unchecked-double',\n        'unchecked-float',\n        'unchecked-inc',\n        'unchecked-inc-int',\n        'unchecked-int',\n        'unchecked-long',\n        'unchecked-multiply',\n        'unchecked-multiply-int',\n        'unchecked-negate',\n        'unchecked-negate-int',\n        'unchecked-remainder-int',\n        'unchecked-short',\n        'unchecked-subtract',\n        'unchecked-subtract-int',\n        'underive',\n        'unquote',\n        'unquote-splicing',\n        'unreduced',\n        'unsigned-bit-shift-right',\n        'update',\n        'update-in',\n        'update-proxy',\n        'uri?',\n        'use',\n        'uuid?',\n        'val',\n        'vals',\n        'var-get',\n        'var-set',\n        'var?',\n        'vary-meta',\n        'vec',\n        'vector',\n        'vector-of',\n        'vector?',\n        'volatile!',\n        'volatile?',\n        'vreset!',\n        'vswap!',\n        'when',\n        'when-first',\n        'when-let',\n        'when-not',\n        'when-some',\n        'while',\n        'with-bindings',\n        'with-bindings*',\n        'with-in-str',\n        'with-loading-context',\n        'with-local-vars',\n        'with-meta',\n        'with-open',\n        'with-out-str',\n        'with-precision',\n        'with-redefs',\n        'with-redefs-fn',\n        'xml-seq',\n        'zero?',\n        'zipmap',\n    ],\n    tokenizer: {\n        root: [\n            // whitespaces and comments\n            { include: '@whitespace' },\n            // numbers\n            [/@numbers/, 'number'],\n            // characters\n            [/@characters/, 'string'],\n            // strings\n            { include: '@string' },\n            // brackets\n            [/[()\\[\\]{}]/, '@brackets'],\n            // regular expressions\n            [/\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g/, 'regexp'],\n            // reader macro characters\n            [/[#'@^`~]/, 'meta'],\n            // symbols\n            [/@qualifiedSymbols/, {\n                    cases: {\n                        '^:.+$': 'constant',\n                        '@specialForms': 'keyword',\n                        '@coreSymbols': 'keyword',\n                        '@constants': 'constant',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/;.*$/, 'comment'],\n            [/\\(comment\\b/, 'comment', '@comment'],\n        ],\n        comment: [\n            [/\\(/, 'comment', '@push'],\n            [/\\)/, 'comment', '@pop'],\n            [/[^()]/, 'comment'],\n        ],\n        string: [\n            [/\"/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\"/, 'string', '@popall'],\n            [/@escapes/, 'string.escape'],\n            [/./, 'string']\n        ],\n    },\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/monaco-markdown/node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,SAAS,YAAY,GAAG;AACjC;AACA;AACA,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,SAAS,YAAY,GAAG;AACjC;AACA;AACO;AACP;AACA;AACA;AACA;AACA,SAAS,mDAAmD;AAC5D,SAAS,wDAAwD;AACjE,SAAS,SAAS,YAAY,6BAA6B;AAC3D;AACA;AACA,oCAAoC,KAAK;AACzC,kJAAkJ,KAAK;AACvJ,6EAA6E,EAAE,cAAc,EAAE,cAAc,EAAE,qBAAqB,KAAK;AACzI,6CAA6C,IAAI,cAAc,EAAE,cAAc,EAAE;AACjF,kDAAkD,KAAK,iBAAiB,KAAK;AAC7E,wDAAwD,KAAK,iBAAiB,KAAK;AACnF;AACA,mDAAmD,KAAK,iBAAiB,KAAK,6BAA6B,KAAK,iBAAiB,KAAK,oCAAoC,KAAK,iBAAiB,KAAK,sBAAsB,KAAK;AAChaAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL","file":"x","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: ';;',\n    },\n    brackets: [\n        ['[', ']'],\n        ['(', ')'],\n        ['{', '}']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '\"', close: '\"' },\n        { open: '(', close: ')' },\n        { open: '{', close: '}' },\n    ],\n    surroundingPairs: [\n        { open: '[', close: ']' },\n        { open: '\"', close: '\"' },\n        { open: '(', close: ')' },\n        { open: '{', close: '}' },\n    ],\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.clj',\n    brackets: [\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n    ],\n    constants: ['true', 'false', 'nil'],\n    // delimiters: /[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$/,\n    numbers: /^(?:[+\\-]?\\d+(?:(?:N|(?:[eE][+\\-]?\\d+))|(?:\\.?\\d*(?:M|(?:[eE][+\\-]?\\d+))?)|\\/\\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$))/,\n    characters: /^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n    escapes: /^\\\\(?:[\"'\\\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // simple-namespace := /^[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*/\n    // simple-symbol    := /^(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)/\n    // qualified-symbol := (<simple-namespace>(<.><simple-namespace>)*</>)?<simple-symbol>\n    qualifiedSymbols: /^(?:(?:[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*(?:\\.[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*\\/)?(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n    specialForms: [\n        '.',\n        'catch',\n        'def',\n        'do',\n        'if',\n        'monitor-enter',\n        'monitor-exit',\n        'new',\n        'quote',\n        'recur',\n        'set!',\n        'throw',\n        'try',\n        'var',\n    ],\n    coreSymbols: [\n        '*',\n        '*\\'',\n        '*1',\n        '*2',\n        '*3',\n        '*agent*',\n        '*allow-unresolved-vars*',\n        '*assert*',\n        '*clojure-version*',\n        '*command-line-args*',\n        '*compile-files*',\n        '*compile-path*',\n        '*compiler-options*',\n        '*data-readers*',\n        '*default-data-reader-fn*',\n        '*e',\n        '*err*',\n        '*file*',\n        '*flush-on-newline*',\n        '*fn-loader*',\n        '*in*',\n        '*math-context*',\n        '*ns*',\n        '*out*',\n        '*print-dup*',\n        '*print-length*',\n        '*print-level*',\n        '*print-meta*',\n        '*print-namespace-maps*',\n        '*print-readably*',\n        '*read-eval*',\n        '*reader-resolver*',\n        '*source-path*',\n        '*suppress-read*',\n        '*unchecked-math*',\n        '*use-context-classloader*',\n        '*verbose-defrecords*',\n        '*warn-on-reflection*',\n        '+',\n        '+\\'',\n        '-',\n        '-\\'',\n        '->',\n        '->>',\n        '->ArrayChunk',\n        '->Eduction',\n        '->Vec',\n        '->VecNode',\n        '->VecSeq',\n        '-cache-protocol-fn',\n        '-reset-methods',\n        '..',\n        '/',\n        '<',\n        '<=',\n        '=',\n        '==',\n        '>',\n        '>=',\n        'EMPTY-NODE',\n        'Inst',\n        'StackTraceElement->vec',\n        'Throwable->map',\n        'accessor',\n        'aclone',\n        'add-classpath',\n        'add-watch',\n        'agent',\n        'agent-error',\n        'agent-errors',\n        'aget',\n        'alength',\n        'alias',\n        'all-ns',\n        'alter',\n        'alter-meta!',\n        'alter-var-root',\n        'amap',\n        'ancestors',\n        'and',\n        'any?',\n        'apply',\n        'areduce',\n        'array-map',\n        'as->',\n        'aset',\n        'aset-boolean',\n        'aset-byte',\n        'aset-char',\n        'aset-double',\n        'aset-float',\n        'aset-int',\n        'aset-long',\n        'aset-short',\n        'assert',\n        'assoc',\n        'assoc!',\n        'assoc-in',\n        'associative?',\n        'atom',\n        'await',\n        'await-for',\n        'await1',\n        'bases',\n        'bean',\n        'bigdec',\n        'bigint',\n        'biginteger',\n        'binding',\n        'bit-and',\n        'bit-and-not',\n        'bit-clear',\n        'bit-flip',\n        'bit-not',\n        'bit-or',\n        'bit-set',\n        'bit-shift-left',\n        'bit-shift-right',\n        'bit-test',\n        'bit-xor',\n        'boolean',\n        'boolean-array',\n        'boolean?',\n        'booleans',\n        'bound-fn',\n        'bound-fn*',\n        'bound?',\n        'bounded-count',\n        'butlast',\n        'byte',\n        'byte-array',\n        'bytes',\n        'bytes?',\n        'case',\n        'cast',\n        'cat',\n        'char',\n        'char-array',\n        'char-escape-string',\n        'char-name-string',\n        'char?',\n        'chars',\n        'chunk',\n        'chunk-append',\n        'chunk-buffer',\n        'chunk-cons',\n        'chunk-first',\n        'chunk-next',\n        'chunk-rest',\n        'chunked-seq?',\n        'class',\n        'class?',\n        'clear-agent-errors',\n        'clojure-version',\n        'coll?',\n        'comment',\n        'commute',\n        'comp',\n        'comparator',\n        'compare',\n        'compare-and-set!',\n        'compile',\n        'complement',\n        'completing',\n        'concat',\n        'cond',\n        'cond->',\n        'cond->>',\n        'condp',\n        'conj',\n        'conj!',\n        'cons',\n        'constantly',\n        'construct-proxy',\n        'contains?',\n        'count',\n        'counted?',\n        'create-ns',\n        'create-struct',\n        'cycle',\n        'dec',\n        'dec\\'',\n        'decimal?',\n        'declare',\n        'dedupe',\n        'default-data-readers',\n        'definline',\n        'definterface',\n        'defmacro',\n        'defmethod',\n        'defmulti',\n        'defn',\n        'defn-',\n        'defonce',\n        'defprotocol',\n        'defrecord',\n        'defstruct',\n        'deftype',\n        'delay',\n        'delay?',\n        'deliver',\n        'denominator',\n        'deref',\n        'derive',\n        'descendants',\n        'destructure',\n        'disj',\n        'disj!',\n        'dissoc',\n        'dissoc!',\n        'distinct',\n        'distinct?',\n        'doall',\n        'dorun',\n        'doseq',\n        'dosync',\n        'dotimes',\n        'doto',\n        'double',\n        'double-array',\n        'double?',\n        'doubles',\n        'drop',\n        'drop-last',\n        'drop-while',\n        'eduction',\n        'empty',\n        'empty?',\n        'ensure',\n        'ensure-reduced',\n        'enumeration-seq',\n        'error-handler',\n        'error-mode',\n        'eval',\n        'even?',\n        'every-pred',\n        'every?',\n        'ex-data',\n        'ex-info',\n        'extend',\n        'extend-protocol',\n        'extend-type',\n        'extenders',\n        'extends?',\n        'false?',\n        'ffirst',\n        'file-seq',\n        'filter',\n        'filterv',\n        'find',\n        'find-keyword',\n        'find-ns',\n        'find-protocol-impl',\n        'find-protocol-method',\n        'find-var',\n        'first',\n        'flatten',\n        'float',\n        'float-array',\n        'float?',\n        'floats',\n        'flush',\n        'fn',\n        'fn?',\n        'fnext',\n        'fnil',\n        'for',\n        'force',\n        'format',\n        'frequencies',\n        'future',\n        'future-call',\n        'future-cancel',\n        'future-cancelled?',\n        'future-done?',\n        'future?',\n        'gen-class',\n        'gen-interface',\n        'gensym',\n        'get',\n        'get-in',\n        'get-method',\n        'get-proxy-class',\n        'get-thread-bindings',\n        'get-validator',\n        'group-by',\n        'halt-when',\n        'hash',\n        'hash-combine',\n        'hash-map',\n        'hash-ordered-coll',\n        'hash-set',\n        'hash-unordered-coll',\n        'ident?',\n        'identical?',\n        'identity',\n        'if-let',\n        'if-not',\n        'if-some',\n        'ifn?',\n        'import',\n        'in-ns',\n        'inc',\n        'inc\\'',\n        'indexed?',\n        'init-proxy',\n        'inst-ms',\n        'inst-ms*',\n        'inst?',\n        'instance?',\n        'int',\n        'int-array',\n        'int?',\n        'integer?',\n        'interleave',\n        'intern',\n        'interpose',\n        'into',\n        'into-array',\n        'ints',\n        'io!',\n        'isa?',\n        'iterate',\n        'iterator-seq',\n        'juxt',\n        'keep',\n        'keep-indexed',\n        'key',\n        'keys',\n        'keyword',\n        'keyword?',\n        'last',\n        'lazy-cat',\n        'lazy-seq',\n        'let',\n        'letfn',\n        'line-seq',\n        'list',\n        'list*',\n        'list?',\n        'load',\n        'load-file',\n        'load-reader',\n        'load-string',\n        'loaded-libs',\n        'locking',\n        'long',\n        'long-array',\n        'longs',\n        'loop',\n        'macroexpand',\n        'macroexpand-1',\n        'make-array',\n        'make-hierarchy',\n        'map',\n        'map-entry?',\n        'map-indexed',\n        'map?',\n        'mapcat',\n        'mapv',\n        'max',\n        'max-key',\n        'memfn',\n        'memoize',\n        'merge',\n        'merge-with',\n        'meta',\n        'method-sig',\n        'methods',\n        'min',\n        'min-key',\n        'mix-collection-hash',\n        'mod',\n        'munge',\n        'name',\n        'namespace',\n        'namespace-munge',\n        'nat-int?',\n        'neg-int?',\n        'neg?',\n        'newline',\n        'next',\n        'nfirst',\n        'nil?',\n        'nnext',\n        'not',\n        'not-any?',\n        'not-empty',\n        'not-every?',\n        'not=',\n        'ns',\n        'ns-aliases',\n        'ns-imports',\n        'ns-interns',\n        'ns-map',\n        'ns-name',\n        'ns-publics',\n        'ns-refers',\n        'ns-resolve',\n        'ns-unalias',\n        'ns-unmap',\n        'nth',\n        'nthnext',\n        'nthrest',\n        'num',\n        'number?',\n        'numerator',\n        'object-array',\n        'odd?',\n        'or',\n        'parents',\n        'partial',\n        'partition',\n        'partition-all',\n        'partition-by',\n        'pcalls',\n        'peek',\n        'persistent!',\n        'pmap',\n        'pop',\n        'pop!',\n        'pop-thread-bindings',\n        'pos-int?',\n        'pos?',\n        'pr',\n        'pr-str',\n        'prefer-method',\n        'prefers',\n        'primitives-classnames',\n        'print',\n        'print-ctor',\n        'print-dup',\n        'print-method',\n        'print-simple',\n        'print-str',\n        'printf',\n        'println',\n        'println-str',\n        'prn',\n        'prn-str',\n        'promise',\n        'proxy',\n        'proxy-call-with-super',\n        'proxy-mappings',\n        'proxy-name',\n        'proxy-super',\n        'push-thread-bindings',\n        'pvalues',\n        'qualified-ident?',\n        'qualified-keyword?',\n        'qualified-symbol?',\n        'quot',\n        'rand',\n        'rand-int',\n        'rand-nth',\n        'random-sample',\n        'range',\n        'ratio?',\n        'rational?',\n        'rationalize',\n        're-find',\n        're-groups',\n        're-matcher',\n        're-matches',\n        're-pattern',\n        're-seq',\n        'read',\n        'read-line',\n        'read-string',\n        'reader-conditional',\n        'reader-conditional?',\n        'realized?',\n        'record?',\n        'reduce',\n        'reduce-kv',\n        'reduced',\n        'reduced?',\n        'reductions',\n        'ref',\n        'ref-history-count',\n        'ref-max-history',\n        'ref-min-history',\n        'ref-set',\n        'refer',\n        'refer-clojure',\n        'reify',\n        'release-pending-sends',\n        'rem',\n        'remove',\n        'remove-all-methods',\n        'remove-method',\n        'remove-ns',\n        'remove-watch',\n        'repeat',\n        'repeatedly',\n        'replace',\n        'replicate',\n        'require',\n        'reset!',\n        'reset-meta!',\n        'reset-vals!',\n        'resolve',\n        'rest',\n        'restart-agent',\n        'resultset-seq',\n        'reverse',\n        'reversible?',\n        'rseq',\n        'rsubseq',\n        'run!',\n        'satisfies?',\n        'second',\n        'select-keys',\n        'send',\n        'send-off',\n        'send-via',\n        'seq',\n        'seq?',\n        'seqable?',\n        'seque',\n        'sequence',\n        'sequential?',\n        'set',\n        'set-agent-send-executor!',\n        'set-agent-send-off-executor!',\n        'set-error-handler!',\n        'set-error-mode!',\n        'set-validator!',\n        'set?',\n        'short',\n        'short-array',\n        'shorts',\n        'shuffle',\n        'shutdown-agents',\n        'simple-ident?',\n        'simple-keyword?',\n        'simple-symbol?',\n        'slurp',\n        'some',\n        'some->',\n        'some->>',\n        'some-fn',\n        'some?',\n        'sort',\n        'sort-by',\n        'sorted-map',\n        'sorted-map-by',\n        'sorted-set',\n        'sorted-set-by',\n        'sorted?',\n        'special-symbol?',\n        'spit',\n        'split-at',\n        'split-with',\n        'str',\n        'string?',\n        'struct',\n        'struct-map',\n        'subs',\n        'subseq',\n        'subvec',\n        'supers',\n        'swap!',\n        'swap-vals!',\n        'symbol',\n        'symbol?',\n        'sync',\n        'tagged-literal',\n        'tagged-literal?',\n        'take',\n        'take-last',\n        'take-nth',\n        'take-while',\n        'test',\n        'the-ns',\n        'thread-bound?',\n        'time',\n        'to-array',\n        'to-array-2d',\n        'trampoline',\n        'transduce',\n        'transient',\n        'tree-seq',\n        'true?',\n        'type',\n        'unchecked-add',\n        'unchecked-add-int',\n        'unchecked-byte',\n        'unchecked-char',\n        'unchecked-dec',\n        'unchecked-dec-int',\n        'unchecked-divide-int',\n        'unchecked-double',\n        'unchecked-float',\n        'unchecked-inc',\n        'unchecked-inc-int',\n        'unchecked-int',\n        'unchecked-long',\n        'unchecked-multiply',\n        'unchecked-multiply-int',\n        'unchecked-negate',\n        'unchecked-negate-int',\n        'unchecked-remainder-int',\n        'unchecked-short',\n        'unchecked-subtract',\n        'unchecked-subtract-int',\n        'underive',\n        'unquote',\n        'unquote-splicing',\n        'unreduced',\n        'unsigned-bit-shift-right',\n        'update',\n        'update-in',\n        'update-proxy',\n        'uri?',\n        'use',\n        'uuid?',\n        'val',\n        'vals',\n        'var-get',\n        'var-set',\n        'var?',\n        'vary-meta',\n        'vec',\n        'vector',\n        'vector-of',\n        'vector?',\n        'volatile!',\n        'volatile?',\n        'vreset!',\n        'vswap!',\n        'when',\n        'when-first',\n        'when-let',\n        'when-not',\n        'when-some',\n        'while',\n        'with-bindings',\n        'with-bindings*',\n        'with-in-str',\n        'with-loading-context',\n        'with-local-vars',\n        'with-meta',\n        'with-open',\n        'with-out-str',\n        'with-precision',\n        'with-redefs',\n        'with-redefs-fn',\n        'xml-seq',\n        'zero?',\n        'zipmap',\n    ],\n    tokenizer: {\n        root: [\n            // whitespaces and comments\n            { include: '@whitespace' },\n            // numbers\n            [/@numbers/, 'number'],\n            // characters\n            [/@characters/, 'string'],\n            // strings\n            { include: '@string' },\n            // brackets\n            [/[()\\[\\]{}]/, '@brackets'],\n            // regular expressions\n            [/\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g/, 'regexp'],\n            // reader macro characters\n            [/[#'@^`~]/, 'meta'],\n            // symbols\n            [/@qualifiedSymbols/, {\n                    cases: {\n                        '^:.+$': 'constant',\n                        '@specialForms': 'keyword',\n                        '@coreSymbols': 'keyword',\n                        '@constants': 'constant',\n                        '@default': 'identifier',\n                    },\n                },\n            ],\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/;.*$/, 'comment'],\n            [/\\(comment\\b/, 'comment', '@comment'],\n        ],\n        comment: [\n            [/\\(/, 'comment', '@push'],\n            [/\\)/, 'comment', '@pop'],\n            [/[^()]/, 'comment'],\n        ],\n        string: [\n            [/\"/, 'string', '@multiLineString'],\n        ],\n        multiLineString: [\n            [/\"/, 'string', '@popall'],\n            [/@escapes/, 'string.escape'],\n            [/./, 'string']\n        ],\n    },\n};\n"]}}