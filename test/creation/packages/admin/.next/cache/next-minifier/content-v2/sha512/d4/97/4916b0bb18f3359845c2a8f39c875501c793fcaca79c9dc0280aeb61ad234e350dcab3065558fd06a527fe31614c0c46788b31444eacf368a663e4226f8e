{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[66],{\"2sHg\":function(e,t,n){\"use strict\";n.r(t),n.d(t,\"conf\",(function(){return o})),n.d(t,\"language\",(function(){return i}));var o={wordPattern:/(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,comments:{lineComment:\"//\",blockComment:[\"/*\",\"*/\"]},brackets:[[\"{\",\"}\"],[\"[\",\"]\"],[\"(\",\")\"]],autoClosingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"}],surroundingPairs:[{open:\"{\",close:\"}\"},{open:\"[\",close:\"]\"},{open:\"(\",close:\")\"},{open:'\"',close:'\"'},{open:\"'\",close:\"'\"},{open:\"<\",close:\">\"}],folding:{markers:{start:new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),end:new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")}}},s=[];[\"abstract\",\"activate\",\"and\",\"any\",\"array\",\"as\",\"asc\",\"assert\",\"autonomous\",\"begin\",\"bigdecimal\",\"blob\",\"boolean\",\"break\",\"bulk\",\"by\",\"case\",\"cast\",\"catch\",\"char\",\"class\",\"collect\",\"commit\",\"const\",\"continue\",\"convertcurrency\",\"decimal\",\"default\",\"delete\",\"desc\",\"do\",\"double\",\"else\",\"end\",\"enum\",\"exception\",\"exit\",\"export\",\"extends\",\"false\",\"final\",\"finally\",\"float\",\"for\",\"from\",\"future\",\"get\",\"global\",\"goto\",\"group\",\"having\",\"hint\",\"if\",\"implements\",\"import\",\"in\",\"inner\",\"insert\",\"instanceof\",\"int\",\"interface\",\"into\",\"join\",\"last_90_days\",\"last_month\",\"last_n_days\",\"last_week\",\"like\",\"limit\",\"list\",\"long\",\"loop\",\"map\",\"merge\",\"native\",\"new\",\"next_90_days\",\"next_month\",\"next_n_days\",\"next_week\",\"not\",\"null\",\"nulls\",\"number\",\"object\",\"of\",\"on\",\"or\",\"outer\",\"override\",\"package\",\"parallel\",\"pragma\",\"private\",\"protected\",\"public\",\"retrieve\",\"return\",\"returning\",\"rollback\",\"savepoint\",\"search\",\"select\",\"set\",\"short\",\"sort\",\"stat\",\"static\",\"strictfp\",\"super\",\"switch\",\"synchronized\",\"system\",\"testmethod\",\"then\",\"this\",\"this_month\",\"this_week\",\"throw\",\"throws\",\"today\",\"tolabel\",\"tomorrow\",\"transaction\",\"transient\",\"trigger\",\"true\",\"try\",\"type\",\"undelete\",\"update\",\"upsert\",\"using\",\"virtual\",\"void\",\"volatile\",\"webservice\",\"when\",\"where\",\"while\",\"yesterday\"].forEach((function(e){s.push(e),s.push(e.toUpperCase()),s.push(function(e){return e.charAt(0).toUpperCase()+e.substr(1)}(e))}));var i={defaultToken:\"\",tokenPostfix:\".apex\",keywords:s,operators:[\"=\",\">\",\"<\",\"!\",\"~\",\"?\",\":\",\"==\",\"<=\",\">=\",\"!=\",\"&&\",\"||\",\"++\",\"--\",\"+\",\"-\",\"*\",\"/\",\"&\",\"|\",\"^\",\"%\",\"<<\",\">>\",\">>>\",\"+=\",\"-=\",\"*=\",\"/=\",\"&=\",\"|=\",\"^=\",\"%=\",\"<<=\",\">>=\",\">>>=\"],symbols:/[=><!~?:&|+\\-*\\/\\^%]+/,escapes:/\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\\d+(_+\\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,tokenizer:{root:[[/[a-z_$][\\w$]*/,{cases:{\"@keywords\":{token:\"keyword.$0\"},\"@default\":\"identifier\"}}],[/[A-Z][\\w\\$]*/,{cases:{\"@keywords\":{token:\"keyword.$0\"},\"@default\":\"type.identifier\"}}],{include:\"@whitespace\"},[/[{}()\\[\\]]/,\"@brackets\"],[/[<>](?!@symbols)/,\"@brackets\"],[/@symbols/,{cases:{\"@operators\":\"delimiter\",\"@default\":\"\"}}],[/@\\s*[a-zA-Z_\\$][\\w\\$]*/,\"annotation\"],[/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/,\"number.float\"],[/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/,\"number.float\"],[/(@digits)[fFdD]/,\"number.float\"],[/(@digits)[lL]?/,\"number\"],[/[;,.]/,\"delimiter\"],[/\"([^\"\\\\]|\\\\.)*$/,\"string.invalid\"],[/'([^'\\\\]|\\\\.)*$/,\"string.invalid\"],[/\"/,\"string\",'@string.\"'],[/'/,\"string\",\"@string.'\"],[/'[^\\\\']'/,\"string\"],[/(')(@escapes)(')/,[\"string\",\"string.escape\",\"string\"]],[/'/,\"string.invalid\"]],whitespace:[[/[ \\t\\r\\n]+/,\"\"],[/\\/\\*\\*(?!\\/)/,\"comment.doc\",\"@apexdoc\"],[/\\/\\*/,\"comment\",\"@comment\"],[/\\/\\/.*$/,\"comment\"]],comment:[[/[^\\/*]+/,\"comment\"],[/\\*\\//,\"comment\",\"@pop\"],[/[\\/*]/,\"comment\"]],apexdoc:[[/[^\\/*]+/,\"comment.doc\"],[/\\*\\//,\"comment.doc\",\"@pop\"],[/[\\/*]/,\"comment.doc\"]],string:[[/[^\\\\\"']+/,\"string\"],[/@escapes/,\"string.escape\"],[/\\\\./,\"string.escape.invalid\"],[/[\"']/,{cases:{\"$#==$S2\":{token:\"string\",next:\"@pop\"},\"@default\":\"string\"}}]]}}}}]);","map":{"version":3,"sources":["static/chunks/66.876ee9be19de25705dd5.js"],"names":["window","push","2sHg","module","__webpack_exports__","__webpack_require__","r","d","conf","language","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","keywordsWithCaseVariations","forEach","lowercase","toUpperCase","charAt","substr","uppercaseFirstLetter","defaultToken","tokenPostfix","keywords","operators","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","root","cases","@keywords","token","@default","include","@operators","whitespace","comment","apexdoc","string","$#==$S2","next"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,OACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,QAAQ,WAAa,OAAOI,KACvEH,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAOK,KAM1G,IAAID,EAAO,CAEPE,YAAa,qFACbC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,MAEzBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,KACrB,CAAED,KAAM,IAAKC,MAAO,MAExBE,QAAS,CACLC,QAAS,CACLC,MAAO,IAAIC,OAAO,sDAClBC,IAAK,IAAID,OAAO,2DAsJxBE,EAA6B,GAlJlB,CACX,WACA,WACA,MACA,MACA,QACA,KACA,MACA,SACA,aACA,QACA,aACA,OACA,UACA,QACA,OACA,KACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,WACA,kBACA,UACA,UACA,SACA,OACA,KACA,SACA,OACA,MACA,OACA,YACA,OACA,SACA,UACA,QACA,QACA,UACA,QACA,MACA,OACA,SACA,MACA,SACA,OACA,QACA,SACA,OACA,KACA,aACA,SACA,KACA,QACA,SACA,aACA,MACA,YACA,OACA,OACA,eACA,aACA,cACA,YACA,OACA,QACA,OACA,OACA,OACA,MACA,QACA,SACA,MACA,eACA,aACA,cACA,YACA,MACA,OACA,QACA,SACA,SACA,KACA,KACA,KACA,QACA,WACA,UACA,WACA,SACA,UACA,YACA,SACA,WACA,SACA,YACA,WACA,YACA,SACA,SACA,MACA,QACA,OACA,OACA,SACA,WACA,QACA,SACA,eACA,SACA,aACA,OACA,OACA,aACA,YACA,QACA,SACA,QACA,UACA,WACA,cACA,YACA,UACA,OACA,MACA,OACA,WACA,SACA,SACA,QACA,UACA,OACA,WACA,aACA,OACA,QACA,QACA,aAMKC,SAAQ,SAAUC,GACvBF,EAA2BvB,KAAKyB,GAChCF,EAA2BvB,KAAKyB,EAAUC,eAC1CH,EAA2BvB,KALJ,SAAUyB,GAAa,OAAOA,EAAUE,OAAO,GAAGD,cAAgBD,EAAUG,OAAO,GAK1EC,CAAqBJ,OAEzD,IAAIjB,EAAW,CACXsB,aAAc,GACdC,aAAc,QACdC,SAAUT,EACVU,UAAW,CACP,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAC3C,KAAM,KAAM,MAAO,MAAO,QAG9BC,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCAEXC,UAAW,CACPC,KAAM,CAEF,CAAC,gBAAiB,CACVC,MAAO,CACHC,YAAa,CAAEC,MAAO,cACtBC,WAAY,gBAIxB,CAAC,eAAgB,CACTH,MAAO,CACHC,YAAa,CAAEC,MAAO,cACtBC,WAAY,qBAIxB,CAAEC,QAAS,eAEX,CAAC,aAAc,aACf,CAAC,mBAAoB,aACrB,CAAC,WAAY,CACLJ,MAAO,CACHK,aAAc,YACdF,WAAY,MAIxB,CAAC,yBAA0B,cAE3B,CAAC,yCAA0C,gBAC3C,CAAC,oDAAqD,gBACtD,CAAC,kBAAmB,gBACpB,CAAC,iBAAkB,UAEnB,CAAC,QAAS,aAEV,CAAC,kBAAmB,kBACpB,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,aAChB,CAAC,IAAK,SAAU,aAEhB,CAAC,WAAY,UACb,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WACjD,CAAC,IAAK,mBAEVG,WAAY,CACR,CAAC,aAAc,IACf,CAAC,eAAgB,cAAe,YAChC,CAAC,OAAQ,UAAW,YACpB,CAAC,UAAW,YAEhBC,QAAS,CACL,CAAC,UAAW,WAGZ,CAAC,OAAQ,UAAW,QACpB,CAAC,QAAS,YAGdC,QAAS,CACL,CAAC,UAAW,eACZ,CAAC,OAAQ,cAAe,QACxB,CAAC,QAAS,gBAEdC,OAAQ,CACJ,CAAC,WAAY,UACb,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,OAAQ,CAAET,MAAO,CAAEU,UAAW,CAAER,MAAO,SAAUS,KAAM,QAC5CR,WAAY"},"name":"static/chunks/66.876ee9be19de25705dd5.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[66],{\n\n/***/ \"2sHg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n        }\n    }\n};\nvar keywords = [\n    'abstract',\n    'activate',\n    'and',\n    'any',\n    'array',\n    'as',\n    'asc',\n    'assert',\n    'autonomous',\n    'begin',\n    'bigdecimal',\n    'blob',\n    'boolean',\n    'break',\n    'bulk',\n    'by',\n    'case',\n    'cast',\n    'catch',\n    'char',\n    'class',\n    'collect',\n    'commit',\n    'const',\n    'continue',\n    'convertcurrency',\n    'decimal',\n    'default',\n    'delete',\n    'desc',\n    'do',\n    'double',\n    'else',\n    'end',\n    'enum',\n    'exception',\n    'exit',\n    'export',\n    'extends',\n    'false',\n    'final',\n    'finally',\n    'float',\n    'for',\n    'from',\n    'future',\n    'get',\n    'global',\n    'goto',\n    'group',\n    'having',\n    'hint',\n    'if',\n    'implements',\n    'import',\n    'in',\n    'inner',\n    'insert',\n    'instanceof',\n    'int',\n    'interface',\n    'into',\n    'join',\n    'last_90_days',\n    'last_month',\n    'last_n_days',\n    'last_week',\n    'like',\n    'limit',\n    'list',\n    'long',\n    'loop',\n    'map',\n    'merge',\n    'native',\n    'new',\n    'next_90_days',\n    'next_month',\n    'next_n_days',\n    'next_week',\n    'not',\n    'null',\n    'nulls',\n    'number',\n    'object',\n    'of',\n    'on',\n    'or',\n    'outer',\n    'override',\n    'package',\n    'parallel',\n    'pragma',\n    'private',\n    'protected',\n    'public',\n    'retrieve',\n    'return',\n    'returning',\n    'rollback',\n    'savepoint',\n    'search',\n    'select',\n    'set',\n    'short',\n    'sort',\n    'stat',\n    'static',\n    'strictfp',\n    'super',\n    'switch',\n    'synchronized',\n    'system',\n    'testmethod',\n    'then',\n    'this',\n    'this_month',\n    'this_week',\n    'throw',\n    'throws',\n    'today',\n    'tolabel',\n    'tomorrow',\n    'transaction',\n    'transient',\n    'trigger',\n    'true',\n    'try',\n    'type',\n    'undelete',\n    'update',\n    'upsert',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'webservice',\n    'when',\n    'where',\n    'while',\n    'yesterday'\n];\n// create case variations of the keywords - apex is case insensitive, but we can't make the highlighter case insensitive\n// because we use a heuristic to assume that identifiers starting with an upper case letter are types.\nvar uppercaseFirstLetter = function (lowercase) { return lowercase.charAt(0).toUpperCase() + lowercase.substr(1); };\nvar keywordsWithCaseVariations = [];\nkeywords.forEach(function (lowercase) {\n    keywordsWithCaseVariations.push(lowercase);\n    keywordsWithCaseVariations.push(lowercase.toUpperCase());\n    keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.apex',\n    keywords: keywordsWithCaseVariations,\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // assume that identifiers starting with an uppercase letter are types\n            [/[A-Z][\\w\\$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'type.identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // @ annotations.\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)[fFdD]/, 'number.float'],\n            [/(@digits)[lL]?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@apexdoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        apexdoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, { cases: { '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string' } }]\n        ],\n    },\n};\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/monaco-markdown/node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACN;AACP;AACA,kEAAkE,IAAI,MAAM;AAC5E;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC;AACA;AACA,SAAS,SAAS,YAAY,GAAG;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjiDAAiD,gEAAgE;AACjH;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,cAAc,EAAE,cAAc,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA,iBAAiB;AACjB;AACA,aAAa,yBAAyB;AACtC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,aAAa,gCAAgC;AAC5E,8CAA8C,EAAE;AAChD;AACA,KAAK;AACL","file":"x","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    // the default separators except `@$`\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: '<', close: '>' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n            end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n        }\n    }\n};\nvar keywords = [\n    'abstract',\n    'activate',\n    'and',\n    'any',\n    'array',\n    'as',\n    'asc',\n    'assert',\n    'autonomous',\n    'begin',\n    'bigdecimal',\n    'blob',\n    'boolean',\n    'break',\n    'bulk',\n    'by',\n    'case',\n    'cast',\n    'catch',\n    'char',\n    'class',\n    'collect',\n    'commit',\n    'const',\n    'continue',\n    'convertcurrency',\n    'decimal',\n    'default',\n    'delete',\n    'desc',\n    'do',\n    'double',\n    'else',\n    'end',\n    'enum',\n    'exception',\n    'exit',\n    'export',\n    'extends',\n    'false',\n    'final',\n    'finally',\n    'float',\n    'for',\n    'from',\n    'future',\n    'get',\n    'global',\n    'goto',\n    'group',\n    'having',\n    'hint',\n    'if',\n    'implements',\n    'import',\n    'in',\n    'inner',\n    'insert',\n    'instanceof',\n    'int',\n    'interface',\n    'into',\n    'join',\n    'last_90_days',\n    'last_month',\n    'last_n_days',\n    'last_week',\n    'like',\n    'limit',\n    'list',\n    'long',\n    'loop',\n    'map',\n    'merge',\n    'native',\n    'new',\n    'next_90_days',\n    'next_month',\n    'next_n_days',\n    'next_week',\n    'not',\n    'null',\n    'nulls',\n    'number',\n    'object',\n    'of',\n    'on',\n    'or',\n    'outer',\n    'override',\n    'package',\n    'parallel',\n    'pragma',\n    'private',\n    'protected',\n    'public',\n    'retrieve',\n    'return',\n    'returning',\n    'rollback',\n    'savepoint',\n    'search',\n    'select',\n    'set',\n    'short',\n    'sort',\n    'stat',\n    'static',\n    'strictfp',\n    'super',\n    'switch',\n    'synchronized',\n    'system',\n    'testmethod',\n    'then',\n    'this',\n    'this_month',\n    'this_week',\n    'throw',\n    'throws',\n    'today',\n    'tolabel',\n    'tomorrow',\n    'transaction',\n    'transient',\n    'trigger',\n    'true',\n    'try',\n    'type',\n    'undelete',\n    'update',\n    'upsert',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'webservice',\n    'when',\n    'where',\n    'while',\n    'yesterday'\n];\n// create case variations of the keywords - apex is case insensitive, but we can't make the highlighter case insensitive\n// because we use a heuristic to assume that identifiers starting with an upper case letter are types.\nvar uppercaseFirstLetter = function (lowercase) { return lowercase.charAt(0).toUpperCase() + lowercase.substr(1); };\nvar keywordsWithCaseVariations = [];\nkeywords.forEach(function (lowercase) {\n    keywordsWithCaseVariations.push(lowercase);\n    keywordsWithCaseVariations.push(lowercase.toUpperCase());\n    keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.apex',\n    keywords: keywordsWithCaseVariations,\n    operators: [\n        '=', '>', '<', '!', '~', '?', ':',\n        '==', '<=', '>=', '!=', '&&', '||', '++', '--',\n        '+', '-', '*', '/', '&', '|', '^', '%', '<<',\n        '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\n        '^=', '%=', '<<=', '>>=', '>>>='\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+(_+\\d+)*/,\n    octaldigits: /[0-7]+(_+[0-7]+)*/,\n    binarydigits: /[0-1]+(_+[0-1]+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-z_$][\\w$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            // assume that identifiers starting with an uppercase letter are types\n            [/[A-Z][\\w\\$]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'type.identifier'\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // @ annotations.\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\n            [/(@digits)[fFdD]/, 'number.float'],\n            [/(@digits)[lL]?/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@apexdoc'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n            // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        //Identical copy of comment above, except for the addition of .doc\n        apexdoc: [\n            [/[^\\/*]+/, 'comment.doc'],\n            [/\\*\\//, 'comment.doc', '@pop'],\n            [/[\\/*]/, 'comment.doc']\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, { cases: { '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string' } }]\n        ],\n    },\n};\n"]}}