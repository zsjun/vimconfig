{"ast":null,"code":"import _extends from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport _objectWithoutProperties from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport { DeleteOutlined, EditOutlined, PlusOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Icon as LegacyIcon } from '@ant-design/compatible';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { useToggle } from '@/hooks/useToggle';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { KnowledgeProvider } from '@/providers/knowledge';\nimport { KnowledgeSettingDrawer } from '@/components/KnowledgeSettingDrawer';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nvar GRID = {\n  gutter: 16,\n  xs: 1,\n  sm: 2,\n  md: 4,\n  lg: 4,\n  xl: 4,\n  xxl: 6\n};\nvar SEARCH_FIELDS = [{\n  label: '名称',\n  field: 'title',\n  msg: '请输入知识库名称'\n}, {\n  label: '状态',\n  field: 'status',\n  children: __jsx(_Select, {\n    style: {\n      width: 180\n    }\n  }, [{\n    label: '已发布',\n    value: 'publish'\n  }, {\n    label: '草稿',\n    value: 'draft'\n  }].map(function (t) {\n    return __jsx(_Select.Option, {\n      key: t.label,\n      value: t.value\n    }, t.label);\n  }))\n}];\n\nvar Page = function Page() {\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      visible = _useToggle2[0],\n      toggleVisible = _useToggle2[1];\n\n  var _useState = useState(null),\n      selectedBook = _useState[0],\n      setSelectedBook = _useState[1];\n\n  var _usePagination = usePagination(KnowledgeProvider.getKnowledges),\n      getLoading = _usePagination.loading,\n      books = _usePagination.data,\n      refresh = _usePagination.refresh,\n      resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  var _useAsyncLoading = useAsyncLoading(KnowledgeProvider.updateKnowledge),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 1),\n      updateBookApi = _useAsyncLoading2[0];\n\n  var _useAsyncLoading3 = useAsyncLoading(KnowledgeProvider.deleteKnowledge),\n      _useAsyncLoading4 = _slicedToArray(_useAsyncLoading3, 1),\n      deleteKnowledgeApi = _useAsyncLoading4[0];\n\n  var editBook = useCallback(function (book) {\n    setSelectedBook(book);\n    toggleVisible();\n  }, [toggleVisible]);\n  var toggleBookStatus = useCallback(function (book) {\n    updateBookApi(book.id, {\n      status: book.status === 'draft' ? 'publish' : 'draft'\n    }).then(function () {\n      refresh();\n    });\n  }, [updateBookApi, refresh]);\n  var deleteBook = useCallback(function (book) {\n    deleteKnowledgeApi(book.id).then(function () {\n      refresh();\n    });\n  }, [deleteKnowledgeApi, refresh]);\n  useEffect(function () {\n    if (!visible && selectedBook) {\n      setSelectedBook(null);\n    }\n  }, [visible, selectedBook]);\n  var renderBook = useCallback(function (book) {\n    return __jsx(_List.Item, {\n      key: book.id\n    }, __jsx(_Card, {\n      loading: getLoading,\n      style: {\n        width: '100%'\n      },\n      cover: __jsx(\"img\", {\n        className: style.cover,\n        alt: book.title,\n        src: book.cover\n      }),\n      actions: [__jsx(Link, {\n        key: \"edit\",\n        href: \"/knowledge/editor/[id]\",\n        as: \"/knowledge/editor/\" + book.id\n      }, __jsx(\"a\", null, __jsx(EditOutlined, {\n        key: \"edit\"\n      }))), __jsx(_Tooltip, {\n        key: \"status\",\n        title: book.status === 'draft' ? '发布线上' : '设为草稿'\n      }, __jsx(LegacyIcon, {\n        onClick: function onClick() {\n          return toggleBookStatus(book);\n        },\n        type: book.status === 'draft' ? 'cloud-upload' : 'cloud-download'\n      })), __jsx(SettingOutlined, {\n        key: \"setting\",\n        onClick: function onClick() {\n          return editBook(book);\n        }\n      }), __jsx(_Popconfirm, {\n        key: \"delete\",\n        title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onConfirm: function onConfirm() {\n          return deleteBook(book);\n        }\n      }, __jsx(DeleteOutlined, {\n        key: \"setting\"\n      }))]\n    }, __jsx(_Card.Meta, {\n      title: book.title,\n      description: book.summary\n    })));\n  }, [getLoading, editBook, deleteBook, toggleBookStatus]);\n  return __jsx(AdminLayout, null, __jsx(PaginationTable, _extends({\n    loading: getLoading,\n    data: books\n  }, resetPagination, {\n    refresh: refresh,\n    searchFields: SEARCH_FIELDS,\n    rightNode: __jsx(_Button, {\n      type: \"primary\",\n      onClick: toggleVisible\n    }, __jsx(PlusOutlined, null), \"\\u65B0\\u5EFA\"),\n    customDataTable: function customDataTable(data) {\n      return __jsx(_List, {\n        className: style.imgs,\n        grid: GRID,\n        dataSource: data,\n        renderItem: renderBook\n      });\n    }\n  })), __jsx(KnowledgeSettingDrawer, {\n    visible: visible,\n    toggleVisible: toggleVisible,\n    book: selectedBook,\n    onOk: refresh\n  }));\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}