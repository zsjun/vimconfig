{"ast":null,"code":"import \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/typography/style\";\nimport _Typography from \"antd/lib/typography\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useCallback, useRef, useMemo } from 'react';\nimport Link from 'next/link';\nimport Viewer from 'viewerjs';\nimport { formatFileSize } from '@/utils';\nimport { copy } from '@/utils/copy';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { useSetting } from '@/hooks/useSetting';\nimport { PosterProvider } from '@/providers/poster';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { Upload } from '@/components/Upload';\nimport { useToggle } from '@/hooks/useToggle';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nconst {\n  Meta\n} = _Card;\nconst {\n  Paragraph\n} = _Typography;\nconst drawerFooterStyle = {\n  position: 'absolute',\n  bottom: 0,\n  width: '100%',\n  borderTop: '1px solid #e8e8e8',\n  padding: '10px 16px',\n  textAlign: 'right',\n  left: 0,\n  background: '#fff',\n  borderRadius: '0 0 4px 4px'\n};\n\nconst DescriptionItem = ({\n  title,\n  content\n}) => __jsx(\"div\", {\n  className: style.description\n}, __jsx(\"p\", null, title, \":\"), __jsx(Paragraph, {\n  ellipsis: true\n}, content));\n\nconst SEARCH_FIELDS = [{\n  label: '文件名称',\n  field: 'name',\n  msg: '请输入文件名称'\n}];\nconst GRID = {\n  gutter: 16,\n  xs: 1,\n  sm: 2,\n  md: 4,\n  lg: 4,\n  xl: 4,\n  xxl: 6\n};\nlet viewer = null;\n\nconst Poster = () => {\n  const ref = useRef();\n  const setting = useSetting();\n  const [visible, toggleVisible] = useToggle(false);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(null);\n\n  const _usePagination = usePagination(PosterProvider.getPosters),\n        {\n    loading,\n    data,\n    refresh\n  } = _usePagination,\n        resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  const [deleteApi, deleteLoading] = useAsyncLoading(PosterProvider.deletePoster);\n  const isOSSSettingFullFiled = useMemo(() => setting && setting.oss, [setting]);\n  const deleteAction = useCallback((ids, resetSelectedRows = null) => {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    return () => {\n      Promise.all(ids.map(id => deleteApi(id))).then(() => {\n        _message.success('操作成功');\n\n        resetSelectedRows && resetSelectedRows();\n        setCurrent(null);\n        toggleVisible();\n        refresh();\n      });\n    };\n  }, [deleteApi, toggleVisible, refresh]);\n  const renderList = useCallback(data => {\n    const onClick = item => () => {\n      setCurrent(item);\n      toggleVisible();\n      Promise.resolve().then(() => {\n        if (!viewer) {\n          viewer = new Viewer(ref.current, {\n            inline: false\n          });\n        } else {\n          viewer.update();\n        }\n      });\n    };\n\n    const renderItem = item => __jsx(_List.Item, {\n      key: item.id\n    }, __jsx(_Card, {\n      hoverable: true,\n      cover: __jsx(\"div\", {\n        className: style.preview\n      }, __jsx(\"img\", {\n        alt: item.name,\n        src: item.imgUrl\n      })),\n      onClick: onClick(item)\n    }, __jsx(Meta, {\n      title: item.name,\n      description: __jsx(React.Fragment, null, \"\\u4E0A\\u4F20\\u4E8E\", __jsx(LocaleTime, {\n        date: item.createAt\n      }))\n    })));\n\n    return __jsx(_List, {\n      className: style.imgs,\n      grid: GRID,\n      dataSource: data,\n      renderItem: renderItem\n    });\n  }, [toggleVisible]);\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: style.wrapper\n  }, !isOSSSettingFullFiled ? __jsx(\"div\", {\n    style: {\n      marginBottom: 24\n    }\n  }, __jsx(_Alert, {\n    message: __jsx(\"span\", null, \"\\u7CFB\\u7EDF\\u68C0\\u6D4B\\u5230\", __jsx(\"strong\", null, \"\\u963F\\u91CC\\u4E91OSS\\u914D\\u7F6E\"), \"\\u672A\\u5B8C\\u5584\\uFF0C\", __jsx(Link, {\n      href: \"/setting?type=OSS%20\\u8BBE\\u7F6E\"\n    }, __jsx(\"a\", null, \"\\u70B9\\u6211\\u7ACB\\u5373\\u5B8C\\u5584\"))),\n    type: \"warning\"\n  })) : __jsx(\"div\", {\n    style: {\n      marginBottom: 24\n    }\n  }, __jsx(Upload, {\n    onOK: refresh\n  })), __jsx(PaginationTable, _extends({\n    loading: loading,\n    data: data,\n    refresh: refresh\n  }, resetPagination, {\n    searchFields: SEARCH_FIELDS,\n    customDataTable: renderList\n  })), __jsx(_Drawer, {\n    width: 640,\n    placement: \"right\",\n    title: '文件信息',\n    closable: true,\n    onClose: toggleVisible,\n    visible: visible\n  }, __jsx(\"div\", {\n    ref: ref,\n    className: style.previewContainer\n  }, __jsx(\"img\", {\n    alt: current && current.name,\n    src: current && current.imgUrl\n  })), __jsx(_Row, null, __jsx(_Col, {\n    span: 24\n  }, __jsx(DescriptionItem, {\n    title: \"\\u6587\\u4EF6\\u540D\\u79F0\",\n    content: current && current.name\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    span: 12\n  }, __jsx(DescriptionItem, {\n    title: \"\\u5236\\u4F5C\\u9875\\u9762\",\n    content: current && current.pageUrl\n  })), __jsx(_Col, {\n    span: 12\n  }, __jsx(DescriptionItem, {\n    title: \"\\u6587\\u4EF6\\u5927\\u5C0F\",\n    content: formatFileSize(current && current.size || 0)\n  }))), __jsx(_Row, null, __jsx(_Col, {\n    span: 24\n  }, __jsx(DescriptionItem, {\n    title: \"\\u8BBF\\u95EE\\u94FE\\u63A5\",\n    content: __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: style.urlContainer,\n      onClick: () => {\n        copy(current && current.imgUrl);\n      }\n    }, current && current.imgUrl), __jsx(_Button, {\n      type: \"link\",\n      onClick: () => {\n        copy(current && current.imgUrl);\n      }\n    }, \"\\u590D\\u5236\"))\n  }))), __jsx(\"div\", {\n    style: drawerFooterStyle\n  }, __jsx(_Button, {\n    style: {\n      marginRight: 8\n    },\n    onClick: toggleVisible\n  }, \"\\u5173\\u95ED\"), __jsx(_Popconfirm, {\n    placement: \"topRight\",\n    title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u6587\\u4EF6\\uFF1F\",\n    onConfirm: deleteAction(current && current.id),\n    okText: \"\\u786E\\u8BA4\",\n    cancelText: \"\\u53D6\\u6D88\"\n  }, __jsx(_Button, {\n    danger: true,\n    loading: deleteLoading\n  }, \"\\u5220\\u9664\"))))));\n};\n\nexport default Poster;","map":null,"metadata":{},"sourceType":"module"}