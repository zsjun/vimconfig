{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nexport var SMTPProvider = /*#__PURE__*/function () {\n  function SMTPProvider() {\n    _classCallCheck(this, SMTPProvider);\n  }\n\n  _createClass(SMTPProvider, null, [{\n    key: \"testSendMail\",\n\n    /**\n     * 上传文件\n     * @param file\n     */\n    value: function () {\n      var _testSendMail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", httpProvider.post('/smtp', {\n                  to: user,\n                  subject: '测试',\n                  text: '测试邮件'\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function testSendMail(_x) {\n        return _testSendMail.apply(this, arguments);\n      }\n\n      return testSendMail;\n    }()\n  }]);\n\n  return SMTPProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}