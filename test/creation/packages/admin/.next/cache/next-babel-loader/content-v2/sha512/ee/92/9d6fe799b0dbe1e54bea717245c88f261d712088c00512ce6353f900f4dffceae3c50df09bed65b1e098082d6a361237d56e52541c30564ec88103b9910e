{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/divider/style\";\nimport _Divider from \"antd/lib/divider\";\nimport \"antd/lib/notification/style\";\nimport _notification from \"antd/lib/notification\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { CommentProvider } from '@/providers/comment';\nimport { SettingProvider } from '@/providers/setting';\nimport { useSetting } from '@/hooks/useSetting';\nimport style from './index.module.scss';\nexport var CommentAction = function CommentAction(_ref) {\n  var comment = _ref.comment,\n      refresh = _ref.refresh;\n  var setting = useSetting();\n\n  var _useState = useState(null),\n      replyContent = _useState[0],\n      setReplyContent = _useState[1];\n\n  var _useState2 = useState(false),\n      replyVisible = _useState2[0],\n      setReplyVisible = _useState2[1]; // 修改评论\n\n\n  var updateComment = useCallback(function (comment) {\n    var pass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    CommentProvider.updateComment(comment.id, {\n      pass: pass\n    }).then(function () {\n      _message.success(pass ? '评论已通过' : '评论已拒绝');\n\n      refresh();\n    });\n  }, [refresh]);\n  var reply = useCallback(function () {\n    if (!replyContent) {\n      return;\n    }\n\n    var userInfo = JSON.parse(window.localStorage.getItem('user'));\n    var email = userInfo && userInfo.mail || setting && setting.smtpFromUser;\n\n    var notify = function notify() {\n      _notification.error({\n        message: '回复评论失败',\n        description: '请前往系统设置完善 SMTP 设置，前往个人中心更新个人邮箱。'\n      });\n    };\n\n    var handle = function handle(email) {\n      var data = {\n        name: userInfo.name,\n        email: email,\n        content: replyContent,\n        parentCommentId: comment.parentCommentId || comment.id,\n        hostId: comment.hostId,\n        isHostInPage: comment.isHostInPage,\n        replyUserName: comment.name,\n        replyUserEmail: comment.email,\n        url: comment.url,\n        createByAdmin: true\n      };\n      CommentProvider.addComment(data).then(function () {\n        _message.success('回复成功');\n\n        setReplyContent('');\n        refresh();\n      })[\"catch\"](function () {\n        return notify();\n      });\n    };\n\n    if (!email) {\n      SettingProvider.getSetting().then(function (res) {\n        if (res && res.smtpFromUser) {\n          handle(res.smtpFromUser);\n        } else {\n          notify();\n        }\n\n        setReplyVisible(false);\n      })[\"catch\"](function () {\n        notify();\n        setReplyVisible(false);\n      });\n    } else {\n      handle(email);\n      setReplyVisible(false);\n    }\n  }, [replyContent, comment.email, comment.hostId, comment.id, comment.isHostInPage, comment.name, comment.parentCommentId, comment.url, refresh, setting]); // 删除评论\n\n  var deleteComment = useCallback(function (id) {\n    CommentProvider.deleteComment(id).then(function () {\n      _message.success('评论删除成功');\n\n      refresh();\n    });\n  }, [refresh]);\n  return __jsx(\"div\", null, __jsx(\"span\", {\n    className: style.action\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      return updateComment(comment, true);\n    }\n  }, \"\\u901A\\u8FC7\"), __jsx(_Divider, {\n    type: \"vertical\"\n  }), __jsx(\"a\", {\n    onClick: function onClick() {\n      return updateComment(comment, false);\n    }\n  }, \"\\u62D2\\u7EDD\"), __jsx(_Divider, {\n    type: \"vertical\"\n  }), __jsx(\"a\", {\n    onClick: function onClick() {\n      return setReplyVisible(true);\n    }\n  }, \"\\u56DE\\u590D\"), __jsx(_Divider, {\n    type: \"vertical\"\n  }), __jsx(_Popconfirm, {\n    title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u8BC4\\u8BBA\\uFF1F\",\n    onConfirm: function onConfirm() {\n      return deleteComment(comment.id);\n    },\n    okText: \"\\u786E\\u8BA4\",\n    cancelText: \"\\u53D6\\u6D88\"\n  }, __jsx(\"a\", null, \"\\u5220\\u9664\"))), __jsx(_Modal, {\n    title: '回复评论',\n    visible: replyVisible,\n    cancelText: '取消',\n    okText: '回复',\n    onOk: reply,\n    onCancel: function onCancel() {\n      return setReplyVisible(false);\n    },\n    transitionName: '',\n    maskTransitionName: ''\n  }, __jsx(_Input.TextArea, {\n    autoSize: {\n      minRows: 6,\n      maxRows: 10\n    },\n    placeholder: \"\\u652F\\u6301 Markdown\",\n    value: replyContent,\n    autoFocus: true,\n    onChange: function onChange(e) {\n      var val = e.target.value;\n      setReplyContent(val);\n    }\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}