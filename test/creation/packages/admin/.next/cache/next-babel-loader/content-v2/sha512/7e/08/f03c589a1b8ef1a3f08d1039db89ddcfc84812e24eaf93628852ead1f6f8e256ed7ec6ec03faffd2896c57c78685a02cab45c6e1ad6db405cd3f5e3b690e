{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { WarningOutlined } from '@ant-design/icons';\nimport { SettingProvider } from '@/providers/setting';\nimport { JsonEditor } from '@/components/JsonEditor';\nimport { useForceUpdate } from '@/hooks/useForceUpdate';\nexport var LocaleSetting = function LocaleSetting(_ref) {\n  var setting = _ref.setting;\n  var forceUpdate = useForceUpdate();\n\n  var _useState = useState({}),\n      i18n = _useState[0],\n      setI18n = _useState[1];\n\n  var locales = i18n && typeof i18n === 'object' ? Object.keys(i18n) : [];\n  useEffect(function () {\n    try {\n      if (setting.i18n) {\n        var json = JSON.parse(setting.i18n);\n        setI18n(json);\n      }\n    } catch (e) {\n      setI18n({});\n    }\n  }, [setting.i18n]);\n  var onEdit = useCallback(function (key, action) {\n    var add = function add() {\n      var locale = '';\n\n      var onChange = function onChange(e) {\n        locale = e.target.value;\n      };\n\n      _Modal.confirm({\n        title: '请输入语言名称（英文）',\n        // eslint-disable-next-line react/jsx-no-bind\n        icon: __jsx(_Input, {\n          onChange: onChange\n        }),\n        onOk: function onOk() {\n          setI18n(function (json) {\n            json[locale] = {};\n            return json;\n          });\n          forceUpdate();\n        },\n        okText: '确认',\n        cancelText: '取消',\n        transitionName: '',\n        maskTransitionName: ''\n      });\n    };\n\n    var remove = function remove() {\n      _Modal.confirm({\n        title: '确认删除',\n        icon: __jsx(WarningOutlined, null),\n        onOk: function onOk() {\n          setI18n(function (json) {\n            delete json[key];\n            return json;\n          });\n          forceUpdate();\n        },\n        okText: '确认',\n        cancelText: '取消',\n        transitionName: '',\n        maskTransitionName: ''\n      });\n    };\n\n    if (action === 'add') {\n      add();\n    } else {\n      remove();\n    }\n  }, [forceUpdate]);\n  var onChange = useCallback(function (locale) {\n    return function (value) {\n      setI18n(function (json) {\n        json[locale] = value;\n        return json;\n      });\n    };\n  }, []);\n  var save = useCallback(function () {\n    var data = {\n      i18n: JSON.stringify(i18n)\n    };\n    SettingProvider.updateSetting(data).then(function () {\n      _message.success('保存成功');\n    });\n  }, [i18n]);\n  return __jsx(\"div\", null, __jsx(_Tabs, {\n    type: \"editable-card\",\n    onEdit: onEdit\n  }, locales.map(function (locale) {\n    return __jsx(_Tabs.TabPane, {\n      tab: locale,\n      key: locale\n    }, __jsx(JsonEditor, {\n      value: JSON.stringify(i18n[locale], null, 2),\n      onChange: onChange(locale)\n    }));\n  })), __jsx(_Button, {\n    type: \"primary\",\n    onClick: save\n  }, \"\\u4FDD\\u5B58\"));\n};","map":null,"metadata":{},"sourceType":"module"}