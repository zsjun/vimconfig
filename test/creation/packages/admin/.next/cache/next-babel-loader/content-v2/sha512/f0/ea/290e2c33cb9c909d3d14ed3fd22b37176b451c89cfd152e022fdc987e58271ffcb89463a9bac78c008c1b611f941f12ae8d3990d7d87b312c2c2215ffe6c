{"ast":null,"code":"import { useState, useCallback, useEffect, useRef } from 'react';\nexport function useAsyncLoading(action, wait = 200) {\n  const timerRef = useRef(null);\n  const {\n    0: pending,\n    1: setPending\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const actionWithPending = useCallback((...args) => {\n    setPending(true);\n    const promise = action(...args);\n    promise.then(() => setPending(false), () => setPending(false));\n    return promise;\n  }, [action]);\n  useEffect(() => {\n    clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(() => {\n      setLoading(pending);\n    }, wait);\n    return () => {\n      clearTimeout(timerRef.current);\n    };\n  }, [wait, pending]);\n  return [actionWithPending, loading];\n}","map":null,"metadata":{},"sourceType":"module"}