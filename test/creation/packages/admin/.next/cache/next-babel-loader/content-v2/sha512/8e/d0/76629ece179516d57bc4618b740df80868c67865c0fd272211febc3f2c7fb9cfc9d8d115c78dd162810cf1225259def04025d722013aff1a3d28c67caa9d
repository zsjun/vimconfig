{"ast":null,"code":"import _extends from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { CommentProvider } from '@/providers/comment';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { CommentArticle } from '@/components/comment/CommentArticle';\nimport { CommentAction } from '@/components/comment/CommentAction';\nimport { CommentContent } from '@/components/comment/CommentContent';\nimport { CommentHTML } from '@/components/comment/CommentHTML';\nimport { CommentStatus } from '@/components/comment/CommentStatus';\nvar updateLoadingMessage = null;\nvar SCROLL = {\n  x: 1440\n};\nvar SEARCH_FIELDS = [{\n  label: '称呼',\n  field: 'name',\n  msg: '请输入称呼'\n}, {\n  label: 'Email',\n  field: 'email',\n  msg: '请输入联系方式'\n}, {\n  label: '状态',\n  field: 'pass',\n  children: __jsx(_Select, {\n    style: {\n      width: 180\n    }\n  }, [{\n    label: '已通过',\n    value: 1\n  }, {\n    label: '未通过',\n    value: 0\n  }].map(function (t) {\n    return __jsx(_Select.Option, {\n      key: t.label,\n      value: t.value\n    }, t.label);\n  }))\n}];\nvar COMMON_COLUMNS = [{\n  title: '状态',\n  dataIndex: 'pass',\n  key: 'pass',\n  fixed: 'left',\n  width: 100,\n  render: function render(_, record) {\n    return __jsx(CommentStatus, {\n      comment: record\n    });\n  }\n}, {\n  title: '称呼',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '联系方式',\n  dataIndex: 'email',\n  key: 'email'\n}, {\n  title: '原始内容',\n  dataIndex: 'content',\n  key: 'content',\n  width: 160,\n  render: function render(_, record) {\n    return __jsx(CommentContent, {\n      comment: record\n    });\n  }\n}, {\n  title: 'HTML 内容',\n  dataIndex: 'html',\n  key: 'html',\n  width: 160,\n  render: function render(_, record) {\n    return __jsx(CommentHTML, {\n      comment: record\n    });\n  }\n}, {\n  title: '管理文章',\n  dataIndex: 'url',\n  key: 'url',\n  width: 100,\n  render: function render(_, record) {\n    return __jsx(CommentArticle, {\n      comment: record\n    });\n  }\n}, {\n  title: '创建时间',\n  dataIndex: 'createAt',\n  key: 'createAt',\n  width: 200,\n  render: function render(date) {\n    return __jsx(LocaleTime, {\n      date: date\n    });\n  }\n}];\n\nvar Comment = function Comment() {\n  var _usePagination = usePagination(CommentProvider.getComments),\n      loading = _usePagination.loading,\n      comments = _usePagination.data,\n      _refresh = _usePagination.refresh,\n      resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  var _useAsyncLoading = useAsyncLoading(CommentProvider.updateComment),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 2),\n      updateApi = _useAsyncLoading2[0],\n      updateLoading = _useAsyncLoading2[1];\n\n  var _useAsyncLoading3 = useAsyncLoading(CommentProvider.deleteComment),\n      _useAsyncLoading4 = _slicedToArray(_useAsyncLoading3, 2),\n      deleteApi = _useAsyncLoading4[0],\n      deleteLoading = _useAsyncLoading4[1];\n\n  var updateAction = useCallback(function (articles, key) {\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (!Array.isArray(articles)) {\n      articles = [articles];\n    }\n\n    return function () {\n      return Promise.all(articles.map(function (article) {\n        return updateApi(article.id, _defineProperty({}, key, value !== null ? value : !article[key]));\n      })).then(function () {\n        _message.success('操作成功');\n\n        _refresh();\n      });\n    };\n  }, [updateApi, _refresh]);\n  var deleteAction = useCallback(function (ids) {\n    var resetSelectedRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    return function () {\n      Promise.all(ids.map(function (id) {\n        return deleteApi(id);\n      })).then(function () {\n        _message.success('操作成功');\n\n        resetSelectedRows && resetSelectedRows();\n\n        _refresh();\n      });\n    };\n  }, [deleteApi, _refresh]);\n  var parentCommentColumn = useMemo(function () {\n    return {\n      title: '父级评论',\n      dataIndex: 'parentCommentId',\n      key: 'parentCommentId',\n      width: 100,\n      render: function render(id) {\n        var target = comments.find(function (c) {\n          return c.id === id;\n        });\n        return target && target.name || '无';\n      }\n    };\n  }, [comments]);\n  var actionColumn = useCallback(function (resetSelectedRows) {\n    return {\n      title: '操作',\n      key: 'action',\n      fixed: 'right',\n      render: function render(_, record) {\n        return __jsx(CommentAction, {\n          comment: record,\n          refresh: function refresh() {\n            resetSelectedRows();\n\n            _refresh();\n          }\n        });\n      }\n    };\n  }, [_refresh]);\n  useEffect(function () {\n    if (updateLoading) {\n      updateLoadingMessage = _message.loading('操作中...', 0);\n    } else {\n      updateLoadingMessage && updateLoadingMessage();\n    }\n  }, [updateLoading]);\n  return __jsx(AdminLayout, null, __jsx(PaginationTable, _extends({\n    showSelection: true,\n    loading: loading,\n    data: comments,\n    columns: function columns(resetSelectedRows) {\n      return [].concat(COMMON_COLUMNS, [parentCommentColumn, actionColumn(resetSelectedRows)]);\n    },\n    refresh: _refresh\n  }, resetPagination, {\n    renderLeftNode: function renderLeftNode(_ref) {\n      var hasSelected = _ref.hasSelected,\n          selectedRowKeys = _ref.selectedRowKeys,\n          selectedRows = _ref.selectedRows,\n          resetSelectedRows = _ref.resetSelectedRows;\n      return hasSelected ? __jsx(React.Fragment, null, __jsx(_Button, {\n        disabled: !hasSelected,\n        style: {\n          marginRight: 8\n        },\n        onClick: updateAction(selectedRows, 'pass', true)\n      }, \"\\u901A\\u8FC7\"), __jsx(_Button, {\n        disabled: !hasSelected,\n        style: {\n          marginRight: 8\n        },\n        onClick: updateAction(selectedRows, 'status', false)\n      }, \"\\u62D2\\u7EDD\"), __jsx(_Popconfirm, {\n        title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n        onConfirm: deleteAction(selectedRowKeys, resetSelectedRows),\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\"\n      }, __jsx(_Button, {\n        disabled: !hasSelected,\n        loading: deleteLoading,\n        danger: true\n      }, \"\\u5220\\u9664\"))) : null;\n    },\n    scroll: SCROLL,\n    searchFields: SEARCH_FIELDS\n  })));\n};\n\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}