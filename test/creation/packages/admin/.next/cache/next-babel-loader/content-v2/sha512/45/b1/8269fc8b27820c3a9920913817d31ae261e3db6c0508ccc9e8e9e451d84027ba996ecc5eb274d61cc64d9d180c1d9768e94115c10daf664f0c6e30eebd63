{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nexport var FileProvider = /*#__PURE__*/function () {\n  function FileProvider() {\n    _classCallCheck(this, FileProvider);\n  }\n\n  _createClass(FileProvider, null, [{\n    key: \"uploadFile\",\n\n    /**\n     * 上传文件\n     * @param file\n     */\n    value: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n        var unique,\n            formData,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                unique = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n                formData = new FormData();\n                formData.append('file', file);\n                return _context.abrupt(\"return\", httpProvider.post('/file/upload?unique=' + unique, formData, {\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  }\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function uploadFile(_x) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n    /**\n     * 获取指定文件\n     */\n\n  }, {\n    key: \"getFiles\",\n    value: function () {\n      var _getFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", httpProvider.get('/file', {\n                  params: params\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getFiles(_x2) {\n        return _getFiles.apply(this, arguments);\n      }\n\n      return getFiles;\n    }()\n    /**\n     * 删除文件\n     * @param id\n     */\n\n  }, {\n    key: \"deleteFile\",\n    value: function () {\n      var _deleteFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", httpProvider[\"delete\"](\"/file/\".concat(id)));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function deleteFile(_x3) {\n        return _deleteFile.apply(this, arguments);\n      }\n\n      return deleteFile;\n    }()\n  }]);\n\n  return FileProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}