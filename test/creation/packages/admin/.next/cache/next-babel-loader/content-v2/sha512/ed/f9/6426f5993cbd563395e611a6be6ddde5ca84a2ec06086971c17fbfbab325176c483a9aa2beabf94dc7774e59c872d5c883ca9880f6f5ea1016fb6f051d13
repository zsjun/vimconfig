{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { Form } from '@ant-design/compatible';\nimport cls from 'classnames';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { TagProvider } from '@/providers/tag';\nimport style from './index.module.scss';\n\nvar TagPage = function TagPage(_ref) {\n  var _ref$tags = _ref.tags,\n      defaultTags = _ref$tags === void 0 ? [] : _ref$tags;\n\n  var _useState = useState(defaultTags),\n      tags = _useState[0],\n      setTags = _useState[1];\n\n  var _useState2 = useState('create'),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentTag = _useState3[0],\n      setCurrentTag = _useState3[1];\n\n  var _useState4 = useState(null),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(null),\n      value = _useState5[0],\n      setValue = _useState5[1];\n\n  var isCreateMode = useMemo(function () {\n    return mode === 'create';\n  }, [mode]);\n  var getTags = useCallback(function () {\n    TagProvider.getTags().then(function (tags) {\n      setTags(tags);\n    });\n  }, []);\n  var reset = useCallback(function () {\n    setMode('create');\n    setCurrentTag(null);\n    setLabel(null);\n    setValue(null);\n  }, []);\n  var addTag = useCallback(function (data) {\n    if (!data || !data.label) {\n      return;\n    }\n\n    TagProvider.addTag(data).then(function () {\n      _message.success('添加标签成功');\n\n      reset();\n      getTags();\n    });\n  }, [reset, getTags]);\n  var updateTag = useCallback(function (id, data) {\n    if (!data || !data.label) {\n      return;\n    }\n\n    TagProvider.updateTag(id, data).then(function () {\n      _message.success('更新标签成功');\n\n      reset();\n      getTags();\n    });\n  }, [reset, getTags]);\n  var deleteTag = useCallback(function (id) {\n    TagProvider.deleteTag(id).then(function () {\n      _message.success('删除标签成功');\n\n      reset();\n      getTags();\n    });\n  }, [reset, getTags]);\n  return __jsx(AdminLayout, null, __jsx(_Row, {\n    gutter: 16,\n    className: style.wrapper\n  }, __jsx(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 9\n  }, __jsx(_Card, {\n    title: isCreateMode ? '添加标签' : '管理标签',\n    bordered: true\n  }, __jsx(Form.Item, null, __jsx(_Input, {\n    value: label,\n    placeholder: '输入标签名称',\n    onChange: function onChange(e) {\n      setLabel(e.target.value);\n    }\n  })), __jsx(Form.Item, null, __jsx(_Input, {\n    value: value,\n    placeholder: '输入标签值（请输入英文，作为路由使用）',\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: cls(style.btns, isCreateMode ? false : style.isEdit)\n  }, isCreateMode ? __jsx(_Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return addTag({\n        label: label,\n        value: value\n      });\n    }\n  }, \"\\u4FDD\\u5B58\") : __jsx(React.Fragment, null, __jsx(_Button.Group, null, __jsx(_Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return updateTag(currentTag.id, {\n        label: label,\n        value: value\n      });\n    }\n  }, \"\\u66F4\\u65B0\"), __jsx(_Button, {\n    type: \"dashed\",\n    onClick: function onClick() {\n      return reset();\n    }\n  }, \"\\u8FD4\\u56DE\\u6DFB\\u52A0\")), __jsx(_Popconfirm, {\n    title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u6807\\u7B7E\\uFF1F\",\n    onConfirm: function onConfirm() {\n      return deleteTag(currentTag.id);\n    },\n    okText: \"\\u786E\\u8BA4\",\n    cancelText: \"\\u53D6\\u6D88\"\n  }, __jsx(_Button, {\n    danger: true\n  }, \"\\u5220\\u9664\")))))), __jsx(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 15\n  }, __jsx(_Card, {\n    title: \"\\u6240\\u6709\\u6807\\u7B7E\",\n    bordered: true\n  }, __jsx(\"ul\", {\n    className: style.list\n  }, tags.map(function (d) {\n    return __jsx(\"li\", {\n      key: d.id,\n      className: cls(style.item),\n      onClick: function onClick() {\n        setMode('edit');\n        setCurrentTag(d);\n        setLabel(d.label);\n        setValue(d.value);\n      }\n    }, __jsx(\"a\", {\n      key: d.id,\n      className: style.tag\n    }, __jsx(\"span\", null, d.label)));\n  }))))));\n};\n\nTagPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var tags;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return TagProvider.getTags();\n\n        case 2:\n          tags = _context.sent;\n          return _context.abrupt(\"return\", {\n            tags: tags\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default TagPage;","map":null,"metadata":{},"sourceType":"module"}