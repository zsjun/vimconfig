{"ast":null,"code":"import { useState, useCallback, useEffect, useRef } from 'react';\nexport function useAsyncLoading(action) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n  var timerRef = useRef(null);\n\n  var _useState = useState(false),\n      pending = _useState[0],\n      setPending = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var actionWithPending = useCallback(function () {\n    setPending(true);\n    var promise = action.apply(void 0, arguments);\n    promise.then(function () {\n      return setPending(false);\n    }, function () {\n      return setPending(false);\n    });\n    return promise;\n  }, [action]);\n  useEffect(function () {\n    clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(function () {\n      setLoading(pending);\n    }, wait);\n    return function () {\n      clearTimeout(timerRef.current);\n    };\n  }, [wait, pending]);\n  return [actionWithPending, loading];\n}","map":null,"metadata":{},"sourceType":"module"}