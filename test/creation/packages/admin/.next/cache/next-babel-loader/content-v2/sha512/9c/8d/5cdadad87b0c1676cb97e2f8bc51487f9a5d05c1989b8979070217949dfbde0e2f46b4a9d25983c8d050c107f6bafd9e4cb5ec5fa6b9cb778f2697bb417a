{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { httpProvider } from './http';\nimport * as Showdown from 'showdown';\nvar converter = new Showdown.Converter({\n  tables: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tasklists: true,\n  emoji: true\n});\nexport var PageProvider = /*#__PURE__*/function () {\n  function PageProvider() {\n    _classCallCheck(this, PageProvider);\n  }\n\n  _createClass(PageProvider, null, [{\n    key: \"getPages\",\n\n    /**\n     * 获取所有页面\n     */\n    value: function () {\n      var _getPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", httpProvider.get('/page', {\n                  params: params\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getPages(_x) {\n        return _getPages.apply(this, arguments);\n      }\n\n      return getPages;\n    }()\n    /**\n     * 获取所有已发布页面\n     */\n\n  }, {\n    key: \"getAllPublisedPages\",\n    value: function () {\n      var _getAllPublisedPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", httpProvider.get('/page', {\n                  params: {\n                    status: 'publish'\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAllPublisedPages() {\n        return _getAllPublisedPages.apply(this, arguments);\n      }\n\n      return getAllPublisedPages;\n    }()\n    /**\n     * 获取指定页面\n     * @param id\n     */\n\n  }, {\n    key: \"getPage\",\n    value: function () {\n      var _getPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", httpProvider.get(\"/page/\".concat(id)));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPage(_x2) {\n        return _getPage.apply(this, arguments);\n      }\n\n      return getPage;\n    }()\n    /**\n     * 新建页面\n     * @param data\n     */\n\n  }, {\n    key: \"addPage\",\n    value: function () {\n      var _addPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data.html = converter.makeHtml(data.content);\n                return _context4.abrupt(\"return\", httpProvider.post('/page', data));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function addPage(_x3) {\n        return _addPage.apply(this, arguments);\n      }\n\n      return addPage;\n    }()\n    /**\n     * 更新页面\n     * @param id\n     * @param data\n     */\n\n  }, {\n    key: \"updatePage\",\n    value: function () {\n      var _updatePage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, data) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data.html = converter.makeHtml(data.content);\n                return _context5.abrupt(\"return\", httpProvider.patch(\"/page/\".concat(id), data));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updatePage(_x4, _x5) {\n        return _updatePage.apply(this, arguments);\n      }\n\n      return updatePage;\n    }()\n    /**\n     * 更新文章阅读量\n     * @param id\n     * @param data\n     */\n\n  }, {\n    key: \"updatePageViews\",\n    value: function () {\n      var _updatePageViews = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", httpProvider.post(\"/page/\".concat(id, \"/views\")));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function updatePageViews(_x6) {\n        return _updatePageViews.apply(this, arguments);\n      }\n\n      return updatePageViews;\n    }()\n    /**\n     * 删除页面\n     * @param id\n     */\n\n  }, {\n    key: \"deletePage\",\n    value: function () {\n      var _deletePage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", httpProvider[\"delete\"](\"/page/\".concat(id)));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function deletePage(_x7) {\n        return _deletePage.apply(this, arguments);\n      }\n\n      return deletePage;\n    }()\n  }]);\n\n  return PageProvider;\n}();","map":null,"metadata":{},"sourceType":"module"}