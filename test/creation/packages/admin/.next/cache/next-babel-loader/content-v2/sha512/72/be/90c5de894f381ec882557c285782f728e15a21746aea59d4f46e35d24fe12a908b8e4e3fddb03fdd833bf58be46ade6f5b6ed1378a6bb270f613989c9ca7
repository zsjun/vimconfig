{"ast":null,"code":"import _extends from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _slicedToArray from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { SearchProvider } from '@/providers/search';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nvar COMMON_COLUMNS = [{\n  title: '搜索词',\n  dataIndex: 'keyword',\n  key: 'keyword'\n}, {\n  title: '搜索量',\n  dataIndex: 'count',\n  key: 'count',\n  render: function render(views) {\n    return __jsx(_Badge, {\n      count: views,\n      showZero: true,\n      overflowCount: Infinity,\n      style: {\n        backgroundColor: '#52c41a'\n      }\n    });\n  }\n}, {\n  title: '搜索时间',\n  dataIndex: 'createAt',\n  key: 'createAt',\n  render: function render(date) {\n    return __jsx(LocaleTime, {\n      date: date\n    });\n  }\n}];\nvar SEARCH_FIELDS = [{\n  label: '类型',\n  field: 'type',\n  msg: '请输入搜索类型'\n}, {\n  label: '搜索词',\n  field: 'keyword',\n  msg: '请输入搜索词'\n}, {\n  label: '搜索量',\n  field: 'count',\n  msg: '请输入搜索量'\n}];\n\nvar Search = function Search() {\n  var _usePagination = usePagination(SearchProvider.getRecords),\n      loading = _usePagination.loading,\n      data = _usePagination.data,\n      refresh = _usePagination.refresh,\n      resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  var _useAsyncLoading = useAsyncLoading(SearchProvider.deleteRecord),\n      _useAsyncLoading2 = _slicedToArray(_useAsyncLoading, 2),\n      deleteApi = _useAsyncLoading2[0],\n      deleteLoading = _useAsyncLoading2[1];\n\n  var deleteAction = useCallback(function (ids) {\n    var resetSelectedRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    return function () {\n      Promise.all(ids.map(function (id) {\n        return deleteApi(id);\n      })).then(function () {\n        _message.success('操作成功');\n\n        resetSelectedRows && resetSelectedRows();\n        refresh();\n      });\n    };\n  }, [deleteApi, refresh]);\n\n  var actionColumn = function actionColumn(resetSelectedRows) {\n    return {\n      title: '操作',\n      key: 'action',\n      render: function render(_, record) {\n        return __jsx(\"span\", {\n          className: style.action\n        }, __jsx(_Popconfirm, {\n          title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u641C\\u7D22\\u8BB0\\u5F55\\uFF1F\",\n          onConfirm: deleteAction(record.id, resetSelectedRows),\n          okText: \"\\u786E\\u8BA4\",\n          cancelText: \"\\u53D6\\u6D88\"\n        }, __jsx(\"a\", null, \"\\u5220\\u9664\")));\n      }\n    };\n  };\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: style.wrapper\n  }, __jsx(PaginationTable, _extends({\n    showSelection: true,\n    loading: loading,\n    data: data,\n    columns: function columns(resetSelectedRows) {\n      return [].concat(COMMON_COLUMNS, [actionColumn(resetSelectedRows)]);\n    },\n    refresh: refresh\n  }, resetPagination, {\n    renderLeftNode: function renderLeftNode(_ref) {\n      var hasSelected = _ref.hasSelected,\n          selectedRowKeys = _ref.selectedRowKeys,\n          resetSelectedRows = _ref.resetSelectedRows;\n      return hasSelected ? __jsx(_Popconfirm, {\n        title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n        onConfirm: deleteAction(selectedRowKeys, resetSelectedRows),\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\"\n      }, __jsx(_Button, {\n        disabled: !hasSelected,\n        loading: deleteLoading,\n        danger: true\n      }, \"\\u5220\\u9664\")) : null;\n    },\n    searchFields: SEARCH_FIELDS\n  }))));\n};\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}