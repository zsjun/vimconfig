{"ast":null,"code":"var subjects = new Map();\nvar ignore = {};\nexport var subjectScrollListener = function subjectScrollListener(self, target, callback) {\n  var fns = subjects.get(target) || [];\n  fns.push(function (arg) {\n    callback(arg);\n    ignore[self] = true;\n  });\n  subjects.set(target, fns);\n};\nexport var removeScrollListener = function removeScrollListener(target, callback) {\n  var fns = subjects.get(target);\n\n  if (fns && fns.length) {\n    var idx = fns.indexOf(callback);\n\n    if (idx > -1) {\n      fns.splice(idx, 1);\n    } else {\n      subjects.set(target, []);\n    }\n  }\n};\nexport var registerScollListener = function registerScollListener(self, callback) {\n  return function () {\n    var tmp = ignore[self];\n    ignore[self] = false;\n\n    if (tmp) {\n      return;\n    }\n\n    var value = callback.apply(void 0, arguments);\n    var subjectFns = subjects.get(self) || [];\n    subjectFns.forEach(function (fn) {\n      fn(value);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}