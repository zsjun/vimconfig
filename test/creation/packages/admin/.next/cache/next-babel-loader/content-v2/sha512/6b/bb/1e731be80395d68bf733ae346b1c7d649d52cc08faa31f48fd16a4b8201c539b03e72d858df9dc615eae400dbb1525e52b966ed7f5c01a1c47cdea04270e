{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport hljs from 'highlight.js';\nimport { copy } from '@/utils/copy';\nimport './index.module.scss';\nexport var MarkdownReader = function MarkdownReader(_ref) {\n  var content = _ref.content;\n  var ref = useRef();\n  useEffect(function () {\n    if (!content) {\n      return;\n    }\n\n    var el = ref.current;\n    var range = document.createRange();\n    var slot = range.createContextualFragment(content);\n    el.innerHTML = '';\n    el.appendChild(slot);\n  }, [content]); // 高亮\n\n  useEffect(function () {\n    if (!ref.current) {\n      return;\n    }\n\n    var callbacks = [];\n    setTimeout(function () {\n      var blocks = ref.current.querySelectorAll('pre code');\n      blocks.forEach(function (block) {\n        var span = document.createElement('span');\n        span.classList.add('copy-code-btn');\n        span.innerText = '复制';\n\n        span.onclick = function () {\n          return copy(block.innerText);\n        };\n\n        block.parentNode.insertBefore(span, block);\n        callbacks.push(function () {\n          block.parentNode.removeChild(span);\n        });\n        hljs.highlightBlock(block);\n      });\n    }, 0); // eslint-disable-next-line consistent-return\n\n    return function () {\n      callbacks.forEach(function (cb) {\n        return cb();\n      });\n    };\n  }, [content]);\n  return __jsx(\"div\", {\n    ref: ref,\n    className: 'markdown'\n  });\n};","map":null,"metadata":{},"sourceType":"module"}