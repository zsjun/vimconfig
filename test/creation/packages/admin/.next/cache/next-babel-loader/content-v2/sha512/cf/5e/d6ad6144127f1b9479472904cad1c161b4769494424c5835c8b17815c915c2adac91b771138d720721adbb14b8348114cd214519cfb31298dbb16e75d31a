{"ast":null,"code":"const subjects = new Map();\nconst ignore = {};\nexport const subjectScrollListener = (self, target, callback) => {\n  const fns = subjects.get(target) || [];\n  fns.push(arg => {\n    callback(arg);\n    ignore[self] = true;\n  });\n  subjects.set(target, fns);\n};\nexport const removeScrollListener = (target, callback) => {\n  const fns = subjects.get(target);\n\n  if (fns && fns.length) {\n    const idx = fns.indexOf(callback);\n\n    if (idx > -1) {\n      fns.splice(idx, 1);\n    } else {\n      subjects.set(target, []);\n    }\n  }\n};\nexport const registerScollListener = (self, callback) => {\n  return (...args) => {\n    const tmp = ignore[self];\n    ignore[self] = false;\n\n    if (tmp) {\n      return;\n    }\n\n    const value = callback(...args);\n    const subjectFns = subjects.get(self) || [];\n    subjectFns.forEach(fn => {\n      fn(value);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}