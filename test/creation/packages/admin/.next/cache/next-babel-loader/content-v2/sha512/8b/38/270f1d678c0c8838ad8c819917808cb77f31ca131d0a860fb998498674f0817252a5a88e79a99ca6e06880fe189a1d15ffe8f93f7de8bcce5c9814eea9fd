{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport _extends from \"/Users/zsj/work/vimconfig/test/creation/packages/admin/node_modules/@babel/runtime/helpers/esm/extends\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Pagination } from '@/components/Pagination';\nimport { Search } from '@/components/Search';\nimport style from './index.module.scss'; // eslint-disable-next-line @typescript-eslint/ban-types\n\nvar rowKey = 'id';\nexport var PaginationTable = function PaginationTable(_ref) {\n  var loading = _ref.loading,\n      data = _ref.data,\n      total = _ref.total,\n      page = _ref.page,\n      pageSize = _ref.pageSize,\n      setPage = _ref.setPage,\n      setPageSize = _ref.setPageSize,\n      setParams = _ref.setParams,\n      refresh = _ref.refresh,\n      title = _ref.title,\n      _ref$showSelection = _ref.showSelection,\n      showSelection = _ref$showSelection === void 0 ? false : _ref$showSelection,\n      renderLeftNode = _ref.renderLeftNode,\n      rightNode = _ref.rightNode,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === void 0 ? '24px 12px' : _ref$padding,\n      _ref$scroll = _ref.scroll,\n      scroll = _ref$scroll === void 0 ? null : _ref$scroll,\n      _ref$searchFields = _ref.searchFields,\n      searchFields = _ref$searchFields === void 0 ? [] : _ref$searchFields,\n      _ref$showSearchLabel = _ref.showSearchLabel,\n      showSearchLabel = _ref$showSearchLabel === void 0 ? true : _ref$showSearchLabel,\n      _ref$columns = _ref.columns,\n      columns = _ref$columns === void 0 ? [] : _ref$columns,\n      _ref$customDataTable = _ref.customDataTable,\n      customDataTable = _ref$customDataTable === void 0 ? null : _ref$customDataTable;\n\n  var _useState = useState([]),\n      selectedRowKeys = _useState[0],\n      setSelectedRowKeys = _useState[1];\n\n  var hasSelected = selectedRowKeys.length > 0;\n  var rowSelection = {\n    selectedRowKeys: selectedRowKeys,\n    onChange: setSelectedRowKeys\n  };\n\n  var resetSelectedRows = function resetSelectedRows() {\n    setSelectedRowKeys([]);\n  };\n\n  var leftNode = renderLeftNode && renderLeftNode({\n    hasSelected: hasSelected,\n    selectedRowKeys: selectedRowKeys,\n    selectedRows: selectedRowKeys.map(function (id) {\n      return data.find(function (item) {\n        return item[rowKey] === id;\n      });\n    }),\n    resetSelectedRows: resetSelectedRows\n  });\n  return __jsx(\"div\", {\n    className: style.wrapper\n  }, __jsx(Search, {\n    fields: searchFields,\n    showLabel: showSearchLabel,\n    padding: padding,\n    onSearch: function onSearch(params) {\n      setPage(1);\n      setParams(params);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      background: '#fff',\n      padding: padding\n    }\n  }, customDataTable ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.tableHeader\n  }, __jsx(\"div\", null, title, leftNode), __jsx(\"div\", null, rightNode)), __jsx(_Spin, {\n    spinning: loading\n  }, customDataTable(data))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.tableHeader\n  }, __jsx(\"div\", null, title, leftNode), __jsx(\"div\", null, rightNode, __jsx(_Tooltip, {\n    title: \"\\u5237\\u65B0\"\n  }, __jsx(ReloadOutlined, {\n    onClick: refresh,\n    style: {\n      marginLeft: 12\n    }\n  })))), __jsx(_Table, _extends({\n    loading: loading,\n    columns: typeof columns === 'function' ? columns(resetSelectedRows) : columns,\n    dataSource: data,\n    rowKey: rowKey,\n    pagination: false\n  }, scroll ? {\n    scroll: scroll\n  } : {}, showSelection ? {\n    rowSelection: rowSelection\n  } : {}))), __jsx(Pagination, {\n    page: page,\n    pageSize: pageSize,\n    total: total,\n    onChange: function onChange(page, pageSize) {\n      setPage(page);\n      setPageSize(pageSize);\n    }\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}