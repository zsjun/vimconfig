{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/badge/style\";\nimport _Badge from \"antd/lib/badge\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useCallback } from 'react';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { ViewProvider } from '@/providers/view';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nconst SCROLL = {\n  x: 1440\n};\nconst COMMON_COLUMNS = [{\n  title: 'URL',\n  dataIndex: 'url',\n  key: 'url',\n  width: 200,\n  fixed: 'left',\n  render: url => __jsx(\"a\", {\n    className: style.link,\n    href: url,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, url)\n}, {\n  title: 'IP',\n  dataIndex: 'ip',\n  key: 'ip',\n  width: 160\n}, {\n  title: '浏览器',\n  dataIndex: 'browser',\n  key: 'browser'\n}, {\n  title: '内核',\n  dataIndex: 'engine',\n  key: 'engine'\n}, {\n  title: '操作系统',\n  dataIndex: 'os',\n  key: 'os'\n}, {\n  title: '设备',\n  dataIndex: 'device',\n  key: 'device'\n}, {\n  title: '地址',\n  dataIndex: 'address',\n  key: 'address',\n  render: address => {\n    return address || '-';\n  }\n}, {\n  title: '访问量',\n  dataIndex: 'count',\n  key: 'count',\n  width: 120,\n  render: views => __jsx(_Badge, {\n    count: views,\n    showZero: true,\n    overflowCount: Infinity,\n    style: {\n      backgroundColor: '#52c41a'\n    }\n  })\n}, {\n  title: '访问时间',\n  dataIndex: 'createAt',\n  key: 'createAt',\n  width: 200,\n  render: date => __jsx(LocaleTime, {\n    date: date\n  })\n}];\nconst SEARCH_FIELDS = [{\n  label: 'IP',\n  field: 'ip',\n  msg: '请输入 IP 地址'\n}, {\n  label: 'UA',\n  field: 'userAgent',\n  msg: '请输入 User Agent'\n}, {\n  label: 'URL',\n  field: 'url',\n  msg: '请输入 URL'\n}, {\n  label: '地址',\n  field: 'address',\n  msg: '请输入地址'\n}, {\n  label: '浏览器',\n  field: 'browser',\n  msg: '请输入浏览器'\n}, {\n  label: '内核',\n  field: 'engine',\n  msg: '请输入内核'\n}, {\n  label: 'OS',\n  field: 'os',\n  msg: '请输入操作系统'\n}, {\n  label: '设备',\n  field: 'device',\n  msg: '请输入设备'\n}];\n\nconst Views = () => {\n  const _usePagination = usePagination(ViewProvider.getViews),\n        {\n    loading,\n    data,\n    refresh\n  } = _usePagination,\n        resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  const [deleteApi, deleteLoading] = useAsyncLoading(ViewProvider.deleteView);\n  const deleteAction = useCallback((ids, resetSelectedRows = null) => {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    return () => {\n      Promise.all(ids.map(id => deleteApi(id))).then(() => {\n        _message.success('操作成功');\n\n        resetSelectedRows && resetSelectedRows();\n        refresh();\n      });\n    };\n  }, [deleteApi, refresh]);\n\n  const actionColumn = resetSelectedRows => ({\n    title: '操作',\n    key: 'action',\n    fixed: 'right',\n    render: (_, record) => __jsx(\"span\", {\n      className: style.action\n    }, __jsx(_Popconfirm, {\n      title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u8BBF\\u95EE\\uFF1F\",\n      onConfirm: deleteAction(record.id, resetSelectedRows),\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\"\n    }, __jsx(\"a\", null, \"\\u5220\\u9664\")))\n  });\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: style.wrapper\n  }, __jsx(PaginationTable, _extends({\n    showSelection: true,\n    loading: loading,\n    data: data,\n    columns: resetSelectedRows => [...COMMON_COLUMNS, actionColumn(resetSelectedRows)],\n    refresh: refresh\n  }, resetPagination, {\n    renderLeftNode: ({\n      hasSelected,\n      selectedRowKeys,\n      resetSelectedRows\n    }) => hasSelected ? __jsx(_Popconfirm, {\n      title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n      onConfirm: deleteAction(selectedRowKeys, resetSelectedRows),\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\"\n    }, __jsx(_Button, {\n      disabled: !hasSelected,\n      loading: deleteLoading,\n      danger: true\n    }, \"\\u5220\\u9664\")) : null,\n    scroll: SCROLL,\n    searchFields: SEARCH_FIELDS\n  }))));\n};\n\nexport default Views;","map":null,"metadata":{},"sourceType":"module"}