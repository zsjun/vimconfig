{"ast":null,"code":"import \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useToggle } from '@/hooks/useToggle';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { KnowledgeProvider } from '@/providers/knowledge';\nimport { FileSelectDrawer } from '@/components/FileSelectDrawer';\nimport { Upload } from '@/components/Upload';\nexport const KnowledgeSettingDrawer = ({\n  visible,\n  toggleVisible,\n  book = null,\n  onOk\n}) => {\n  const isUpdate = book !== null;\n  const [fileVisible, toggleFileVisible] = useToggle(false);\n  const [createBookApi, createLoading] = useAsyncLoading(KnowledgeProvider.createBook);\n  const [updateBookApi, updateLoading] = useAsyncLoading(KnowledgeProvider.updateKnowledge);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(book && book.title || '');\n  const {\n    0: summary,\n    1: setSummary\n  } = useState(book && book.summary || '');\n  const {\n    0: isCommentable,\n    1: setCommentable\n  } = useState(book && book.isCommentable || true);\n  const {\n    0: cover,\n    1: setCover\n  } = useState(book && book.cover || '');\n  const ok = useCallback(() => {\n    const data = {\n      title: title.trim(),\n      cover,\n      summary: summary.trim(),\n      isCommentable\n    };\n    const promise = isUpdate ? updateBookApi(book.id, data) : createBookApi(data);\n    promise.then(res => {\n      _message.success(isUpdate ? '更新成功' : '创建成功');\n\n      toggleVisible();\n      onOk(res);\n    });\n  }, [title, summary, isCommentable, cover, isUpdate, updateBookApi, createBookApi, book, toggleVisible, onOk]);\n  useEffect(() => {\n    setTitle(book && book.title || '');\n    setSummary(book && book.summary || '');\n    setCommentable(book && book.isCommentable || false);\n    setCover(book && book.cover || '');\n  }, [book]);\n  return __jsx(_Drawer, {\n    title: isUpdate ? '更新知识库' : '新建知识库',\n    width: 600,\n    visible: visible,\n    onClose: toggleVisible\n  }, __jsx(\"div\", {\n    className: \"form-item\"\n  }, __jsx(\"label\", {\n    htmlFor: \"title\"\n  }, \"\\u540D\\u79F0\"), __jsx(\"div\", null, __jsx(_Input, {\n    id: \"title\",\n    value: title,\n    onChange: e => setTitle(e.target.value)\n  }))), __jsx(\"div\", {\n    className: \"form-item\"\n  }, __jsx(\"label\", {\n    htmlFor: \"summary\"\n  }, \"\\u63CF\\u8FF0\"), __jsx(\"div\", null, __jsx(_Input.TextArea, {\n    autoSize: {\n      minRows: 3,\n      maxRows: 6\n    },\n    id: \"summary\",\n    value: summary,\n    onChange: e => setSummary(e.target.value)\n  }))), __jsx(\"div\", {\n    className: \"form-item\"\n  }, __jsx(\"label\", {\n    htmlFor: \"title\"\n  }, \"\\u8BC4\\u8BBA\"), __jsx(\"div\", null, __jsx(_Switch, {\n    checked: isCommentable,\n    onChange: setCommentable\n  }))), __jsx(\"div\", {\n    className: \"form-item\"\n  }, __jsx(\"label\", {\n    htmlFor: \"upload\"\n  }, \"\\u5C01\\u9762\"), __jsx(\"div\", null, __jsx(Upload, {\n    style: {\n      width: '100%',\n      minHeight: 160\n    },\n    onChange: setCover\n  }, cover ? __jsx(\"img\", {\n    src: cover,\n    alt: \"avatar\",\n    style: {\n      width: '100%'\n    }\n  }) : null), __jsx(_Input, {\n    value: cover,\n    style: {\n      marginTop: 12\n    }\n  }), __jsx(_Button, {\n    style: {\n      marginTop: 12\n    },\n    onClick: toggleFileVisible\n  }, \"\\u9009\\u62E9\\u6587\\u4EF6\"), cover && __jsx(_Button, {\n    style: {\n      marginTop: 12,\n      marginLeft: 12\n    },\n    danger: true,\n    onClick: () => setCover('')\n  }, \"\\u79FB\\u9664\"))), __jsx(FileSelectDrawer, {\n    visible: fileVisible,\n    onClose: toggleFileVisible,\n    onChange: url => {\n      setCover(url);\n      toggleFileVisible();\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      width: '100%',\n      borderTop: '1px solid #e8e8e8',\n      padding: '10px 16px',\n      textAlign: 'right',\n      left: 0,\n      background: '#fff',\n      borderRadius: '0 0 4px 4px'\n    }\n  }, __jsx(_Button, {\n    onClick: toggleVisible\n  }, \"\\u53D6\\u6D88\"), __jsx(_Button, {\n    style: {\n      marginLeft: 8\n    },\n    type: \"primary\",\n    disabled: !title.trim(),\n    loading: isUpdate ? updateLoading : createLoading,\n    onClick: ok\n  }, isUpdate ? '更新' : '创建')));\n};","map":null,"metadata":{},"sourceType":"module"}