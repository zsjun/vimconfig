{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport { toLogin } from '@/utils/login';\nimport { UserProvider } from '@/providers/user';\nimport { SettingProvider } from '@/providers/setting';\nimport { GlobalContext } from '@/context/global';\nimport { NProgress } from '@components/NProgress';\nimport { Seo } from '@components/Seo';\nimport { FixAntdStyleTransition } from '@/components/FixAntdStyleTransition';\nimport { ViewStatistics } from '@/components/ViewStatistics';\nimport { Analytics } from '@/components/Analytics';\nimport '@ant-design/compatible/assets/index.css';\nimport 'highlight.js/styles/atom-one-light.css';\nimport 'viewerjs/dist/viewer.css';\nimport '@/theme/antd.less';\nimport '@/theme/reset.scss';\nimport '@/theme/markdown.scss';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      setting: {},\n      user: {},\n      collapsed: false\n    });\n\n    _defineProperty(this, \"setUser\", user => {\n      if (!user) {\n        return;\n      }\n\n      localStorage.setItem('user', JSON.stringify(user));\n      this.setState({\n        user\n      });\n    });\n\n    _defineProperty(this, \"getUserFromStorage\", () => {\n      const str = localStorage.getItem('user');\n\n      if (str) {\n        const user = JSON.parse(str);\n        this.setUser(user);\n        UserProvider.checkAdmin(user);\n      } else {\n        toLogin();\n      }\n    });\n\n    _defineProperty(this, \"getSetting\", () => {\n      SettingProvider.getSetting().then(res => {\n        this.setState({\n          setting: res\n        });\n      });\n    });\n\n    _defineProperty(this, \"toggleCollapse\", () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getSetting();\n    this.getUserFromStorage();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n\n    const contextValue = _objectSpread(_objectSpread({}, this.state), {}, {\n      setUser: this.setUser,\n      getSetting: this.getSetting,\n      toggleCollapse: this.toggleCollapse\n    });\n\n    return __jsx(_ConfigProvider, {\n      locale: zhCN\n    }, __jsx(GlobalContext.Provider, {\n      value: contextValue\n    }, __jsx(Seo, null), __jsx(FixAntdStyleTransition, null), __jsx(ViewStatistics, null), __jsx(Analytics, null), __jsx(NProgress, {\n      color: '#0188fb'\n    }), __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}