{"ast":null,"code":"import \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nvar DEFAULT_STYLE = {\n  height: '600px',\n  overflow: 'hidden',\n  border: '1px solid var(--border-color)',\n  marginBottom: 24\n};\nexport var JsonEditor = function JsonEditor(_ref) {\n  var value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? DEFAULT_STYLE : _ref$style;\n  var container = useRef(null);\n  var editorRef = useRef(null);\n\n  var _useState = useState(false),\n      mounted = _useState[0],\n      setMounted = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    if (!mounted) {\n      return;\n    }\n\n    editorRef.current.setValue(value);\n  }, [mounted, value]);\n  useEffect(function () {\n    Promise.all([import('monaco-editor/esm/vs/editor/editor.api.js')]).then(function (res) {\n      var monaco = res[0];\n      var editor = monaco.editor.create(container.current, {\n        language: 'json',\n        automaticLayout: true,\n        theme: 'vs',\n        scrollBeyondLastLine: false,\n        scrollbar: {\n          useShadows: false,\n          vertical: 'visible',\n          horizontal: 'visible',\n          verticalScrollbarSize: 6,\n          horizontalScrollbarSize: 6\n        }\n      });\n      editorRef.current = editor;\n      editor.onDidChangeModelContent(function () {\n        var content = editor.getValue();\n\n        try {\n          onChange(JSON.parse(content));\n          setError(null);\n        } catch (e) {\n          console.log(e);\n          setError(e);\n        }\n      });\n      setMounted(true);\n    });\n    return function () {\n      setMounted(false);\n      editorRef.current && editorRef.current.dispose();\n    };\n  }, [onChange]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    ref: container,\n    style: style\n  }, mounted ? null : __jsx(_Spin, {\n    tip: \"\\u7F16\\u8F91\\u5668\\u52AA\\u529B\\u52A0\\u8F7D\\u4E2D...\",\n    spinning: true\n  })), error ? __jsx(_Alert, {\n    style: {\n      marginBottom: 24\n    },\n    message: \"Json \\u683C\\u5F0F\\u5316\\u51FA\\u9519\",\n    type: \"error\",\n    showIcon: true\n  }) : null);\n};","map":null,"metadata":{},"sourceType":"module"}