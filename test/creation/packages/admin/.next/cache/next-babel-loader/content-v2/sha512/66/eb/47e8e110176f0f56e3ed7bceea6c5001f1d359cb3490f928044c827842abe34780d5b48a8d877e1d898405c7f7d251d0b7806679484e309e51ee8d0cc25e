{"ast":null,"code":"import \"antd/lib/drawer/style\";\nimport _Drawer from \"antd/lib/drawer\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useCallback, useRef } from 'react';\nimport Viewer from 'viewerjs';\nimport { copy } from '@/utils/copy';\nimport { FileProvider } from '@/providers/file';\nimport { Upload } from '@/components/Upload';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nconst {\n  Meta\n} = _Card;\nlet viewer = null;\nconst SEARCH_FIELDS = [{\n  label: '文件名称',\n  field: 'originalname',\n  msg: '请输入文件名称'\n}, {\n  label: '文件类型',\n  field: 'type',\n  msg: '请输入文件类型'\n}];\nconst GRID = {\n  gutter: 16,\n  xs: 1,\n  sm: 2,\n  md: 4,\n  lg: 4,\n  xl: 4,\n  xxl: 6\n};\nexport const FileSelectDrawer = ({\n  visible,\n  isCopy = false,\n  closeAfterClick = false,\n  onClose,\n  onChange\n}) => {\n  const ref = useRef();\n\n  const _usePagination = usePagination(FileProvider.getFiles),\n        {\n    loading,\n    data: files,\n    refresh\n  } = _usePagination,\n        resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  const previewImage = useCallback(e => {\n    e.stopPropagation();\n\n    if (!viewer) {\n      viewer = new Viewer(ref.current, {\n        inline: false\n      });\n    } else {\n      viewer.update();\n    }\n  }, []);\n  const clickImage = useCallback(file => {\n    isCopy && copy(file.url);\n    onChange && onChange(file.url);\n    closeAfterClick && onClose();\n  }, [isCopy, onChange, closeAfterClick, onClose]);\n  const renderList = useCallback(data => {\n    const renderItem = file => __jsx(_List.Item, {\n      key: file.id\n    }, __jsx(_Card, {\n      hoverable: true,\n      cover: __jsx(\"div\", {\n        className: style.preview,\n        onClick: previewImage\n      }, __jsx(\"img\", {\n        alt: file.originalname,\n        src: file.url\n      })),\n      onClick: () => clickImage(file)\n    }, __jsx(Meta, {\n      title: file.originalname\n    })));\n\n    return __jsx(_List, {\n      className: style.imgs,\n      grid: GRID,\n      dataSource: data,\n      renderItem: renderItem\n    });\n  }, [clickImage, previewImage]);\n  return __jsx(_Drawer, {\n    width: 786,\n    placement: \"right\",\n    title: '文件选择',\n    closable: true,\n    onClose: onClose,\n    visible: visible\n  }, isCopy && __jsx(\"div\", {\n    style: {\n      marginBottom: 16\n    }\n  }, __jsx(_Alert, {\n    message: \"\\u70B9\\u51FB\\u5361\\u7247\\u590D\\u5236\\u94FE\\u63A5\\uFF0C\\u70B9\\u51FB\\u56FE\\u7247\\u67E5\\u770B\\u5927\\u56FE\",\n    type: \"info\"\n  })), __jsx(\"div\", {\n    ref: ref\n  }, __jsx(PaginationTable, _extends({\n    loading: loading,\n    data: files\n  }, resetPagination, {\n    refresh: refresh,\n    searchFields: SEARCH_FIELDS,\n    rightNode: __jsx(Upload, {\n      onOK: refresh,\n      useDragger: false\n    }, __jsx(_Button, null, \"\\u4E0A\\u4F20\\u6587\\u4EF6\")),\n    customDataTable: renderList\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}