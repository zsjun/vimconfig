{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/alert/style\";\nimport _Alert from \"antd/lib/alert\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport Link from 'next/link';\nimport { useSetting } from '@/hooks/useSetting';\nimport { AdminLayout } from '@/layout/AdminLayout';\nimport { MailProvider } from '@/providers/mail';\nimport { LocaleTime } from '@/components/LocaleTime';\nimport { useAsyncLoading } from '@/hooks/useAsyncLoading';\nimport { usePagination } from '@/hooks/usePagination';\nimport { PaginationTable } from '@/components/PaginationTable';\nimport style from './index.module.scss';\nconst SCROLL = {\n  x: 1440\n};\nconst SEARCH_FIELDS = [{\n  label: '发件人',\n  field: 'from',\n  msg: '请输入发件人'\n}, {\n  label: '收件人',\n  field: 'to',\n  msg: '请输入收件人'\n}, {\n  label: '主题',\n  field: 'subject',\n  msg: '请输入主题'\n}];\nconst COMMON_COLUMNS = [{\n  title: '发件人',\n  dataIndex: 'from',\n  key: 'from'\n}, {\n  title: '收件人',\n  dataIndex: 'to',\n  key: 'to'\n}, {\n  title: '主题',\n  dataIndex: 'subject',\n  key: 'subject'\n}];\nconst TIME_COLUMN = {\n  title: '发送时间',\n  dataIndex: 'createAt',\n  key: 'createAt',\n  render: date => __jsx(LocaleTime, {\n    date: date\n  })\n};\n\nconst Mail = () => {\n  const setting = useSetting();\n\n  const _usePagination = usePagination(MailProvider.getMails),\n        {\n    loading,\n    data: mails,\n    refresh\n  } = _usePagination,\n        resetPagination = _objectWithoutProperties(_usePagination, [\"loading\", \"data\", \"refresh\"]);\n\n  const [deleteApi, deleteLoading] = useAsyncLoading(MailProvider.deleteMail);\n  const {\n    0: selectedMail,\n    1: setSelectedMail\n  } = useState(null);\n  const isSmtpSettingFullfilled = useMemo(() => {\n    return setting && setting.smtpHost && setting.smtpPort && setting.smtpUser && setting.smtpFromUser && setting.smtpFromUser;\n  }, [setting]);\n  const deleteAction = useCallback((ids, resetSelectedRows = null) => {\n    if (!Array.isArray(ids)) {\n      ids = [ids];\n    }\n\n    return () => {\n      Promise.all(ids.map(id => deleteApi(id))).then(() => {\n        _message.success('操作成功');\n\n        resetSelectedRows && resetSelectedRows();\n        refresh();\n      });\n    };\n  }, [deleteApi, refresh]);\n  const contentColumn = [{\n    title: '内容',\n    dataIndex: 'html',\n    key: 'html',\n    render: (_, record) => __jsx(_Button, {\n      type: \"link\",\n      style: {\n        paddingLeft: 0\n      },\n      onClick: () => {\n        setSelectedMail(record);\n      }\n    }, \"\\u70B9\\u51FB\\u67E5\\u770B\")\n  }];\n\n  const actionColumn = resetSelectedRows => ({\n    title: '操作',\n    key: 'action',\n    render: (_, record) => __jsx(\"span\", {\n      className: style.action\n    }, __jsx(_Popconfirm, {\n      title: \"\\u786E\\u8BA4\\u5220\\u9664\\u8FD9\\u4E2A\\u90AE\\u4EF6\\uFF1F\",\n      onConfirm: deleteAction(record.id, resetSelectedRows),\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\"\n    }, __jsx(\"a\", null, \"\\u5220\\u9664\")))\n  });\n\n  return __jsx(AdminLayout, null, __jsx(\"div\", {\n    className: style.wrapper\n  }, !isSmtpSettingFullfilled ? __jsx(\"div\", {\n    style: {\n      marginBottom: 24\n    }\n  }, __jsx(_Alert, {\n    message: __jsx(\"span\", null, \"\\u7CFB\\u7EDF\\u68C0\\u6D4B\\u5230\", __jsx(\"strong\", null, \"SMTP \\u914D\\u7F6E\"), \"\\u672A\\u5B8C\\u5584\\uFF0C\\u5F53\\u6536\\u5230\\u8BC4\\u8BBA\\u65F6\\uFF0C\\u65E0\\u6CD5\\u8FDB\\u884C\\u90AE\\u4EF6\\u901A\\u77E5\\u3002\", __jsx(Link, {\n      href: \"/setting?type=SMTP%20\\u670D\\u52A1\"\n    }, __jsx(\"a\", null, \"\\u70B9\\u6211\\u7ACB\\u5373\\u5B8C\\u5584\"))),\n    type: \"warning\"\n  })) : null, __jsx(PaginationTable, _extends({\n    showSelection: true,\n    loading: loading,\n    data: mails,\n    columns: resetSelectedRows => [...COMMON_COLUMNS, contentColumn, TIME_COLUMN, actionColumn(resetSelectedRows)],\n    refresh: refresh\n  }, resetPagination, {\n    renderLeftNode: ({\n      hasSelected,\n      selectedRowKeys,\n      resetSelectedRows\n    }) => hasSelected ? __jsx(_Popconfirm, {\n      title: \"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\",\n      onConfirm: deleteAction(selectedRowKeys, resetSelectedRows),\n      okText: \"\\u786E\\u8BA4\",\n      cancelText: \"\\u53D6\\u6D88\"\n    }, __jsx(_Button, {\n      disabled: !hasSelected,\n      loading: deleteLoading,\n      danger: true\n    }, \"\\u5220\\u9664\")) : null,\n    scroll: SCROLL,\n    searchFields: SEARCH_FIELDS\n  })), __jsx(_Modal, {\n    title: '发送内容',\n    visible: selectedMail,\n    footer: null,\n    width: 786 + 48,\n    onCancel: () => {\n      setSelectedMail(null);\n    },\n    transitionName: '',\n    maskTransitionName: ''\n  }, __jsx(\"div\", {\n    className: \"markdown\",\n    style: {\n      overflow: 'auto !important'\n    },\n    dangerouslySetInnerHTML: {\n      __html: selectedMail && selectedMail.html\n    }\n  }))));\n};\n\nexport default Mail;","map":null,"metadata":{},"sourceType":"module"}