{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Pagination } from '@/components/Pagination';\nimport { Search } from '@/components/Search';\nimport style from './index.module.scss'; // eslint-disable-next-line @typescript-eslint/ban-types\n\nconst rowKey = 'id';\nexport const PaginationTable = ({\n  loading,\n  data,\n  total,\n  page,\n  pageSize,\n  setPage,\n  setPageSize,\n  setParams,\n  refresh,\n  title,\n  showSelection = false,\n  renderLeftNode,\n  rightNode,\n  padding = '24px 12px',\n  scroll = null,\n  searchFields = [],\n  showSearchLabel = true,\n  columns = [],\n  customDataTable = null\n}) => {\n  const {\n    0: selectedRowKeys,\n    1: setSelectedRowKeys\n  } = useState([]);\n  const hasSelected = selectedRowKeys.length > 0;\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: setSelectedRowKeys\n  };\n\n  const resetSelectedRows = () => {\n    setSelectedRowKeys([]);\n  };\n\n  const leftNode = renderLeftNode && renderLeftNode({\n    hasSelected,\n    selectedRowKeys,\n    selectedRows: selectedRowKeys.map(id => data.find(item => item[rowKey] === id)),\n    resetSelectedRows\n  });\n  return __jsx(\"div\", {\n    className: style.wrapper\n  }, __jsx(Search, {\n    fields: searchFields,\n    showLabel: showSearchLabel,\n    padding: padding,\n    onSearch: params => {\n      setPage(1);\n      setParams(params);\n    }\n  }), __jsx(\"div\", {\n    style: {\n      background: '#fff',\n      padding\n    }\n  }, customDataTable ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.tableHeader\n  }, __jsx(\"div\", null, title, leftNode), __jsx(\"div\", null, rightNode)), __jsx(_Spin, {\n    spinning: loading\n  }, customDataTable(data))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: style.tableHeader\n  }, __jsx(\"div\", null, title, leftNode), __jsx(\"div\", null, rightNode, __jsx(_Tooltip, {\n    title: \"\\u5237\\u65B0\"\n  }, __jsx(ReloadOutlined, {\n    onClick: refresh,\n    style: {\n      marginLeft: 12\n    }\n  })))), __jsx(_Table, _extends({\n    loading: loading,\n    columns: typeof columns === 'function' ? columns(resetSelectedRows) : columns,\n    dataSource: data,\n    rowKey: rowKey,\n    pagination: false\n  }, scroll ? {\n    scroll\n  } : {}, showSelection ? {\n    rowSelection\n  } : {}))), __jsx(Pagination, {\n    page: page,\n    pageSize: pageSize,\n    total: total,\n    onChange: (page, pageSize) => {\n      setPage(page);\n      setPageSize(pageSize);\n    }\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}